{"version":3,"file":"main.js","sources":["../node_modules/svelte/internal/index.mjs","../src/apps/App.svelte","../node_modules/svelte/store/index.mjs","../node_modules/@sveltejs/gl/internal/index.mjs","../node_modules/@sveltejs/gl/internal/utils.mjs","../node_modules/gl-matrix/esm/common.js","../node_modules/gl-matrix/esm/mat4.js","../node_modules/gl-matrix/esm/vec3.js","../node_modules/@sveltejs/gl/scene/Scene.svelte","../node_modules/gl-matrix/esm/vec4.js","../node_modules/gl-matrix/esm/quat.js","../node_modules/gl-matrix/esm/mat3.js","../node_modules/@sveltejs/gl/scene/Group.svelte","../node_modules/@sveltejs/gl/scene/Mesh/program.mjs","../node_modules/@sveltejs/gl/scene/Mesh/Material.mjs","../node_modules/@sveltejs/gl/scene/Mesh/index.svelte","../node_modules/@sveltejs/gl/scene/Target.svelte","../node_modules/@sveltejs/gl/scene/lights/AmbientLight.svelte","../node_modules/@sveltejs/gl/scene/lights/DirectionalLight.svelte","../node_modules/@sveltejs/gl/scene/lights/PointLight.svelte","../node_modules/yootils/yootils.es.js","../node_modules/@sveltejs/gl/controls/debounce.js","../node_modules/@sveltejs/gl/controls/OrbitControls.svelte","../node_modules/@sveltejs/gl/scene/cameras/PerspectiveCamera.svelte","../node_modules/@sveltejs/gl/geometry/Geometry.mjs","../node_modules/@sveltejs/gl/geometry/box.mjs","../node_modules/@sveltejs/gl/geometry/plane.mjs","../node_modules/@sveltejs/gl/geometry/icosphere.mjs","../node_modules/@sveltejs/gl/geometry/sphere.mjs","../node_modules/@sveltejs/gl/internal/image.mjs","../src/apps/GLApp.svelte","../src/apps/components/NavigationControls.svelte","../src/apps/VizRApp.svelte","../src/apps/components/Keypad.svelte","../src/apps/TechApp.svelte","../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value = ret) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction claim_element(nodes, name, attributes, svg) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeName === name) {\n            let j = 0;\n            const remove = [];\n            while (j < node.attributes.length) {\n                const attribute = node.attributes[j++];\n                if (!attributes[attribute.name]) {\n                    remove.push(attribute.name);\n                }\n            }\n            for (let k = 0; k < remove.length; k++) {\n                node.removeAttribute(remove[k]);\n            }\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return svg ? svg_element(name) : element(name);\n}\nfunction claim_text(nodes, data) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 3) {\n            node.data = '' + data;\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return text(data);\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    const z_index = (parseInt(computed_style.zIndex) || 0) - 1;\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', `display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ` +\n        `overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: ${z_index};`);\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = `data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>`;\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, false, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor(anchor = null) {\n        this.a = anchor;\n        this.e = this.n = null;\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            this.h(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\n\nconst active_docs = new Set();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = node.ownerDocument;\n    active_docs.add(doc);\n    const stylesheet = doc.__svelte_stylesheet || (doc.__svelte_stylesheet = doc.head.appendChild(element('style')).sheet);\n    const current_rules = doc.__svelte_rules || (doc.__svelte_rules = {});\n    if (!current_rules[name]) {\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ``}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        active_docs.forEach(doc => {\n            const stylesheet = doc.__svelte_stylesheet;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            doc.__svelte_rules = {};\n        });\n        active_docs.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error(`Function called outside component initialization`);\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        callbacks.slice().forEach(fn => fn(event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nlet flushing = false;\nconst seen_callbacks = new Set();\nfunction flush() {\n    if (flushing)\n        return;\n    flushing = true;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        for (let i = 0; i < dirty_components.length; i += 1) {\n            const component = dirty_components[i];\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    flushing = false;\n    seen_callbacks.clear();\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = program.b - t;\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            info.blocks[i] = null;\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error(`Cannot have duplicate keys in a keyed each`);\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += \" \" + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += \" \" + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${String(value).replace(/\"/g, '&#34;').replace(/'/g, '&#39;')}\"`;\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(parent_component ? parent_component.$$.context : []),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, options = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, options);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : ``;\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    // onMount happens before the initial afterUpdate\n    add_render_callback(() => {\n        const new_on_destroy = on_mount.map(run).filter(is_function);\n        if (on_destroy) {\n            on_destroy.push(...new_on_destroy);\n        }\n        else {\n            // Edge case - component was destroyed immediately,\n            // most likely as a result of a binding initialising\n            run_all(new_on_destroy);\n        }\n        component.$$.on_mount = [];\n    });\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const prop_values = options.props || {};\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(parent_component ? parent_component.$$.context : []),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false\n    };\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, prop_values, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor);\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.26.0' }, detail)));\n}\nfunction append_dev(target, node) {\n    dispatch_dev(\"SvelteDOMInsert\", { target, node });\n    append(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev(\"SvelteDOMInsert\", { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev(\"SvelteDOMRemove\", { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? [\"capture\"] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev(\"SvelteDOMAddEventListener\", { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev(\"SvelteDOMRemoveEventListener\", { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev(\"SvelteDOMRemoveAttribute\", { node, attribute });\n    else\n        dispatch_dev(\"SvelteDOMSetAttribute\", { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev(\"SvelteDOMSetProperty\", { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev(\"SvelteDOMSetDataset\", { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev(\"SvelteDOMSetData\", { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(`'target' is a required option`);\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn(`Component was already destroyed`); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error(`Infinite loop detected`);\n        }\n    };\n}\n\nexport { HtmlTag, SvelteComponent, SvelteComponentDev, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, assign, attr, attr_dev, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_space, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, escape, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getContext, get_binding_group_value, get_current_component, get_slot_changes, get_slot_context, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, has_prop, identity, init, insert, insert_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, listen, listen_dev, loop, loop_guard, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, update_keyed_each, update_slot, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","<script>\n\timport { onMount } from 'svelte';\n\n\texport let greeting;\n\n\tlet pin;\n\tlet view;\n\t$: view = pin ? pin.replace(/\\d(?!$)/g, '*') : 'enter your pin';\n\n\tfunction handleSubmit() {\n\t\talert(`submitted ${pin}`);\n\t}\n\n\tlet canvas;\n\n\tonMount(() => {\n\t\tconst ctx = canvas.getContext(\"2d\");\n\t\tctx.fillStyle = \"#00f\";\n\t\tctx.fillRect(0, 0, canvas.width, canvas.height);\n\t\tctx.fillStyle = \"#fff\";\n\t\tctx.font = \"20px Arial\";\n\t\tctx.fillText(\"2d Canvas works, too\", 10, 100);\n\n\t\tlet frame;\n\n\t\t(function loop() {\n\t\t\tframe = requestAnimationFrame(loop);\n\n\t\t\tconst imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n\n\t\t\tfor (let p = 0; p < imageData.data.length; p += 4) {\n\t\t\t\tconst i = p / 4;\n\t\t\t\tconst x = i % canvas.width;\n\t\t\t\tconst y = i / canvas.height >>> 0;\n\n\t\t\t\tconst t = window.performance.now();\n\n\t\t\t\tconst r = 64 + (128 * x / canvas.width) + (64 * Math.sin(t / 1000));\n\t\t\t\tconst g = 64 + (128 * y / canvas.height) + (64 * Math.cos(t / 1000));\n\t\t\t\tconst b = 128;\n\n\t\t\t\timageData.data[p + 0] = r;\n\t\t\t\timageData.data[p + 1] = g;\n\t\t\t\timageData.data[p + 2] = b;\n\t\t\t\timageData.data[p + 3] = 255;\n\t\t\t}\n\n\t\t\tctx.putImageData(imageData, 0, 0);\n\t\t}());\n\n\t\treturn () => {\n\t\t\tcancelAnimationFrame(frame);\n\t\t};\n\t});\n</script>\n\n<style>\n\tcanvas {\n\t\twidth: 100%;\n\t\theight: 100%;\n\t\tbackground-color: #666;\n\t\t-webkit-mask: url(\"../images/svelte-logo-mask.svg\") 50% 50% content-box view-box no-repeat;\n\t\tmask: url(\"../images/svelte-logo-mask.svg\") 50% 50% content-box view-box no-repeat;\n\t}\n\t#view {\n\t\ttext-align: center;\n\t}\n</style>\n\n<div id=\"view\">\n\t<h3>{@html greeting}</h3>\n\t<canvas\n\t\t\tbind:this={canvas}\n\t\t\twidth={32}\n\t\t\theight={32}\n\t></canvas>\n</div>\n","import { noop, safe_not_equal, subscribe, run_all, is_function } from '../internal';\nexport { get_store_value as get } from '../internal';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier}start start and stop notifications for subscriptions\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=}start start and stop notifications for subscriptions\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = [];\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (let i = 0; i < subscribers.length; i += 1) {\n                    const s = subscribers[i];\n                    s[1]();\n                    subscriber_queue.push(s, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.push(subscriber);\n        if (subscribers.length === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            const index = subscribers.indexOf(subscriber);\n            if (index !== -1) {\n                subscribers.splice(index, 1);\n            }\n            if (subscribers.length === 0) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let inited = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => subscribe(store, (value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (inited) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        inited = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n        };\n    });\n}\n\nexport { derived, readable, writable };\n","import { getContext, setContext, onDestroy } from 'svelte';\n\nexport const RENDERER = {};\nexport const LAYER = {};\nexport const PARENT = {};\nexport const CAMERA = {};\n\nexport function get_scene() {\n\treturn getContext(RENDERER);\n}\n\nexport function get_layer() {\n\treturn getContext(LAYER);\n}\n\nexport function get_parent() {\n\treturn getContext(PARENT);\n}\n\nexport function get_camera() {\n\treturn getContext(CAMERA);\n}\n\nexport function set_layer(layer) {\n\tsetContext(LAYER, layer);\n}\n\nexport function set_parent(parent) {\n\tsetContext(PARENT, parent);\n}\n\nfunction remove_index(array, index) {\n\tarray[index] = array[array.length - 1];\n\tarray.pop();\n}\n\nfunction remove_item(array, item) {\n\tconst index = array.indexOf(item);\n\tif (~index) remove_index(array, index);\n}\n\nexport function create_layer(index, invalidate) {\n\tlet child_index = 0;\n\n\tconst meshes = [];\n\tconst transparent_meshes = [];\n\tconst child_layers = [];\n\n\tconst layer = {\n\t\tindex: 0,\n\t\tmeshes,\n\t\ttransparent_meshes,\n\t\tchild_layers,\n\t\tneeds_sort: false,\n\t\tneeds_transparency_sort: true,\n\t\tadd_mesh: (mesh, existing) => {\n\t\t\tif (existing) {\n\t\t\t\tremove_item(mesh.transparent ? meshes : transparent_meshes, mesh);\n\t\t\t}\n\n\t\t\tif (mesh.transparent) {\n\t\t\t\ttransparent_meshes.push(mesh);\n\t\t\t\tlayer.needs_transparency_sort = true;\n\t\t\t} else {\n\t\t\t\tmeshes.push(mesh);\n\t\t\t}\n\n\t\t\tonDestroy(() => {\n\t\t\t\tremove_item(meshes, mesh);\n\t\t\t\tremove_item(transparent_meshes, mesh);\n\t\t\t\tinvalidate();\n\t\t\t});\n\t\t},\n\t\tadd_child: (index = child_index++) => {\n\t\t\tconst child_layer = create_layer(index, invalidate);\n\t\t\tchild_layers.push(child_layer);\n\n\t\t\tlayer.needs_sort = true;\n\n\t\t\tonDestroy(() => {\n\t\t\t\tremove_item(child_layers, child_layer);\n\n\t\t\t\tlayer.needs_sort = true;\n\t\t\t\tinvalidate();\n\t\t\t});\n\n\t\t\treturn child_layer;\n\t\t}\n\t};\n\n\treturn layer;\n}","export function process_color(color) {\n\tif (typeof color === 'number') {\n\t\tconst r = (color & 0xff0000) >> 16;\n\t\tconst g = (color & 0x00ff00) >> 8;\n\t\tconst b = (color & 0x0000ff);\n\n\t\treturn new Float32Array([\n\t\t\tr / 255,\n\t\t\tg / 255,\n\t\t\tb / 255\n\t\t]);\n\t}\n\n\treturn color;\n}\n\nexport function normalize(out, vector = out) {\n\tlet total = 0;\n\tfor (let i = 0; i < vector.length; i += 1) {\n\t\ttotal += vector[i] * vector[i];\n\t}\n\n\tconst mag = Math.sqrt(total);\n\n\tout[0] = vector[0] / mag;\n\tout[1] = vector[1] / mag;\n\tout[2] = vector[2] / mag;\n\n\treturn out;\n}\n\nexport function create_worker(url, fn) {\n\tconst worker = new Worker(url);\n\tconst code = fn.toString().replace(/^(function.+?|.+?=>\\s*)\\{/g, '').slice(0, -1);\n\n\tworker.postMessage(code);\n\n\treturn worker;\n}\n\nexport function memoize(fn) {\n\tconst cache = new Map();\n\treturn (...args) => {\n\t\tconst hash = JSON.stringify(args);\n\t\tif (!cache.has(hash)) cache.set(hash, fn(...args));\n\t\treturn cache.get(hash);\n\t};\n}","/**\r\n * Common utilities\r\n * @module glMatrix\r\n */\n// Configuration Constants\nexport var EPSILON = 0.000001;\nexport var ARRAY_TYPE = typeof Float32Array !== 'undefined' ? Float32Array : Array;\nexport var RANDOM = Math.random;\n/**\r\n * Sets the type of array used when creating new vectors and matrices\r\n *\r\n * @param {Float32ArrayConstructor | ArrayConstructor} type Array type, such as Float32Array or Array\r\n */\n\nexport function setMatrixArrayType(type) {\n  ARRAY_TYPE = type;\n}\nvar degree = Math.PI / 180;\n/**\r\n * Convert Degree To Radian\r\n *\r\n * @param {Number} a Angle in Degrees\r\n */\n\nexport function toRadian(a) {\n  return a * degree;\n}\n/**\r\n * Tests whether or not the arguments have approximately the same value, within an absolute\r\n * or relative tolerance of glMatrix.EPSILON (an absolute tolerance is used for values less\r\n * than or equal to 1.0, and a relative tolerance is used for larger values)\r\n *\r\n * @param {Number} a The first number to test.\r\n * @param {Number} b The second number to test.\r\n * @returns {Boolean} True if the numbers are approximately equal, false otherwise.\r\n */\n\nexport function equals(a, b) {\n  return Math.abs(a - b) <= EPSILON * Math.max(1.0, Math.abs(a), Math.abs(b));\n}\nif (!Math.hypot) Math.hypot = function () {\n  var y = 0,\n      i = arguments.length;\n\n  while (i--) {\n    y += arguments[i] * arguments[i];\n  }\n\n  return Math.sqrt(y);\n};","import * as glMatrix from \"./common.js\";\n/**\r\n * 4x4 Matrix<br>Format: column-major, when typed out it looks like row-major<br>The matrices are being post multiplied.\r\n * @module mat4\r\n */\n\n/**\r\n * Creates a new identity mat4\r\n *\r\n * @returns {mat4} a new 4x4 matrix\r\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(16);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n  }\n\n  out[0] = 1;\n  out[5] = 1;\n  out[10] = 1;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a new mat4 initialized with values from an existing matrix\r\n *\r\n * @param {ReadonlyMat4} a matrix to clone\r\n * @returns {mat4} a new 4x4 matrix\r\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\r\n * Copy the values from one mat4 to another\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the source matrix\r\n * @returns {mat4} out\r\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\r\n * Create a new mat4 with the given values\r\n *\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\r\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\r\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\r\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\r\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\r\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\r\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\r\n * @returns {mat4} A new mat4\r\n */\n\nexport function fromValues(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  var out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n/**\r\n * Set the components of a mat4 to the given values\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\r\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\r\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\r\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\r\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\r\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\r\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\r\n * @returns {mat4} out\r\n */\n\nexport function set(out, m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n/**\r\n * Set a mat4 to the identity matrix\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @returns {mat4} out\r\n */\n\nexport function identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Transpose the values of a mat4\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the source matrix\r\n * @returns {mat4} out\r\n */\n\nexport function transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\n  if (out === a) {\n    var a01 = a[1],\n        a02 = a[2],\n        a03 = a[3];\n    var a12 = a[6],\n        a13 = a[7];\n    var a23 = a[11];\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a01;\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a02;\n    out[9] = a12;\n    out[11] = a[14];\n    out[12] = a03;\n    out[13] = a13;\n    out[14] = a23;\n  } else {\n    out[0] = a[0];\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a[1];\n    out[5] = a[5];\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a[2];\n    out[9] = a[6];\n    out[10] = a[10];\n    out[11] = a[14];\n    out[12] = a[3];\n    out[13] = a[7];\n    out[14] = a[11];\n    out[15] = a[15];\n  }\n\n  return out;\n}\n/**\r\n * Inverts a mat4\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the source matrix\r\n * @returns {mat4} out\r\n */\n\nexport function invert(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n  out[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n  out[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n  out[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\n  out[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n  out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n  out[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n  out[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\n  out[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n  out[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n  out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n  out[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\n  out[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\n  out[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\n  out[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\n  out[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\n  return out;\n}\n/**\r\n * Calculates the adjugate of a mat4\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the source matrix\r\n * @returns {mat4} out\r\n */\n\nexport function adjoint(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  out[0] = a11 * (a22 * a33 - a23 * a32) - a21 * (a12 * a33 - a13 * a32) + a31 * (a12 * a23 - a13 * a22);\n  out[1] = -(a01 * (a22 * a33 - a23 * a32) - a21 * (a02 * a33 - a03 * a32) + a31 * (a02 * a23 - a03 * a22));\n  out[2] = a01 * (a12 * a33 - a13 * a32) - a11 * (a02 * a33 - a03 * a32) + a31 * (a02 * a13 - a03 * a12);\n  out[3] = -(a01 * (a12 * a23 - a13 * a22) - a11 * (a02 * a23 - a03 * a22) + a21 * (a02 * a13 - a03 * a12));\n  out[4] = -(a10 * (a22 * a33 - a23 * a32) - a20 * (a12 * a33 - a13 * a32) + a30 * (a12 * a23 - a13 * a22));\n  out[5] = a00 * (a22 * a33 - a23 * a32) - a20 * (a02 * a33 - a03 * a32) + a30 * (a02 * a23 - a03 * a22);\n  out[6] = -(a00 * (a12 * a33 - a13 * a32) - a10 * (a02 * a33 - a03 * a32) + a30 * (a02 * a13 - a03 * a12));\n  out[7] = a00 * (a12 * a23 - a13 * a22) - a10 * (a02 * a23 - a03 * a22) + a20 * (a02 * a13 - a03 * a12);\n  out[8] = a10 * (a21 * a33 - a23 * a31) - a20 * (a11 * a33 - a13 * a31) + a30 * (a11 * a23 - a13 * a21);\n  out[9] = -(a00 * (a21 * a33 - a23 * a31) - a20 * (a01 * a33 - a03 * a31) + a30 * (a01 * a23 - a03 * a21));\n  out[10] = a00 * (a11 * a33 - a13 * a31) - a10 * (a01 * a33 - a03 * a31) + a30 * (a01 * a13 - a03 * a11);\n  out[11] = -(a00 * (a11 * a23 - a13 * a21) - a10 * (a01 * a23 - a03 * a21) + a20 * (a01 * a13 - a03 * a11));\n  out[12] = -(a10 * (a21 * a32 - a22 * a31) - a20 * (a11 * a32 - a12 * a31) + a30 * (a11 * a22 - a12 * a21));\n  out[13] = a00 * (a21 * a32 - a22 * a31) - a20 * (a01 * a32 - a02 * a31) + a30 * (a01 * a22 - a02 * a21);\n  out[14] = -(a00 * (a11 * a32 - a12 * a31) - a10 * (a01 * a32 - a02 * a31) + a30 * (a01 * a12 - a02 * a11));\n  out[15] = a00 * (a11 * a22 - a12 * a21) - a10 * (a01 * a22 - a02 * a21) + a20 * (a01 * a12 - a02 * a11);\n  return out;\n}\n/**\r\n * Calculates the determinant of a mat4\r\n *\r\n * @param {ReadonlyMat4} a the source matrix\r\n * @returns {Number} determinant of a\r\n */\n\nexport function determinant(a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  return b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n}\n/**\r\n * Multiplies two mat4s\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the first operand\r\n * @param {ReadonlyMat4} b the second operand\r\n * @returns {mat4} out\r\n */\n\nexport function multiply(out, a, b) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15]; // Cache only the current line of the second matrix\n\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  out[0] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[1] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[2] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[3] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[4];\n  b1 = b[5];\n  b2 = b[6];\n  b3 = b[7];\n  out[4] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[5] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[6] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[7] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[8];\n  b1 = b[9];\n  b2 = b[10];\n  b3 = b[11];\n  out[8] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[9] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[10] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[11] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[12];\n  b1 = b[13];\n  b2 = b[14];\n  b3 = b[15];\n  out[12] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[13] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[14] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[15] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  return out;\n}\n/**\r\n * Translate a mat4 by the given vector\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the matrix to translate\r\n * @param {ReadonlyVec3} v vector to translate by\r\n * @returns {mat4} out\r\n */\n\nexport function translate(out, a, v) {\n  var x = v[0],\n      y = v[1],\n      z = v[2];\n  var a00, a01, a02, a03;\n  var a10, a11, a12, a13;\n  var a20, a21, a22, a23;\n\n  if (a === out) {\n    out[12] = a[0] * x + a[4] * y + a[8] * z + a[12];\n    out[13] = a[1] * x + a[5] * y + a[9] * z + a[13];\n    out[14] = a[2] * x + a[6] * y + a[10] * z + a[14];\n    out[15] = a[3] * x + a[7] * y + a[11] * z + a[15];\n  } else {\n    a00 = a[0];\n    a01 = a[1];\n    a02 = a[2];\n    a03 = a[3];\n    a10 = a[4];\n    a11 = a[5];\n    a12 = a[6];\n    a13 = a[7];\n    a20 = a[8];\n    a21 = a[9];\n    a22 = a[10];\n    a23 = a[11];\n    out[0] = a00;\n    out[1] = a01;\n    out[2] = a02;\n    out[3] = a03;\n    out[4] = a10;\n    out[5] = a11;\n    out[6] = a12;\n    out[7] = a13;\n    out[8] = a20;\n    out[9] = a21;\n    out[10] = a22;\n    out[11] = a23;\n    out[12] = a00 * x + a10 * y + a20 * z + a[12];\n    out[13] = a01 * x + a11 * y + a21 * z + a[13];\n    out[14] = a02 * x + a12 * y + a22 * z + a[14];\n    out[15] = a03 * x + a13 * y + a23 * z + a[15];\n  }\n\n  return out;\n}\n/**\r\n * Scales the mat4 by the dimensions in the given vec3 not using vectorization\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the matrix to scale\r\n * @param {ReadonlyVec3} v the vec3 to scale the matrix by\r\n * @returns {mat4} out\r\n **/\n\nexport function scale(out, a, v) {\n  var x = v[0],\n      y = v[1],\n      z = v[2];\n  out[0] = a[0] * x;\n  out[1] = a[1] * x;\n  out[2] = a[2] * x;\n  out[3] = a[3] * x;\n  out[4] = a[4] * y;\n  out[5] = a[5] * y;\n  out[6] = a[6] * y;\n  out[7] = a[7] * y;\n  out[8] = a[8] * z;\n  out[9] = a[9] * z;\n  out[10] = a[10] * z;\n  out[11] = a[11] * z;\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\r\n * Rotates a mat4 by the given angle around the given axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @param {ReadonlyVec3} axis the axis to rotate around\r\n * @returns {mat4} out\r\n */\n\nexport function rotate(out, a, rad, axis) {\n  var x = axis[0],\n      y = axis[1],\n      z = axis[2];\n  var len = Math.hypot(x, y, z);\n  var s, c, t;\n  var a00, a01, a02, a03;\n  var a10, a11, a12, a13;\n  var a20, a21, a22, a23;\n  var b00, b01, b02;\n  var b10, b11, b12;\n  var b20, b21, b22;\n\n  if (len < glMatrix.EPSILON) {\n    return null;\n  }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c;\n  a00 = a[0];\n  a01 = a[1];\n  a02 = a[2];\n  a03 = a[3];\n  a10 = a[4];\n  a11 = a[5];\n  a12 = a[6];\n  a13 = a[7];\n  a20 = a[8];\n  a21 = a[9];\n  a22 = a[10];\n  a23 = a[11]; // Construct the elements of the rotation matrix\n\n  b00 = x * x * t + c;\n  b01 = y * x * t + z * s;\n  b02 = z * x * t - y * s;\n  b10 = x * y * t - z * s;\n  b11 = y * y * t + c;\n  b12 = z * y * t + x * s;\n  b20 = x * z * t + y * s;\n  b21 = y * z * t - x * s;\n  b22 = z * z * t + c; // Perform rotation-specific matrix multiplication\n\n  out[0] = a00 * b00 + a10 * b01 + a20 * b02;\n  out[1] = a01 * b00 + a11 * b01 + a21 * b02;\n  out[2] = a02 * b00 + a12 * b01 + a22 * b02;\n  out[3] = a03 * b00 + a13 * b01 + a23 * b02;\n  out[4] = a00 * b10 + a10 * b11 + a20 * b12;\n  out[5] = a01 * b10 + a11 * b11 + a21 * b12;\n  out[6] = a02 * b10 + a12 * b11 + a22 * b12;\n  out[7] = a03 * b10 + a13 * b11 + a23 * b12;\n  out[8] = a00 * b20 + a10 * b21 + a20 * b22;\n  out[9] = a01 * b20 + a11 * b21 + a21 * b22;\n  out[10] = a02 * b20 + a12 * b21 + a22 * b22;\n  out[11] = a03 * b20 + a13 * b21 + a23 * b22;\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged last row\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  }\n\n  return out;\n}\n/**\r\n * Rotates a matrix by the given angle around the X axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function rotateX(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a10 = a[4];\n  var a11 = a[5];\n  var a12 = a[6];\n  var a13 = a[7];\n  var a20 = a[8];\n  var a21 = a[9];\n  var a22 = a[10];\n  var a23 = a[11];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged rows\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[4] = a10 * c + a20 * s;\n  out[5] = a11 * c + a21 * s;\n  out[6] = a12 * c + a22 * s;\n  out[7] = a13 * c + a23 * s;\n  out[8] = a20 * c - a10 * s;\n  out[9] = a21 * c - a11 * s;\n  out[10] = a22 * c - a12 * s;\n  out[11] = a23 * c - a13 * s;\n  return out;\n}\n/**\r\n * Rotates a matrix by the given angle around the Y axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function rotateY(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a00 = a[0];\n  var a01 = a[1];\n  var a02 = a[2];\n  var a03 = a[3];\n  var a20 = a[8];\n  var a21 = a[9];\n  var a22 = a[10];\n  var a23 = a[11];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged rows\n    out[4] = a[4];\n    out[5] = a[5];\n    out[6] = a[6];\n    out[7] = a[7];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[0] = a00 * c - a20 * s;\n  out[1] = a01 * c - a21 * s;\n  out[2] = a02 * c - a22 * s;\n  out[3] = a03 * c - a23 * s;\n  out[8] = a00 * s + a20 * c;\n  out[9] = a01 * s + a21 * c;\n  out[10] = a02 * s + a22 * c;\n  out[11] = a03 * s + a23 * c;\n  return out;\n}\n/**\r\n * Rotates a matrix by the given angle around the Z axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function rotateZ(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a00 = a[0];\n  var a01 = a[1];\n  var a02 = a[2];\n  var a03 = a[3];\n  var a10 = a[4];\n  var a11 = a[5];\n  var a12 = a[6];\n  var a13 = a[7];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged last row\n    out[8] = a[8];\n    out[9] = a[9];\n    out[10] = a[10];\n    out[11] = a[11];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[0] = a00 * c + a10 * s;\n  out[1] = a01 * c + a11 * s;\n  out[2] = a02 * c + a12 * s;\n  out[3] = a03 * c + a13 * s;\n  out[4] = a10 * c - a00 * s;\n  out[5] = a11 * c - a01 * s;\n  out[6] = a12 * c - a02 * s;\n  out[7] = a13 * c - a03 * s;\n  return out;\n}\n/**\r\n * Creates a matrix from a vector translation\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, dest, vec);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {ReadonlyVec3} v Translation vector\r\n * @returns {mat4} out\r\n */\n\nexport function fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a vector scaling\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.scale(dest, dest, vec);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {ReadonlyVec3} v Scaling vector\r\n * @returns {mat4} out\r\n */\n\nexport function fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = v[1];\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = v[2];\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a given angle around a given axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotate(dest, dest, rad, axis);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @param {ReadonlyVec3} axis the axis to rotate around\r\n * @returns {mat4} out\r\n */\n\nexport function fromRotation(out, rad, axis) {\n  var x = axis[0],\n      y = axis[1],\n      z = axis[2];\n  var len = Math.hypot(x, y, z);\n  var s, c, t;\n\n  if (len < glMatrix.EPSILON) {\n    return null;\n  }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c; // Perform rotation-specific matrix multiplication\n\n  out[0] = x * x * t + c;\n  out[1] = y * x * t + z * s;\n  out[2] = z * x * t - y * s;\n  out[3] = 0;\n  out[4] = x * y * t - z * s;\n  out[5] = y * y * t + c;\n  out[6] = z * y * t + x * s;\n  out[7] = 0;\n  out[8] = x * z * t + y * s;\n  out[9] = y * z * t - x * s;\n  out[10] = z * z * t + c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from the given angle around the X axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotateX(dest, dest, rad);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function fromXRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = c;\n  out[6] = s;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = -s;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from the given angle around the Y axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotateY(dest, dest, rad);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function fromYRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = c;\n  out[1] = 0;\n  out[2] = -s;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = s;\n  out[9] = 0;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from the given angle around the Z axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotateZ(dest, dest, rad);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function fromZRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = c;\n  out[1] = s;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = -s;\n  out[5] = c;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a quaternion rotation and vector translation\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, vec);\r\n *     let quatMat = mat4.create();\r\n *     quat4.toMat4(quat, quatMat);\r\n *     mat4.multiply(dest, quatMat);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat4} q Rotation quaternion\r\n * @param {ReadonlyVec3} v Translation vector\r\n * @returns {mat4} out\r\n */\n\nexport function fromRotationTranslation(out, q, v) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - (yy + zz);\n  out[1] = xy + wz;\n  out[2] = xz - wy;\n  out[3] = 0;\n  out[4] = xy - wz;\n  out[5] = 1 - (xx + zz);\n  out[6] = yz + wx;\n  out[7] = 0;\n  out[8] = xz + wy;\n  out[9] = yz - wx;\n  out[10] = 1 - (xx + yy);\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a new mat4 from a dual quat.\r\n *\r\n * @param {mat4} out Matrix\r\n * @param {ReadonlyQuat2} a Dual Quaternion\r\n * @returns {mat4} mat4 receiving operation result\r\n */\n\nexport function fromQuat2(out, a) {\n  var translation = new glMatrix.ARRAY_TYPE(3);\n  var bx = -a[0],\n      by = -a[1],\n      bz = -a[2],\n      bw = a[3],\n      ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7];\n  var magnitude = bx * bx + by * by + bz * bz + bw * bw; //Only scale if it makes sense\n\n  if (magnitude > 0) {\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2 / magnitude;\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2 / magnitude;\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2 / magnitude;\n  } else {\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2;\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2;\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2;\n  }\n\n  fromRotationTranslation(out, a, translation);\n  return out;\n}\n/**\r\n * Returns the translation vector component of a transformation\r\n *  matrix. If a matrix is built with fromRotationTranslation,\r\n *  the returned vector will be the same as the translation vector\r\n *  originally supplied.\r\n * @param  {vec3} out Vector to receive translation component\r\n * @param  {ReadonlyMat4} mat Matrix to be decomposed (input)\r\n * @return {vec3} out\r\n */\n\nexport function getTranslation(out, mat) {\n  out[0] = mat[12];\n  out[1] = mat[13];\n  out[2] = mat[14];\n  return out;\n}\n/**\r\n * Returns the scaling factor component of a transformation\r\n *  matrix. If a matrix is built with fromRotationTranslationScale\r\n *  with a normalized Quaternion paramter, the returned vector will be\r\n *  the same as the scaling vector\r\n *  originally supplied.\r\n * @param  {vec3} out Vector to receive scaling factor component\r\n * @param  {ReadonlyMat4} mat Matrix to be decomposed (input)\r\n * @return {vec3} out\r\n */\n\nexport function getScaling(out, mat) {\n  var m11 = mat[0];\n  var m12 = mat[1];\n  var m13 = mat[2];\n  var m21 = mat[4];\n  var m22 = mat[5];\n  var m23 = mat[6];\n  var m31 = mat[8];\n  var m32 = mat[9];\n  var m33 = mat[10];\n  out[0] = Math.hypot(m11, m12, m13);\n  out[1] = Math.hypot(m21, m22, m23);\n  out[2] = Math.hypot(m31, m32, m33);\n  return out;\n}\n/**\r\n * Returns a quaternion representing the rotational component\r\n *  of a transformation matrix. If a matrix is built with\r\n *  fromRotationTranslation, the returned quaternion will be the\r\n *  same as the quaternion originally supplied.\r\n * @param {quat} out Quaternion to receive the rotation component\r\n * @param {ReadonlyMat4} mat Matrix to be decomposed (input)\r\n * @return {quat} out\r\n */\n\nexport function getRotation(out, mat) {\n  var scaling = new glMatrix.ARRAY_TYPE(3);\n  getScaling(scaling, mat);\n  var is1 = 1 / scaling[0];\n  var is2 = 1 / scaling[1];\n  var is3 = 1 / scaling[2];\n  var sm11 = mat[0] * is1;\n  var sm12 = mat[1] * is2;\n  var sm13 = mat[2] * is3;\n  var sm21 = mat[4] * is1;\n  var sm22 = mat[5] * is2;\n  var sm23 = mat[6] * is3;\n  var sm31 = mat[8] * is1;\n  var sm32 = mat[9] * is2;\n  var sm33 = mat[10] * is3;\n  var trace = sm11 + sm22 + sm33;\n  var S = 0;\n\n  if (trace > 0) {\n    S = Math.sqrt(trace + 1.0) * 2;\n    out[3] = 0.25 * S;\n    out[0] = (sm23 - sm32) / S;\n    out[1] = (sm31 - sm13) / S;\n    out[2] = (sm12 - sm21) / S;\n  } else if (sm11 > sm22 && sm11 > sm33) {\n    S = Math.sqrt(1.0 + sm11 - sm22 - sm33) * 2;\n    out[3] = (sm23 - sm32) / S;\n    out[0] = 0.25 * S;\n    out[1] = (sm12 + sm21) / S;\n    out[2] = (sm31 + sm13) / S;\n  } else if (sm22 > sm33) {\n    S = Math.sqrt(1.0 + sm22 - sm11 - sm33) * 2;\n    out[3] = (sm31 - sm13) / S;\n    out[0] = (sm12 + sm21) / S;\n    out[1] = 0.25 * S;\n    out[2] = (sm23 + sm32) / S;\n  } else {\n    S = Math.sqrt(1.0 + sm33 - sm11 - sm22) * 2;\n    out[3] = (sm12 - sm21) / S;\n    out[0] = (sm31 + sm13) / S;\n    out[1] = (sm23 + sm32) / S;\n    out[2] = 0.25 * S;\n  }\n\n  return out;\n}\n/**\r\n * Creates a matrix from a quaternion rotation, vector translation and vector scale\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, vec);\r\n *     let quatMat = mat4.create();\r\n *     quat4.toMat4(quat, quatMat);\r\n *     mat4.multiply(dest, quatMat);\r\n *     mat4.scale(dest, scale)\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat4} q Rotation quaternion\r\n * @param {ReadonlyVec3} v Translation vector\r\n * @param {ReadonlyVec3} s Scaling vector\r\n * @returns {mat4} out\r\n */\n\nexport function fromRotationTranslationScale(out, q, v, s) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  var sx = s[0];\n  var sy = s[1];\n  var sz = s[2];\n  out[0] = (1 - (yy + zz)) * sx;\n  out[1] = (xy + wz) * sx;\n  out[2] = (xz - wy) * sx;\n  out[3] = 0;\n  out[4] = (xy - wz) * sy;\n  out[5] = (1 - (xx + zz)) * sy;\n  out[6] = (yz + wx) * sy;\n  out[7] = 0;\n  out[8] = (xz + wy) * sz;\n  out[9] = (yz - wx) * sz;\n  out[10] = (1 - (xx + yy)) * sz;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a quaternion rotation, vector translation and vector scale, rotating and scaling around the given origin\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, vec);\r\n *     mat4.translate(dest, origin);\r\n *     let quatMat = mat4.create();\r\n *     quat4.toMat4(quat, quatMat);\r\n *     mat4.multiply(dest, quatMat);\r\n *     mat4.scale(dest, scale)\r\n *     mat4.translate(dest, negativeOrigin);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat4} q Rotation quaternion\r\n * @param {ReadonlyVec3} v Translation vector\r\n * @param {ReadonlyVec3} s Scaling vector\r\n * @param {ReadonlyVec3} o The origin vector around which to scale and rotate\r\n * @returns {mat4} out\r\n */\n\nexport function fromRotationTranslationScaleOrigin(out, q, v, s, o) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  var sx = s[0];\n  var sy = s[1];\n  var sz = s[2];\n  var ox = o[0];\n  var oy = o[1];\n  var oz = o[2];\n  var out0 = (1 - (yy + zz)) * sx;\n  var out1 = (xy + wz) * sx;\n  var out2 = (xz - wy) * sx;\n  var out4 = (xy - wz) * sy;\n  var out5 = (1 - (xx + zz)) * sy;\n  var out6 = (yz + wx) * sy;\n  var out8 = (xz + wy) * sz;\n  var out9 = (yz - wx) * sz;\n  var out10 = (1 - (xx + yy)) * sz;\n  out[0] = out0;\n  out[1] = out1;\n  out[2] = out2;\n  out[3] = 0;\n  out[4] = out4;\n  out[5] = out5;\n  out[6] = out6;\n  out[7] = 0;\n  out[8] = out8;\n  out[9] = out9;\n  out[10] = out10;\n  out[11] = 0;\n  out[12] = v[0] + ox - (out0 * ox + out4 * oy + out8 * oz);\n  out[13] = v[1] + oy - (out1 * ox + out5 * oy + out9 * oz);\n  out[14] = v[2] + oz - (out2 * ox + out6 * oy + out10 * oz);\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Calculates a 4x4 matrix from the given quaternion\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {ReadonlyQuat} q Quaternion to create matrix from\r\n *\r\n * @returns {mat4} out\r\n */\n\nexport function fromQuat(out, q) {\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var yx = y * x2;\n  var yy = y * y2;\n  var zx = z * x2;\n  var zy = z * y2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - yy - zz;\n  out[1] = yx + wz;\n  out[2] = zx - wy;\n  out[3] = 0;\n  out[4] = yx - wz;\n  out[5] = 1 - xx - zz;\n  out[6] = zy + wx;\n  out[7] = 0;\n  out[8] = zx + wy;\n  out[9] = zy - wx;\n  out[10] = 1 - xx - yy;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Generates a frustum matrix with the given bounds\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {Number} left Left bound of the frustum\r\n * @param {Number} right Right bound of the frustum\r\n * @param {Number} bottom Bottom bound of the frustum\r\n * @param {Number} top Top bound of the frustum\r\n * @param {Number} near Near bound of the frustum\r\n * @param {Number} far Far bound of the frustum\r\n * @returns {mat4} out\r\n */\n\nexport function frustum(out, left, right, bottom, top, near, far) {\n  var rl = 1 / (right - left);\n  var tb = 1 / (top - bottom);\n  var nf = 1 / (near - far);\n  out[0] = near * 2 * rl;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = near * 2 * tb;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = (right + left) * rl;\n  out[9] = (top + bottom) * tb;\n  out[10] = (far + near) * nf;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = far * near * 2 * nf;\n  out[15] = 0;\n  return out;\n}\n/**\r\n * Generates a perspective projection matrix with the given bounds.\r\n * Passing null/undefined/no value for far will generate infinite projection matrix.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {number} fovy Vertical field of view in radians\r\n * @param {number} aspect Aspect ratio. typically viewport width/height\r\n * @param {number} near Near bound of the frustum\r\n * @param {number} far Far bound of the frustum, can be null or Infinity\r\n * @returns {mat4} out\r\n */\n\nexport function perspective(out, fovy, aspect, near, far) {\n  var f = 1.0 / Math.tan(fovy / 2),\n      nf;\n  out[0] = f / aspect;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = f;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[15] = 0;\n\n  if (far != null && far !== Infinity) {\n    nf = 1 / (near - far);\n    out[10] = (far + near) * nf;\n    out[14] = 2 * far * near * nf;\n  } else {\n    out[10] = -1;\n    out[14] = -2 * near;\n  }\n\n  return out;\n}\n/**\r\n * Generates a perspective projection matrix with the given field of view.\r\n * This is primarily useful for generating projection matrices to be used\r\n * with the still experiemental WebVR API.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {Object} fov Object containing the following values: upDegrees, downDegrees, leftDegrees, rightDegrees\r\n * @param {number} near Near bound of the frustum\r\n * @param {number} far Far bound of the frustum\r\n * @returns {mat4} out\r\n */\n\nexport function perspectiveFromFieldOfView(out, fov, near, far) {\n  var upTan = Math.tan(fov.upDegrees * Math.PI / 180.0);\n  var downTan = Math.tan(fov.downDegrees * Math.PI / 180.0);\n  var leftTan = Math.tan(fov.leftDegrees * Math.PI / 180.0);\n  var rightTan = Math.tan(fov.rightDegrees * Math.PI / 180.0);\n  var xScale = 2.0 / (leftTan + rightTan);\n  var yScale = 2.0 / (upTan + downTan);\n  out[0] = xScale;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  out[3] = 0.0;\n  out[4] = 0.0;\n  out[5] = yScale;\n  out[6] = 0.0;\n  out[7] = 0.0;\n  out[8] = -((leftTan - rightTan) * xScale * 0.5);\n  out[9] = (upTan - downTan) * yScale * 0.5;\n  out[10] = far / (near - far);\n  out[11] = -1.0;\n  out[12] = 0.0;\n  out[13] = 0.0;\n  out[14] = far * near / (near - far);\n  out[15] = 0.0;\n  return out;\n}\n/**\r\n * Generates a orthogonal projection matrix with the given bounds\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {number} left Left bound of the frustum\r\n * @param {number} right Right bound of the frustum\r\n * @param {number} bottom Bottom bound of the frustum\r\n * @param {number} top Top bound of the frustum\r\n * @param {number} near Near bound of the frustum\r\n * @param {number} far Far bound of the frustum\r\n * @returns {mat4} out\r\n */\n\nexport function ortho(out, left, right, bottom, top, near, far) {\n  var lr = 1 / (left - right);\n  var bt = 1 / (bottom - top);\n  var nf = 1 / (near - far);\n  out[0] = -2 * lr;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = -2 * bt;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 2 * nf;\n  out[11] = 0;\n  out[12] = (left + right) * lr;\n  out[13] = (top + bottom) * bt;\n  out[14] = (far + near) * nf;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Generates a look-at matrix with the given eye position, focal point, and up axis.\r\n * If you want a matrix that actually makes an object look at another object, you should use targetTo instead.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {ReadonlyVec3} eye Position of the viewer\r\n * @param {ReadonlyVec3} center Point the viewer is looking at\r\n * @param {ReadonlyVec3} up vec3 pointing up\r\n * @returns {mat4} out\r\n */\n\nexport function lookAt(out, eye, center, up) {\n  var x0, x1, x2, y0, y1, y2, z0, z1, z2, len;\n  var eyex = eye[0];\n  var eyey = eye[1];\n  var eyez = eye[2];\n  var upx = up[0];\n  var upy = up[1];\n  var upz = up[2];\n  var centerx = center[0];\n  var centery = center[1];\n  var centerz = center[2];\n\n  if (Math.abs(eyex - centerx) < glMatrix.EPSILON && Math.abs(eyey - centery) < glMatrix.EPSILON && Math.abs(eyez - centerz) < glMatrix.EPSILON) {\n    return identity(out);\n  }\n\n  z0 = eyex - centerx;\n  z1 = eyey - centery;\n  z2 = eyez - centerz;\n  len = 1 / Math.hypot(z0, z1, z2);\n  z0 *= len;\n  z1 *= len;\n  z2 *= len;\n  x0 = upy * z2 - upz * z1;\n  x1 = upz * z0 - upx * z2;\n  x2 = upx * z1 - upy * z0;\n  len = Math.hypot(x0, x1, x2);\n\n  if (!len) {\n    x0 = 0;\n    x1 = 0;\n    x2 = 0;\n  } else {\n    len = 1 / len;\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  y0 = z1 * x2 - z2 * x1;\n  y1 = z2 * x0 - z0 * x2;\n  y2 = z0 * x1 - z1 * x0;\n  len = Math.hypot(y0, y1, y2);\n\n  if (!len) {\n    y0 = 0;\n    y1 = 0;\n    y2 = 0;\n  } else {\n    len = 1 / len;\n    y0 *= len;\n    y1 *= len;\n    y2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = y0;\n  out[2] = z0;\n  out[3] = 0;\n  out[4] = x1;\n  out[5] = y1;\n  out[6] = z1;\n  out[7] = 0;\n  out[8] = x2;\n  out[9] = y2;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = -(x0 * eyex + x1 * eyey + x2 * eyez);\n  out[13] = -(y0 * eyex + y1 * eyey + y2 * eyez);\n  out[14] = -(z0 * eyex + z1 * eyey + z2 * eyez);\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Generates a matrix that makes something look at something else.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {ReadonlyVec3} eye Position of the viewer\r\n * @param {ReadonlyVec3} center Point the viewer is looking at\r\n * @param {ReadonlyVec3} up vec3 pointing up\r\n * @returns {mat4} out\r\n */\n\nexport function targetTo(out, eye, target, up) {\n  var eyex = eye[0],\n      eyey = eye[1],\n      eyez = eye[2],\n      upx = up[0],\n      upy = up[1],\n      upz = up[2];\n  var z0 = eyex - target[0],\n      z1 = eyey - target[1],\n      z2 = eyez - target[2];\n  var len = z0 * z0 + z1 * z1 + z2 * z2;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    z0 *= len;\n    z1 *= len;\n    z2 *= len;\n  }\n\n  var x0 = upy * z2 - upz * z1,\n      x1 = upz * z0 - upx * z2,\n      x2 = upx * z1 - upy * z0;\n  len = x0 * x0 + x1 * x1 + x2 * x2;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = x1;\n  out[2] = x2;\n  out[3] = 0;\n  out[4] = z1 * x2 - z2 * x1;\n  out[5] = z2 * x0 - z0 * x2;\n  out[6] = z0 * x1 - z1 * x0;\n  out[7] = 0;\n  out[8] = z0;\n  out[9] = z1;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = eyex;\n  out[13] = eyey;\n  out[14] = eyez;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Returns a string representation of a mat4\r\n *\r\n * @param {ReadonlyMat4} a matrix to represent as a string\r\n * @returns {String} string representation of the matrix\r\n */\n\nexport function str(a) {\n  return \"mat4(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \", \" + a[4] + \", \" + a[5] + \", \" + a[6] + \", \" + a[7] + \", \" + a[8] + \", \" + a[9] + \", \" + a[10] + \", \" + a[11] + \", \" + a[12] + \", \" + a[13] + \", \" + a[14] + \", \" + a[15] + \")\";\n}\n/**\r\n * Returns Frobenius norm of a mat4\r\n *\r\n * @param {ReadonlyMat4} a the matrix to calculate Frobenius norm of\r\n * @returns {Number} Frobenius norm\r\n */\n\nexport function frob(a) {\n  return Math.hypot(a[0], a[1], a[2], a[3], a[4], a[5], a[6], a[7], a[8], a[9], a[10], a[11], a[12], a[13], a[14], a[15]);\n}\n/**\r\n * Adds two mat4's\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the first operand\r\n * @param {ReadonlyMat4} b the second operand\r\n * @returns {mat4} out\r\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  out[8] = a[8] + b[8];\n  out[9] = a[9] + b[9];\n  out[10] = a[10] + b[10];\n  out[11] = a[11] + b[11];\n  out[12] = a[12] + b[12];\n  out[13] = a[13] + b[13];\n  out[14] = a[14] + b[14];\n  out[15] = a[15] + b[15];\n  return out;\n}\n/**\r\n * Subtracts matrix b from matrix a\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the first operand\r\n * @param {ReadonlyMat4} b the second operand\r\n * @returns {mat4} out\r\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  out[6] = a[6] - b[6];\n  out[7] = a[7] - b[7];\n  out[8] = a[8] - b[8];\n  out[9] = a[9] - b[9];\n  out[10] = a[10] - b[10];\n  out[11] = a[11] - b[11];\n  out[12] = a[12] - b[12];\n  out[13] = a[13] - b[13];\n  out[14] = a[14] - b[14];\n  out[15] = a[15] - b[15];\n  return out;\n}\n/**\r\n * Multiply each element of the matrix by a scalar.\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the matrix to scale\r\n * @param {Number} b amount to scale the matrix's elements by\r\n * @returns {mat4} out\r\n */\n\nexport function multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  out[8] = a[8] * b;\n  out[9] = a[9] * b;\n  out[10] = a[10] * b;\n  out[11] = a[11] * b;\n  out[12] = a[12] * b;\n  out[13] = a[13] * b;\n  out[14] = a[14] * b;\n  out[15] = a[15] * b;\n  return out;\n}\n/**\r\n * Adds two mat4's after multiplying each element of the second operand by a scalar value.\r\n *\r\n * @param {mat4} out the receiving vector\r\n * @param {ReadonlyMat4} a the first operand\r\n * @param {ReadonlyMat4} b the second operand\r\n * @param {Number} scale the amount to scale b's elements by before adding\r\n * @returns {mat4} out\r\n */\n\nexport function multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  out[4] = a[4] + b[4] * scale;\n  out[5] = a[5] + b[5] * scale;\n  out[6] = a[6] + b[6] * scale;\n  out[7] = a[7] + b[7] * scale;\n  out[8] = a[8] + b[8] * scale;\n  out[9] = a[9] + b[9] * scale;\n  out[10] = a[10] + b[10] * scale;\n  out[11] = a[11] + b[11] * scale;\n  out[12] = a[12] + b[12] * scale;\n  out[13] = a[13] + b[13] * scale;\n  out[14] = a[14] + b[14] * scale;\n  out[15] = a[15] + b[15] * scale;\n  return out;\n}\n/**\r\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {ReadonlyMat4} a The first matrix.\r\n * @param {ReadonlyMat4} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8] && a[9] === b[9] && a[10] === b[10] && a[11] === b[11] && a[12] === b[12] && a[13] === b[13] && a[14] === b[14] && a[15] === b[15];\n}\n/**\r\n * Returns whether or not the matrices have approximately the same elements in the same position.\r\n *\r\n * @param {ReadonlyMat4} a The first matrix.\r\n * @param {ReadonlyMat4} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var a4 = a[4],\n      a5 = a[5],\n      a6 = a[6],\n      a7 = a[7];\n  var a8 = a[8],\n      a9 = a[9],\n      a10 = a[10],\n      a11 = a[11];\n  var a12 = a[12],\n      a13 = a[13],\n      a14 = a[14],\n      a15 = a[15];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  var b4 = b[4],\n      b5 = b[5],\n      b6 = b[6],\n      b7 = b[7];\n  var b8 = b[8],\n      b9 = b[9],\n      b10 = b[10],\n      b11 = b[11];\n  var b12 = b[12],\n      b13 = b[13],\n      b14 = b[14],\n      b15 = b[15];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8)) && Math.abs(a9 - b9) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a9), Math.abs(b9)) && Math.abs(a10 - b10) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a10), Math.abs(b10)) && Math.abs(a11 - b11) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a11), Math.abs(b11)) && Math.abs(a12 - b12) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a12), Math.abs(b12)) && Math.abs(a13 - b13) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a13), Math.abs(b13)) && Math.abs(a14 - b14) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a14), Math.abs(b14)) && Math.abs(a15 - b15) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a15), Math.abs(b15));\n}\n/**\r\n * Alias for {@link mat4.multiply}\r\n * @function\r\n */\n\nexport var mul = multiply;\n/**\r\n * Alias for {@link mat4.subtract}\r\n * @function\r\n */\n\nexport var sub = subtract;","import * as glMatrix from \"./common.js\";\n/**\r\n * 3 Dimensional Vector\r\n * @module vec3\r\n */\n\n/**\r\n * Creates a new, empty vec3\r\n *\r\n * @returns {vec3} a new 3D vector\r\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(3);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n  }\n\n  return out;\n}\n/**\r\n * Creates a new vec3 initialized with values from an existing vector\r\n *\r\n * @param {ReadonlyVec3} a vector to clone\r\n * @returns {vec3} a new 3D vector\r\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(3);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n/**\r\n * Calculates the length of a vec3\r\n *\r\n * @param {ReadonlyVec3} a vector to calculate length of\r\n * @returns {Number} length of a\r\n */\n\nexport function length(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  return Math.hypot(x, y, z);\n}\n/**\r\n * Creates a new vec3 initialized with the given values\r\n *\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @returns {vec3} a new 3D vector\r\n */\n\nexport function fromValues(x, y, z) {\n  var out = new glMatrix.ARRAY_TYPE(3);\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n/**\r\n * Copy the values from one vec3 to another\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the source vector\r\n * @returns {vec3} out\r\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n/**\r\n * Set the components of a vec3 to the given values\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @returns {vec3} out\r\n */\n\nexport function set(out, x, y, z) {\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n/**\r\n * Adds two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  return out;\n}\n/**\r\n * Subtracts vector b from vector a\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  return out;\n}\n/**\r\n * Multiplies two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  out[2] = a[2] * b[2];\n  return out;\n}\n/**\r\n * Divides two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  out[2] = a[2] / b[2];\n  return out;\n}\n/**\r\n * Math.ceil the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a vector to ceil\r\n * @returns {vec3} out\r\n */\n\nexport function ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  out[2] = Math.ceil(a[2]);\n  return out;\n}\n/**\r\n * Math.floor the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a vector to floor\r\n * @returns {vec3} out\r\n */\n\nexport function floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  out[2] = Math.floor(a[2]);\n  return out;\n}\n/**\r\n * Returns the minimum of two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  out[2] = Math.min(a[2], b[2]);\n  return out;\n}\n/**\r\n * Returns the maximum of two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  out[2] = Math.max(a[2], b[2]);\n  return out;\n}\n/**\r\n * Math.round the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a vector to round\r\n * @returns {vec3} out\r\n */\n\nexport function round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  out[2] = Math.round(a[2]);\n  return out;\n}\n/**\r\n * Scales a vec3 by a scalar number\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the vector to scale\r\n * @param {Number} b amount to scale the vector by\r\n * @returns {vec3} out\r\n */\n\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  return out;\n}\n/**\r\n * Adds two vec3's after scaling the second operand by a scalar value\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @param {Number} scale the amount to scale b by before adding\r\n * @returns {vec3} out\r\n */\n\nexport function scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  return out;\n}\n/**\r\n * Calculates the euclidian distance between two vec3's\r\n *\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {Number} distance between a and b\r\n */\n\nexport function distance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  return Math.hypot(x, y, z);\n}\n/**\r\n * Calculates the squared euclidian distance between two vec3's\r\n *\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {Number} squared distance between a and b\r\n */\n\nexport function squaredDistance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  return x * x + y * y + z * z;\n}\n/**\r\n * Calculates the squared length of a vec3\r\n *\r\n * @param {ReadonlyVec3} a vector to calculate squared length of\r\n * @returns {Number} squared length of a\r\n */\n\nexport function squaredLength(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  return x * x + y * y + z * z;\n}\n/**\r\n * Negates the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a vector to negate\r\n * @returns {vec3} out\r\n */\n\nexport function negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  return out;\n}\n/**\r\n * Returns the inverse of the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a vector to invert\r\n * @returns {vec3} out\r\n */\n\nexport function inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  out[2] = 1.0 / a[2];\n  return out;\n}\n/**\r\n * Normalize a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a vector to normalize\r\n * @returns {vec3} out\r\n */\n\nexport function normalize(out, a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var len = x * x + y * y + z * z;\n\n  if (len > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len = 1 / Math.sqrt(len);\n  }\n\n  out[0] = a[0] * len;\n  out[1] = a[1] * len;\n  out[2] = a[2] * len;\n  return out;\n}\n/**\r\n * Calculates the dot product of two vec3's\r\n *\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {Number} dot product of a and b\r\n */\n\nexport function dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n/**\r\n * Computes the cross product of two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function cross(out, a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2];\n  var bx = b[0],\n      by = b[1],\n      bz = b[2];\n  out[0] = ay * bz - az * by;\n  out[1] = az * bx - ax * bz;\n  out[2] = ax * by - ay * bx;\n  return out;\n}\n/**\r\n * Performs a linear interpolation between two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec3} out\r\n */\n\nexport function lerp(out, a, b, t) {\n  var ax = a[0];\n  var ay = a[1];\n  var az = a[2];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  out[2] = az + t * (b[2] - az);\n  return out;\n}\n/**\r\n * Performs a hermite interpolation with two control points\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @param {ReadonlyVec3} c the third operand\r\n * @param {ReadonlyVec3} d the fourth operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec3} out\r\n */\n\nexport function hermite(out, a, b, c, d, t) {\n  var factorTimes2 = t * t;\n  var factor1 = factorTimes2 * (2 * t - 3) + 1;\n  var factor2 = factorTimes2 * (t - 2) + t;\n  var factor3 = factorTimes2 * (t - 1);\n  var factor4 = factorTimes2 * (3 - 2 * t);\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n  return out;\n}\n/**\r\n * Performs a bezier interpolation with two control points\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @param {ReadonlyVec3} c the third operand\r\n * @param {ReadonlyVec3} d the fourth operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec3} out\r\n */\n\nexport function bezier(out, a, b, c, d, t) {\n  var inverseFactor = 1 - t;\n  var inverseFactorTimesTwo = inverseFactor * inverseFactor;\n  var factorTimes2 = t * t;\n  var factor1 = inverseFactorTimesTwo * inverseFactor;\n  var factor2 = 3 * t * inverseFactorTimesTwo;\n  var factor3 = 3 * factorTimes2 * inverseFactor;\n  var factor4 = factorTimes2 * t;\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n  return out;\n}\n/**\r\n * Generates a random vector with the given scale\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\r\n * @returns {vec3} out\r\n */\n\nexport function random(out, scale) {\n  scale = scale || 1.0;\n  var r = glMatrix.RANDOM() * 2.0 * Math.PI;\n  var z = glMatrix.RANDOM() * 2.0 - 1.0;\n  var zScale = Math.sqrt(1.0 - z * z) * scale;\n  out[0] = Math.cos(r) * zScale;\n  out[1] = Math.sin(r) * zScale;\n  out[2] = z * scale;\n  return out;\n}\n/**\r\n * Transforms the vec3 with a mat4.\r\n * 4th vector component is implicitly '1'\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the vector to transform\r\n * @param {ReadonlyMat4} m matrix to transform with\r\n * @returns {vec3} out\r\n */\n\nexport function transformMat4(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  var w = m[3] * x + m[7] * y + m[11] * z + m[15];\n  w = w || 1.0;\n  out[0] = (m[0] * x + m[4] * y + m[8] * z + m[12]) / w;\n  out[1] = (m[1] * x + m[5] * y + m[9] * z + m[13]) / w;\n  out[2] = (m[2] * x + m[6] * y + m[10] * z + m[14]) / w;\n  return out;\n}\n/**\r\n * Transforms the vec3 with a mat3.\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the vector to transform\r\n * @param {ReadonlyMat3} m the 3x3 matrix to transform with\r\n * @returns {vec3} out\r\n */\n\nexport function transformMat3(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  out[0] = x * m[0] + y * m[3] + z * m[6];\n  out[1] = x * m[1] + y * m[4] + z * m[7];\n  out[2] = x * m[2] + y * m[5] + z * m[8];\n  return out;\n}\n/**\r\n * Transforms the vec3 with a quat\r\n * Can also be used for dual quaternions. (Multiply it with the real part)\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the vector to transform\r\n * @param {ReadonlyQuat} q quaternion to transform with\r\n * @returns {vec3} out\r\n */\n\nexport function transformQuat(out, a, q) {\n  // benchmarks: https://jsperf.com/quaternion-transform-vec3-implementations-fixed\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3];\n  var x = a[0],\n      y = a[1],\n      z = a[2]; // var qvec = [qx, qy, qz];\n  // var uv = vec3.cross([], qvec, a);\n\n  var uvx = qy * z - qz * y,\n      uvy = qz * x - qx * z,\n      uvz = qx * y - qy * x; // var uuv = vec3.cross([], qvec, uv);\n\n  var uuvx = qy * uvz - qz * uvy,\n      uuvy = qz * uvx - qx * uvz,\n      uuvz = qx * uvy - qy * uvx; // vec3.scale(uv, uv, 2 * w);\n\n  var w2 = qw * 2;\n  uvx *= w2;\n  uvy *= w2;\n  uvz *= w2; // vec3.scale(uuv, uuv, 2);\n\n  uuvx *= 2;\n  uuvy *= 2;\n  uuvz *= 2; // return vec3.add(out, a, vec3.add(out, uv, uuv));\n\n  out[0] = x + uvx + uuvx;\n  out[1] = y + uvy + uuvy;\n  out[2] = z + uvz + uuvz;\n  return out;\n}\n/**\r\n * Rotate a 3D vector around the x-axis\r\n * @param {vec3} out The receiving vec3\r\n * @param {ReadonlyVec3} a The vec3 point to rotate\r\n * @param {ReadonlyVec3} b The origin of the rotation\r\n * @param {Number} rad The angle of rotation in radians\r\n * @returns {vec3} out\r\n */\n\nexport function rotateX(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[0];\n  r[1] = p[1] * Math.cos(rad) - p[2] * Math.sin(rad);\n  r[2] = p[1] * Math.sin(rad) + p[2] * Math.cos(rad); //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\r\n * Rotate a 3D vector around the y-axis\r\n * @param {vec3} out The receiving vec3\r\n * @param {ReadonlyVec3} a The vec3 point to rotate\r\n * @param {ReadonlyVec3} b The origin of the rotation\r\n * @param {Number} rad The angle of rotation in radians\r\n * @returns {vec3} out\r\n */\n\nexport function rotateY(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[2] * Math.sin(rad) + p[0] * Math.cos(rad);\n  r[1] = p[1];\n  r[2] = p[2] * Math.cos(rad) - p[0] * Math.sin(rad); //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\r\n * Rotate a 3D vector around the z-axis\r\n * @param {vec3} out The receiving vec3\r\n * @param {ReadonlyVec3} a The vec3 point to rotate\r\n * @param {ReadonlyVec3} b The origin of the rotation\r\n * @param {Number} rad The angle of rotation in radians\r\n * @returns {vec3} out\r\n */\n\nexport function rotateZ(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[0] * Math.cos(rad) - p[1] * Math.sin(rad);\n  r[1] = p[0] * Math.sin(rad) + p[1] * Math.cos(rad);\n  r[2] = p[2]; //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\r\n * Get the angle between two 3D vectors\r\n * @param {ReadonlyVec3} a The first operand\r\n * @param {ReadonlyVec3} b The second operand\r\n * @returns {Number} The angle in radians\r\n */\n\nexport function angle(a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      bx = b[0],\n      by = b[1],\n      bz = b[2],\n      mag1 = Math.sqrt(ax * ax + ay * ay + az * az),\n      mag2 = Math.sqrt(bx * bx + by * by + bz * bz),\n      mag = mag1 * mag2,\n      cosine = mag && dot(a, b) / mag;\n  return Math.acos(Math.min(Math.max(cosine, -1), 1));\n}\n/**\r\n * Set the components of a vec3 to zero\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @returns {vec3} out\r\n */\n\nexport function zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  return out;\n}\n/**\r\n * Returns a string representation of a vector\r\n *\r\n * @param {ReadonlyVec3} a vector to represent as a string\r\n * @returns {String} string representation of the vector\r\n */\n\nexport function str(a) {\n  return \"vec3(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \")\";\n}\n/**\r\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {ReadonlyVec3} a The first vector.\r\n * @param {ReadonlyVec3} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2];\n}\n/**\r\n * Returns whether or not the vectors have approximately the same elements in the same position.\r\n *\r\n * @param {ReadonlyVec3} a The first vector.\r\n * @param {ReadonlyVec3} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2));\n}\n/**\r\n * Alias for {@link vec3.subtract}\r\n * @function\r\n */\n\nexport var sub = subtract;\n/**\r\n * Alias for {@link vec3.multiply}\r\n * @function\r\n */\n\nexport var mul = multiply;\n/**\r\n * Alias for {@link vec3.divide}\r\n * @function\r\n */\n\nexport var div = divide;\n/**\r\n * Alias for {@link vec3.distance}\r\n * @function\r\n */\n\nexport var dist = distance;\n/**\r\n * Alias for {@link vec3.squaredDistance}\r\n * @function\r\n */\n\nexport var sqrDist = squaredDistance;\n/**\r\n * Alias for {@link vec3.length}\r\n * @function\r\n */\n\nexport var len = length;\n/**\r\n * Alias for {@link vec3.squaredLength}\r\n * @function\r\n */\n\nexport var sqrLen = squaredLength;\n/**\r\n * Perform some operation over an array of vec3s.\r\n *\r\n * @param {Array} a the array of vectors to iterate over\r\n * @param {Number} stride Number of elements between the start of each vec3. If 0 assumes tightly packed\r\n * @param {Number} offset Number of elements to skip at the beginning of the array\r\n * @param {Number} count Number of vec3s to iterate over. If 0 iterates over entire array\r\n * @param {Function} fn Function to call for each vector in the array\r\n * @param {Object} [arg] additional argument to pass to fn\r\n * @returns {Array} a\r\n * @function\r\n */\n\nexport var forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n\n    if (!stride) {\n      stride = 3;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      vec[2] = a[i + 2];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n      a[i + 2] = vec[2];\n    }\n\n    return a;\n  };\n}();","<script context=\"module\">\n\timport { readable } from 'svelte/store';\n\n\tfunction is_intersecting(el) {\n\t\t// TODO this shouldn't be necessary. But the initial value\n\t\t// of entry.isIntersecting in an IO can be incorrect, it\n\t\t// turns out? need to investigate further\n\t\tconst bcr = el.getBoundingClientRect();\n\n\t\treturn (\n\t\t\tbcr.bottom > 0 &&\n\t\t\tbcr.right  > 0 &&\n\t\t\tbcr.top    < window.innerHeight &&\n\t\t\tbcr.left   < window.innerWidth\n\t\t);\n\t}\n\n\tfunction get_visibility(node) {\n\t\treturn readable(false, set => {\n\t\t\tif (typeof IntersectionObserver !== 'undefined') {\n\t\t\t\tconst observer = new IntersectionObserver(entries => {\n\t\t\t\t\t// set(entries[0].isIntersecting);\n\t\t\t\t\tset(is_intersecting(node));\n\t\t\t\t});\n\n\t\t\t\tobserver.observe(node);\n\t\t\t\treturn () => observer.unobserve(node);\n\t\t\t}\n\n\t\t\tif (typeof window !== 'undefined') {\n\t\t\t\tfunction handler() {\n\t\t\t\t\tconst { top, bottom } = node.getBoundingClientRect();\n\t\t\t\t\tset(bottom > 0 && top < window.innerHeight);\n\t\t\t\t}\n\n\t\t\t\twindow.addEventListener('scroll', handler);\n\t\t\t\twindow.addEventListener('resize', handler);\n\n\t\t\t\treturn () => {\n\t\t\t\t\twindow.removeEventListener('scroll', handler);\n\t\t\t\t\twindow.removeEventListener('resize', handler);\n\t\t\t\t};\n\t\t\t}\n\t\t});\n\t}\n</script>\n\n<script>\n\timport { setContext, onMount, onDestroy, tick } from 'svelte';\n\timport { writable } from 'svelte/store';\n\timport { RENDERER, LAYER, PARENT, CAMERA, create_layer } from '../internal/index.mjs';\n\timport { create_worker, process_color } from '../internal/utils.mjs';\n\timport * as mat4 from 'gl-matrix/mat4';\n\timport * as vec3 from 'gl-matrix/vec3';\n\n\texport let background = [1, 1, 1];\n\texport let backgroundOpacity = 1;\n\texport let fog = undefined;\n\texport let pixelRatio = undefined;\n\n\tconst use_fog = 'fog' in $$props;\n\n\t$: bg = process_color(background);\n\n\tlet canvas;\n\tlet visible = writable(false);\n\tlet pending = false;\n\tlet update_scheduled = false;\n\tlet w;\n\tlet h;\n\n\texport let gl; // WebGL2RenderingContext\n\texport let process_extra_shader_components; // (gl, material) => {}\n\tlet draw = () => {};\n\tlet camera_stores = {\n\t\tcamera_matrix: writable(),\n\t\tview: writable(),\n\t\tprojection: writable()\n\t};\n\n\tconst invalidate = typeof window !== 'undefined'\n\t\t? () => {\n\t\t\tif (!update_scheduled) {\n\t\t\t\tupdate_scheduled = true;\n\t\t\t\trequestAnimationFrame(draw);\n\t\t\t}\n\t\t}\n\t\t: () => {};\n\n\tconst width = writable(1);\n\tconst height = writable(1);\n\n\tconst root_layer = create_layer(0, invalidate);\n\n\tconst default_camera = { /* TODO */ };\n\tlet camera = default_camera;\n\tconst num_lights = 8;\n\n\tconst meshes = [];\n\n\t// lights\n\tconst lights = {\n\t\tambient: [],\n\t\tdirectional: [],\n\t\tpoint: []\n\t};\n\n\tfunction add_to(array) {\n\t\treturn fn => {\n\t\t\tarray.push(fn);\n\t\t\tinvalidate();\n\n\t\t\tonDestroy(() => {\n\t\t\t\tconst i = array.indexOf(fn);\n\t\t\t\tif (~i) array.splice(i, 1);\n\t\t\t\tinvalidate();\n\t\t\t});\n\t\t}\n\t}\n\n\tconst targets = new Map();\n\tlet camera_position_changed_since_last_render = true;\n\n\tconst scene = {\n\t\tdefines: [\n\t\t\t`#define NUM_LIGHTS 2\\n` + // TODO configure this\n\t\t\t`#define USE_FOG ${use_fog}\\n`\n\t\t].join(''),\n\n\t\tadd_camera: _camera => {\n\t\t\tif (camera && camera !== default_camera) {\n\t\t\t\tthrow new Error(`A scene can only have one camera`);\n\t\t\t}\n\n\t\t\tcamera = _camera;\n\t\t\tinvalidate();\n\n\t\t\t// TODO this is garbage\n\t\t\tcamera_stores.camera_matrix.set(camera.matrix);\n\t\t\tcamera_stores.projection.set(camera.projection);\n\t\t\tcamera_stores.view.set(camera.view);\n\n\t\t\tonDestroy(() => {\n\t\t\t\tcamera = default_camera;\n\t\t\t\tinvalidate();\n\t\t\t});\n\t\t},\n\n\t\tupdate_camera: camera => {\n\t\t\t// for overlays\n\t\t\tcamera_stores.camera_matrix.set(camera.matrix);\n\t\t\tcamera_stores.view.set(camera.view);\n\t\t\tcamera_stores.projection.set(camera.projection);\n\n\t\t\tcamera_position_changed_since_last_render = true;\n\t\t\tinvalidate();\n\t\t},\n\n\t\tadd_directional_light: add_to(lights.directional),\n\t\tadd_point_light: add_to(lights.point),\n\t\tadd_ambient_light: add_to(lights.ambient),\n\n\t\tget_target(id) {\n\t\t\tif (!targets.has(id)) targets.set(id, writable(null));\n\t\t\treturn targets.get(id);\n\t\t},\n\n\t\tinvalidate,\n\n\t\t...camera_stores,\n\n\t\twidth,\n\t\theight\n\t};\n\n\tsetContext(RENDERER, scene);\n\tsetContext(LAYER, root_layer);\n\n\tconst origin = mat4.identity(mat4.create());\n\tconst ctm = writable(origin);\n\tsetContext(PARENT, {\n\t\tget_matrix_world: () => origin,\n\t\tctm: { subscribe: ctm.subscribe }\n\t});\n\n\tonMount(() => {\n\t\tscene.canvas = canvas;\n\t\tgl = scene.gl = canvas.getContext('webgl2');\n\t\tvisible = get_visibility(canvas);\n\n\t\tgl.clearColor(0.0, 0.0, 0.0, 0.0);\n\n\t\t// const extensions = [\n\t\t// \t'OES_element_index_uint',\n\t\t// \t'OES_standard_derivatives'\n\t\t// ];\n\t\t//\n\t\t// extensions.forEach(name => {\n\t\t// \tconst ext = gl.getExtension(name);\n\t\t// \tif (!ext) {\n\t\t// \t\tthrow new Error(`Unsupported extension: ${name}`);\n\t\t// \t}\n\t\t// });\n\n\t\tdraw = force => {\n\t\t\tif (!camera) return; // TODO make this `!ready` or something instead\n\n\t\t\tif (dimensions_need_update) {\n\t\t\t\tconst DPR = pixelRatio || window.devicePixelRatio || 1;\n\t\t\t\tcanvas.width = $width * DPR;\n\t\t\t\tcanvas.height = $height * DPR;\n\t\t\t\tgl.viewport(0, 0, $width * DPR, $height * DPR);\n\n\t\t\t\tdimensions_need_update = false;\n\t\t\t}\n\n\t\t\tupdate_scheduled = false;\n\n\t\t\tif (!$visible && !force) {\n\t\t\t\tpending = true;\n\t\t\t\treturn;\n\t\t\t};\n\n\t\t\tpending = false;\n\n\t\t\t// gl.clearColor(...bg, backgroundOpacity);\n\t\t\t// gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n\n\t\t\tgl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA);\n\t\t\tgl.enable(gl.BLEND);\n\t\t\tgl.enable(gl.CULL_FACE);\n\t\t\tgl.enable(gl.DEPTH_TEST);                               // Enable depth testing\n\t\t\tgl.depthFunc(gl.LEQUAL);                                // Near things obscure far things\n\n\t\t\t// Clear the canvas before we start drawing on it.\n\t\t\tgl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n\n\t\t\t// calculate total ambient light\n\t\t\tconst ambient_light = lights.ambient.reduce((total, { color, intensity }) => {\n\t\t\t\treturn [\n\t\t\t\t\tMath.min(total[0] + color[0] * intensity, 1),\n\t\t\t\t\tMath.min(total[1] + color[1] * intensity, 1),\n\t\t\t\t\tMath.min(total[2] + color[2] * intensity, 1)\n\t\t\t\t];\n\t\t\t}, new Float32Array([0, 0, 0]));\n\n\t\t\tlet previous_program;\n\n\t\t\tlet previous_state = {\n\t\t\t\t[gl.DEPTH_TEST]: null,\n\t\t\t\t[gl.CULL_FACE]: null\n\t\t\t};\n\n\t\t\tconst enable = (key, enabled) => {\n\t\t\t\tif (previous_state[key] !== enabled) {\n\t\t\t\t\tif (enabled) gl.enable(key);\n\t\t\t\t\telse gl.disable(key);\n\n\t\t\t\t\tprevious_state[key] = enabled;\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tfunction render_mesh({\n\t\t\t\tmodel,\n\t\t\t\tmodel_inverse_transpose,\n\t\t\t\tgeometry,\n\t\t\t\tmaterial,\n\t\t\t\tdepthTest,\n\t\t\t\tdoubleSided\n\t\t\t}) {\n\t\t\t\t// TODO should this even be possible?\n\t\t\t\tif (!material) return;\n\n\t\t\t\tenable(gl.DEPTH_TEST, depthTest !== false);\n\t\t\t\tenable(gl.CULL_FACE, doubleSided !== true);\n\n\t\t\t\tgl.blendFuncSeparate(\n\t\t\t\t\tgl.SRC_ALPHA, // source rgb\n\t\t\t\t\tgl.ONE_MINUS_SRC_ALPHA, // dest rgb\n\t\t\t\t\tgl.SRC_ALPHA, // source alpha\n\t\t\t\t\tgl.ONE // dest alpha\n\t\t\t\t);\n\n\t\t\t\t// set attributes\n\t\t\t\tgeometry.set_attributes(gl);\n\n\t\t\t\tif (material.program !== previous_program) {\n\t\t\t\t\tprevious_program = material.program;\n\n\t\t\t\t\t// TODO move logic to the mesh/material?\n\t\t\t\t\tgl.useProgram(material.program);\n\n\t\t\t\t\t// set built-ins\n\t\t\t\t\tgl.uniform3fv(material.uniform_locations.AMBIENT_LIGHT, ambient_light);\n\n\t\t\t\t\tif (use_fog) {\n\t\t\t\t\t\tgl.uniform3fv(material.uniform_locations.FOG_COLOR, bg);\n\t\t\t\t\t\tgl.uniform1f(material.uniform_locations.FOG_DENSITY, fog);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (material.uniform_locations.DIRECTIONAL_LIGHTS) {\n\t\t\t\t\t\tfor (let i = 0; i < num_lights; i += 1) {\n\t\t\t\t\t\t\tconst light = lights.directional[i];\n\t\t\t\t\t\t\tif (!light) break;\n\n\t\t\t\t\t\t\tgl.uniform3fv(material.uniform_locations.DIRECTIONAL_LIGHTS[i].direction, light.direction);\n\t\t\t\t\t\t\tgl.uniform3fv(material.uniform_locations.DIRECTIONAL_LIGHTS[i].color, light.color);\n\t\t\t\t\t\t\tgl.uniform1f(material.uniform_locations.DIRECTIONAL_LIGHTS[i].intensity, light.intensity);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (material.uniform_locations.POINT_LIGHTS) {\n\t\t\t\t\t\tfor (let i = 0; i < num_lights; i += 1) {\n\t\t\t\t\t\t\tconst light = lights.point[i];\n\t\t\t\t\t\t\tif (!light) break;\n\n\t\t\t\t\t\t\tgl.uniform3fv(material.uniform_locations.POINT_LIGHTS[i].location, light.location);\n\t\t\t\t\t\t\tgl.uniform3fv(material.uniform_locations.POINT_LIGHTS[i].color, light.color);\n\t\t\t\t\t\t\tgl.uniform1f(material.uniform_locations.POINT_LIGHTS[i].intensity, light.intensity);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tgl.uniform3fv(material.uniform_locations.CAMERA_WORLD_POSITION, camera.world_position);\n\t\t\t\t\tgl.uniformMatrix4fv(material.uniform_locations.VIEW, false, camera.view);\n\t\t\t\t\tgl.uniformMatrix4fv(material.uniform_locations.PROJECTION, false, camera.projection);\n\t\t\t\t}\n\n\t\t\t\t// set mesh-specific built-in uniforms\n\t\t\t\tgl.uniformMatrix4fv(material.uniform_locations.MODEL, false, model);\n\t\t\t\tgl.uniformMatrix4fv(material.uniform_locations.MODEL_INVERSE_TRANSPOSE, false, model_inverse_transpose);\n\n\t\t\t\tif (typeof process_extra_shader_components == 'function') {\n\t\t\t\t\t// set material-specific built-in uniforms\n\t\t\t\t\tmaterial.apply_uniforms(gl, null, model, process_extra_shader_components);\n\n\t\t\t\t} else {\n\t\t\t\t\t// set material-specific built-in uniforms\n\t\t\t\t\tmaterial.apply_uniforms(gl);\n\t\t\t\t}\n\n\t\t\t\t// draw\n\t\t\t\tif (geometry.index) {\n\t\t\t\t\tgl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, geometry.buffers.__index);\n\t\t\t\t\tgl.drawElements(gl[geometry.primitive], geometry.index.length, gl.UNSIGNED_INT, 0);\n\t\t\t\t} else {\n\t\t\t\t\t// if (geometry.primitive === 'POINTS') {\n\t\t\t\t\t// \tconsole.log(\"If \", (gl[geometry.primitive] === gl.POINTS));\n\t\t\t\t\t// \tconsole.log(\"Draw gl.POINTS for \" + geometry.count + \" point(s)\" );\n\t\t\t\t\t// }\n\t\t\t\t\tconst primitiveType = gl[geometry.primitive];\n\t\t\t\t\tgl.drawArrays(primitiveType, 0, geometry.count);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction render_layer(layer) {\n\t\t\t\tif (layer.needs_sort) {\n\t\t\t\t\tlayer.child_layers.sort((a, b) => a.index - b.index);\n\t\t\t\t\tlayer.needs_sort = false;\n\t\t\t\t}\n\n\t\t\t\tgl.depthMask(true);\n\t\t\t\tgl.clearDepth(1.0);\n\t\t\t\tgl.clear(gl.DEPTH_BUFFER_BIT);\n\n\t\t\t\tfor (let i = 0; i < layer.meshes.length; i += 1) {\n\t\t\t\t\trender_mesh(layer.meshes[i]);\n\t\t\t\t}\n\n\t\t\t\t// TODO sort transparent meshes, furthest to closest\n\t\t\t\tgl.depthMask(false);\n\n\t\t\t\tif (camera_position_changed_since_last_render || layer.needs_transparency_sort) {\n\t\t\t\t\tsort_transparent_meshes(layer.transparent_meshes);\n\t\t\t\t\tlayer.needs_transparency_sort = false;\n\t\t\t\t}\n\n\t\t\t\tfor (let i = 0; i < layer.transparent_meshes.length; i += 1) {\n\t\t\t\t\trender_mesh(layer.transparent_meshes[i]);\n\t\t\t\t}\n\n\t\t\t\tfor (let i = 0; i < layer.child_layers.length; i += 1) {\n\t\t\t\t\trender_layer(layer.child_layers[i]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\trender_layer(root_layer);\n\t\t\tcamera_position_changed_since_last_render = false;\n\t\t};\n\n\t\t// for some wacky reason, Adblock Plus seems to prevent the\n\t\t// initial dimensions from being correctly reported\n\t\tconst timeout = setTimeout(() => {\n\t\t\t$width = canvas.clientWidth;\n\t\t\t$height = canvas.clientHeight;\n\t\t});\n\n\t\ttick().then(() => draw(true));\n\n\t\treturn () => {\n\t\t\tgl.getExtension('WEBGL_lose_context').loseContext();\n\t\t\tclearTimeout(timeout);\n\t\t};\n\t});\n\n\tconst sort_transparent_meshes = meshes => {\n\t\tif (meshes.length < 2) return;\n\n\t\tconst lookup = new Map();\n\t\tconst out = new Float32Array(16);\n\n\t\tmeshes.forEach(mesh => {\n\t\t\tconst z = mat4.multiply(out, camera.view, mesh.model)[14];\n\t\t\tlookup.set(mesh, z);\n\t\t});\n\n\t\tmeshes.sort((a, b) => lookup.get(a) - lookup.get(b));\n\t};\n\n\tlet dimensions_need_update = true;\n\n\tconst update_dimensions = () => {\n\t\tdimensions_need_update = true;\n\t\tinvalidate();\n\t};\n\n\t$: ($width, $height, update_dimensions());\n\t$: (background, backgroundOpacity, fog, scene.invalidate());\n\t$: if ($visible && pending) scene.invalidate();\n</script>\n\n<style>\n\t.container, canvas {\n\t\tposition: relative;\n\t\twidth: 100%;\n\t\theight: 100%;\n\t\tdisplay: block;\n\t\toverflow: hidden;\n\t}\n</style>\n\n<div class=\"container\" bind:clientWidth={$width} bind:clientHeight={$height}>\n\t<canvas bind:this={canvas}></canvas>\n\n\t{#if gl}\n\t\t<slot width={$width} height={$height}></slot>\n\t{/if}\n</div>\n","import * as glMatrix from \"./common.js\";\n/**\r\n * 4 Dimensional Vector\r\n * @module vec4\r\n */\n\n/**\r\n * Creates a new, empty vec4\r\n *\r\n * @returns {vec4} a new 4D vector\r\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(4);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n  }\n\n  return out;\n}\n/**\r\n * Creates a new vec4 initialized with values from an existing vector\r\n *\r\n * @param {ReadonlyVec4} a vector to clone\r\n * @returns {vec4} a new 4D vector\r\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\r\n * Creates a new vec4 initialized with the given values\r\n *\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @param {Number} w W component\r\n * @returns {vec4} a new 4D vector\r\n */\n\nexport function fromValues(x, y, z, w) {\n  var out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = w;\n  return out;\n}\n/**\r\n * Copy the values from one vec4 to another\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the source vector\r\n * @returns {vec4} out\r\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\r\n * Set the components of a vec4 to the given values\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @param {Number} w W component\r\n * @returns {vec4} out\r\n */\n\nexport function set(out, x, y, z, w) {\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = w;\n  return out;\n}\n/**\r\n * Adds two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  return out;\n}\n/**\r\n * Subtracts vector b from vector a\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  return out;\n}\n/**\r\n * Multiplies two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\nexport function multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  out[2] = a[2] * b[2];\n  out[3] = a[3] * b[3];\n  return out;\n}\n/**\r\n * Divides two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\nexport function divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  out[2] = a[2] / b[2];\n  out[3] = a[3] / b[3];\n  return out;\n}\n/**\r\n * Math.ceil the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a vector to ceil\r\n * @returns {vec4} out\r\n */\n\nexport function ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  out[2] = Math.ceil(a[2]);\n  out[3] = Math.ceil(a[3]);\n  return out;\n}\n/**\r\n * Math.floor the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a vector to floor\r\n * @returns {vec4} out\r\n */\n\nexport function floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  out[2] = Math.floor(a[2]);\n  out[3] = Math.floor(a[3]);\n  return out;\n}\n/**\r\n * Returns the minimum of two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\nexport function min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  out[2] = Math.min(a[2], b[2]);\n  out[3] = Math.min(a[3], b[3]);\n  return out;\n}\n/**\r\n * Returns the maximum of two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\nexport function max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  out[2] = Math.max(a[2], b[2]);\n  out[3] = Math.max(a[3], b[3]);\n  return out;\n}\n/**\r\n * Math.round the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a vector to round\r\n * @returns {vec4} out\r\n */\n\nexport function round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  out[2] = Math.round(a[2]);\n  out[3] = Math.round(a[3]);\n  return out;\n}\n/**\r\n * Scales a vec4 by a scalar number\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the vector to scale\r\n * @param {Number} b amount to scale the vector by\r\n * @returns {vec4} out\r\n */\n\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  return out;\n}\n/**\r\n * Adds two vec4's after scaling the second operand by a scalar value\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @param {Number} scale the amount to scale b by before adding\r\n * @returns {vec4} out\r\n */\n\nexport function scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  return out;\n}\n/**\r\n * Calculates the euclidian distance between two vec4's\r\n *\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {Number} distance between a and b\r\n */\n\nexport function distance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  var w = b[3] - a[3];\n  return Math.hypot(x, y, z, w);\n}\n/**\r\n * Calculates the squared euclidian distance between two vec4's\r\n *\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {Number} squared distance between a and b\r\n */\n\nexport function squaredDistance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  var w = b[3] - a[3];\n  return x * x + y * y + z * z + w * w;\n}\n/**\r\n * Calculates the length of a vec4\r\n *\r\n * @param {ReadonlyVec4} a vector to calculate length of\r\n * @returns {Number} length of a\r\n */\n\nexport function length(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  return Math.hypot(x, y, z, w);\n}\n/**\r\n * Calculates the squared length of a vec4\r\n *\r\n * @param {ReadonlyVec4} a vector to calculate squared length of\r\n * @returns {Number} squared length of a\r\n */\n\nexport function squaredLength(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  return x * x + y * y + z * z + w * w;\n}\n/**\r\n * Negates the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a vector to negate\r\n * @returns {vec4} out\r\n */\n\nexport function negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = -a[3];\n  return out;\n}\n/**\r\n * Returns the inverse of the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a vector to invert\r\n * @returns {vec4} out\r\n */\n\nexport function inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  out[2] = 1.0 / a[2];\n  out[3] = 1.0 / a[3];\n  return out;\n}\n/**\r\n * Normalize a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a vector to normalize\r\n * @returns {vec4} out\r\n */\n\nexport function normalize(out, a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  var len = x * x + y * y + z * z + w * w;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n  }\n\n  out[0] = x * len;\n  out[1] = y * len;\n  out[2] = z * len;\n  out[3] = w * len;\n  return out;\n}\n/**\r\n * Calculates the dot product of two vec4's\r\n *\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {Number} dot product of a and b\r\n */\n\nexport function dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n}\n/**\r\n * Returns the cross-product of three vectors in a 4-dimensional space\r\n *\r\n * @param {ReadonlyVec4} result the receiving vector\r\n * @param {ReadonlyVec4} U the first vector\r\n * @param {ReadonlyVec4} V the second vector\r\n * @param {ReadonlyVec4} W the third vector\r\n * @returns {vec4} result\r\n */\n\nexport function cross(out, u, v, w) {\n  var A = v[0] * w[1] - v[1] * w[0],\n      B = v[0] * w[2] - v[2] * w[0],\n      C = v[0] * w[3] - v[3] * w[0],\n      D = v[1] * w[2] - v[2] * w[1],\n      E = v[1] * w[3] - v[3] * w[1],\n      F = v[2] * w[3] - v[3] * w[2];\n  var G = u[0];\n  var H = u[1];\n  var I = u[2];\n  var J = u[3];\n  out[0] = H * F - I * E + J * D;\n  out[1] = -(G * F) + I * C - J * B;\n  out[2] = G * E - H * C + J * A;\n  out[3] = -(G * D) + H * B - I * A;\n  return out;\n}\n/**\r\n * Performs a linear interpolation between two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec4} out\r\n */\n\nexport function lerp(out, a, b, t) {\n  var ax = a[0];\n  var ay = a[1];\n  var az = a[2];\n  var aw = a[3];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  out[2] = az + t * (b[2] - az);\n  out[3] = aw + t * (b[3] - aw);\n  return out;\n}\n/**\r\n * Generates a random vector with the given scale\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\r\n * @returns {vec4} out\r\n */\n\nexport function random(out, scale) {\n  scale = scale || 1.0; // Marsaglia, George. Choosing a Point from the Surface of a\n  // Sphere. Ann. Math. Statist. 43 (1972), no. 2, 645--646.\n  // http://projecteuclid.org/euclid.aoms/1177692644;\n\n  var v1, v2, v3, v4;\n  var s1, s2;\n\n  do {\n    v1 = glMatrix.RANDOM() * 2 - 1;\n    v2 = glMatrix.RANDOM() * 2 - 1;\n    s1 = v1 * v1 + v2 * v2;\n  } while (s1 >= 1);\n\n  do {\n    v3 = glMatrix.RANDOM() * 2 - 1;\n    v4 = glMatrix.RANDOM() * 2 - 1;\n    s2 = v3 * v3 + v4 * v4;\n  } while (s2 >= 1);\n\n  var d = Math.sqrt((1 - s1) / s2);\n  out[0] = scale * v1;\n  out[1] = scale * v2;\n  out[2] = scale * v3 * d;\n  out[3] = scale * v4 * d;\n  return out;\n}\n/**\r\n * Transforms the vec4 with a mat4.\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the vector to transform\r\n * @param {ReadonlyMat4} m matrix to transform with\r\n * @returns {vec4} out\r\n */\n\nexport function transformMat4(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2],\n      w = a[3];\n  out[0] = m[0] * x + m[4] * y + m[8] * z + m[12] * w;\n  out[1] = m[1] * x + m[5] * y + m[9] * z + m[13] * w;\n  out[2] = m[2] * x + m[6] * y + m[10] * z + m[14] * w;\n  out[3] = m[3] * x + m[7] * y + m[11] * z + m[15] * w;\n  return out;\n}\n/**\r\n * Transforms the vec4 with a quat\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the vector to transform\r\n * @param {ReadonlyQuat} q quaternion to transform with\r\n * @returns {vec4} out\r\n */\n\nexport function transformQuat(out, a, q) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3]; // calculate quat * vec\n\n  var ix = qw * x + qy * z - qz * y;\n  var iy = qw * y + qz * x - qx * z;\n  var iz = qw * z + qx * y - qy * x;\n  var iw = -qx * x - qy * y - qz * z; // calculate result * inverse quat\n\n  out[0] = ix * qw + iw * -qx + iy * -qz - iz * -qy;\n  out[1] = iy * qw + iw * -qy + iz * -qx - ix * -qz;\n  out[2] = iz * qw + iw * -qz + ix * -qy - iy * -qx;\n  out[3] = a[3];\n  return out;\n}\n/**\r\n * Set the components of a vec4 to zero\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @returns {vec4} out\r\n */\n\nexport function zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  out[3] = 0.0;\n  return out;\n}\n/**\r\n * Returns a string representation of a vector\r\n *\r\n * @param {ReadonlyVec4} a vector to represent as a string\r\n * @returns {String} string representation of the vector\r\n */\n\nexport function str(a) {\n  return \"vec4(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \")\";\n}\n/**\r\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {ReadonlyVec4} a The first vector.\r\n * @param {ReadonlyVec4} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3];\n}\n/**\r\n * Returns whether or not the vectors have approximately the same elements in the same position.\r\n *\r\n * @param {ReadonlyVec4} a The first vector.\r\n * @param {ReadonlyVec4} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3));\n}\n/**\r\n * Alias for {@link vec4.subtract}\r\n * @function\r\n */\n\nexport var sub = subtract;\n/**\r\n * Alias for {@link vec4.multiply}\r\n * @function\r\n */\n\nexport var mul = multiply;\n/**\r\n * Alias for {@link vec4.divide}\r\n * @function\r\n */\n\nexport var div = divide;\n/**\r\n * Alias for {@link vec4.distance}\r\n * @function\r\n */\n\nexport var dist = distance;\n/**\r\n * Alias for {@link vec4.squaredDistance}\r\n * @function\r\n */\n\nexport var sqrDist = squaredDistance;\n/**\r\n * Alias for {@link vec4.length}\r\n * @function\r\n */\n\nexport var len = length;\n/**\r\n * Alias for {@link vec4.squaredLength}\r\n * @function\r\n */\n\nexport var sqrLen = squaredLength;\n/**\r\n * Perform some operation over an array of vec4s.\r\n *\r\n * @param {Array} a the array of vectors to iterate over\r\n * @param {Number} stride Number of elements between the start of each vec4. If 0 assumes tightly packed\r\n * @param {Number} offset Number of elements to skip at the beginning of the array\r\n * @param {Number} count Number of vec4s to iterate over. If 0 iterates over entire array\r\n * @param {Function} fn Function to call for each vector in the array\r\n * @param {Object} [arg] additional argument to pass to fn\r\n * @returns {Array} a\r\n * @function\r\n */\n\nexport var forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n\n    if (!stride) {\n      stride = 4;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      vec[2] = a[i + 2];\n      vec[3] = a[i + 3];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n      a[i + 2] = vec[2];\n      a[i + 3] = vec[3];\n    }\n\n    return a;\n  };\n}();","import * as glMatrix from \"./common.js\";\nimport * as mat3 from \"./mat3.js\";\nimport * as vec3 from \"./vec3.js\";\nimport * as vec4 from \"./vec4.js\";\n/**\r\n * Quaternion\r\n * @module quat\r\n */\n\n/**\r\n * Creates a new identity quat\r\n *\r\n * @returns {quat} a new quaternion\r\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(4);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n  }\n\n  out[3] = 1;\n  return out;\n}\n/**\r\n * Set a quat to the identity quaternion\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @returns {quat} out\r\n */\n\nexport function identity(out) {\n  out[0] = 0;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  return out;\n}\n/**\r\n * Sets a quat from the given angle and rotation axis,\r\n * then returns it.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyVec3} axis the axis around which to rotate\r\n * @param {Number} rad the angle in radians\r\n * @returns {quat} out\r\n **/\n\nexport function setAxisAngle(out, axis, rad) {\n  rad = rad * 0.5;\n  var s = Math.sin(rad);\n  out[0] = s * axis[0];\n  out[1] = s * axis[1];\n  out[2] = s * axis[2];\n  out[3] = Math.cos(rad);\n  return out;\n}\n/**\r\n * Gets the rotation axis and angle for a given\r\n *  quaternion. If a quaternion is created with\r\n *  setAxisAngle, this method will return the same\r\n *  values as providied in the original parameter list\r\n *  OR functionally equivalent values.\r\n * Example: The quaternion formed by axis [0, 0, 1] and\r\n *  angle -90 is the same as the quaternion formed by\r\n *  [0, 0, 1] and 270. This method favors the latter.\r\n * @param  {vec3} out_axis  Vector receiving the axis of rotation\r\n * @param  {ReadonlyQuat} q     Quaternion to be decomposed\r\n * @return {Number}     Angle, in radians, of the rotation\r\n */\n\nexport function getAxisAngle(out_axis, q) {\n  var rad = Math.acos(q[3]) * 2.0;\n  var s = Math.sin(rad / 2.0);\n\n  if (s > glMatrix.EPSILON) {\n    out_axis[0] = q[0] / s;\n    out_axis[1] = q[1] / s;\n    out_axis[2] = q[2] / s;\n  } else {\n    // If s is zero, return any axis (no rotation - axis does not matter)\n    out_axis[0] = 1;\n    out_axis[1] = 0;\n    out_axis[2] = 0;\n  }\n\n  return rad;\n}\n/**\r\n * Gets the angular distance between two unit quaternions\r\n *\r\n * @param  {ReadonlyQuat} a     Origin unit quaternion\r\n * @param  {ReadonlyQuat} b     Destination unit quaternion\r\n * @return {Number}     Angle, in radians, between the two quaternions\r\n */\n\nexport function getAngle(a, b) {\n  var dotproduct = dot(a, b);\n  return Math.acos(2 * dotproduct * dotproduct - 1);\n}\n/**\r\n * Multiplies two quat's\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a the first operand\r\n * @param {ReadonlyQuat} b the second operand\r\n * @returns {quat} out\r\n */\n\nexport function multiply(out, a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bx = b[0],\n      by = b[1],\n      bz = b[2],\n      bw = b[3];\n  out[0] = ax * bw + aw * bx + ay * bz - az * by;\n  out[1] = ay * bw + aw * by + az * bx - ax * bz;\n  out[2] = az * bw + aw * bz + ax * by - ay * bx;\n  out[3] = aw * bw - ax * bx - ay * by - az * bz;\n  return out;\n}\n/**\r\n * Rotates a quaternion by the given angle about the X axis\r\n *\r\n * @param {quat} out quat receiving operation result\r\n * @param {ReadonlyQuat} a quat to rotate\r\n * @param {number} rad angle (in radians) to rotate\r\n * @returns {quat} out\r\n */\n\nexport function rotateX(out, a, rad) {\n  rad *= 0.5;\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bx = Math.sin(rad),\n      bw = Math.cos(rad);\n  out[0] = ax * bw + aw * bx;\n  out[1] = ay * bw + az * bx;\n  out[2] = az * bw - ay * bx;\n  out[3] = aw * bw - ax * bx;\n  return out;\n}\n/**\r\n * Rotates a quaternion by the given angle about the Y axis\r\n *\r\n * @param {quat} out quat receiving operation result\r\n * @param {ReadonlyQuat} a quat to rotate\r\n * @param {number} rad angle (in radians) to rotate\r\n * @returns {quat} out\r\n */\n\nexport function rotateY(out, a, rad) {\n  rad *= 0.5;\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var by = Math.sin(rad),\n      bw = Math.cos(rad);\n  out[0] = ax * bw - az * by;\n  out[1] = ay * bw + aw * by;\n  out[2] = az * bw + ax * by;\n  out[3] = aw * bw - ay * by;\n  return out;\n}\n/**\r\n * Rotates a quaternion by the given angle about the Z axis\r\n *\r\n * @param {quat} out quat receiving operation result\r\n * @param {ReadonlyQuat} a quat to rotate\r\n * @param {number} rad angle (in radians) to rotate\r\n * @returns {quat} out\r\n */\n\nexport function rotateZ(out, a, rad) {\n  rad *= 0.5;\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bz = Math.sin(rad),\n      bw = Math.cos(rad);\n  out[0] = ax * bw + ay * bz;\n  out[1] = ay * bw - ax * bz;\n  out[2] = az * bw + aw * bz;\n  out[3] = aw * bw - az * bz;\n  return out;\n}\n/**\r\n * Calculates the W component of a quat from the X, Y, and Z components.\r\n * Assumes that quaternion is 1 unit in length.\r\n * Any existing W component will be ignored.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a quat to calculate W component of\r\n * @returns {quat} out\r\n */\n\nexport function calculateW(out, a) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = Math.sqrt(Math.abs(1.0 - x * x - y * y - z * z));\n  return out;\n}\n/**\r\n * Calculate the exponential of a unit quaternion.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a quat to calculate the exponential of\r\n * @returns {quat} out\r\n */\n\nexport function exp(out, a) {\n  var x = a[0],\n      y = a[1],\n      z = a[2],\n      w = a[3];\n  var r = Math.sqrt(x * x + y * y + z * z);\n  var et = Math.exp(w);\n  var s = r > 0 ? et * Math.sin(r) / r : 0;\n  out[0] = x * s;\n  out[1] = y * s;\n  out[2] = z * s;\n  out[3] = et * Math.cos(r);\n  return out;\n}\n/**\r\n * Calculate the natural logarithm of a unit quaternion.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a quat to calculate the exponential of\r\n * @returns {quat} out\r\n */\n\nexport function ln(out, a) {\n  var x = a[0],\n      y = a[1],\n      z = a[2],\n      w = a[3];\n  var r = Math.sqrt(x * x + y * y + z * z);\n  var t = r > 0 ? Math.atan2(r, w) / r : 0;\n  out[0] = x * t;\n  out[1] = y * t;\n  out[2] = z * t;\n  out[3] = 0.5 * Math.log(x * x + y * y + z * z + w * w);\n  return out;\n}\n/**\r\n * Calculate the scalar power of a unit quaternion.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a quat to calculate the exponential of\r\n * @param {Number} b amount to scale the quaternion by\r\n * @returns {quat} out\r\n */\n\nexport function pow(out, a, b) {\n  ln(out, a);\n  scale(out, out, b);\n  exp(out, out);\n  return out;\n}\n/**\r\n * Performs a spherical linear interpolation between two quat\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a the first operand\r\n * @param {ReadonlyQuat} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {quat} out\r\n */\n\nexport function slerp(out, a, b, t) {\n  // benchmarks:\n  //    http://jsperf.com/quaternion-slerp-implementations\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bx = b[0],\n      by = b[1],\n      bz = b[2],\n      bw = b[3];\n  var omega, cosom, sinom, scale0, scale1; // calc cosine\n\n  cosom = ax * bx + ay * by + az * bz + aw * bw; // adjust signs (if necessary)\n\n  if (cosom < 0.0) {\n    cosom = -cosom;\n    bx = -bx;\n    by = -by;\n    bz = -bz;\n    bw = -bw;\n  } // calculate coefficients\n\n\n  if (1.0 - cosom > glMatrix.EPSILON) {\n    // standard case (slerp)\n    omega = Math.acos(cosom);\n    sinom = Math.sin(omega);\n    scale0 = Math.sin((1.0 - t) * omega) / sinom;\n    scale1 = Math.sin(t * omega) / sinom;\n  } else {\n    // \"from\" and \"to\" quaternions are very close\n    //  ... so we can do a linear interpolation\n    scale0 = 1.0 - t;\n    scale1 = t;\n  } // calculate final values\n\n\n  out[0] = scale0 * ax + scale1 * bx;\n  out[1] = scale0 * ay + scale1 * by;\n  out[2] = scale0 * az + scale1 * bz;\n  out[3] = scale0 * aw + scale1 * bw;\n  return out;\n}\n/**\r\n * Generates a random unit quaternion\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @returns {quat} out\r\n */\n\nexport function random(out) {\n  // Implementation of http://planning.cs.uiuc.edu/node198.html\n  // TODO: Calling random 3 times is probably not the fastest solution\n  var u1 = glMatrix.RANDOM();\n  var u2 = glMatrix.RANDOM();\n  var u3 = glMatrix.RANDOM();\n  var sqrt1MinusU1 = Math.sqrt(1 - u1);\n  var sqrtU1 = Math.sqrt(u1);\n  out[0] = sqrt1MinusU1 * Math.sin(2.0 * Math.PI * u2);\n  out[1] = sqrt1MinusU1 * Math.cos(2.0 * Math.PI * u2);\n  out[2] = sqrtU1 * Math.sin(2.0 * Math.PI * u3);\n  out[3] = sqrtU1 * Math.cos(2.0 * Math.PI * u3);\n  return out;\n}\n/**\r\n * Calculates the inverse of a quat\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a quat to calculate inverse of\r\n * @returns {quat} out\r\n */\n\nexport function invert(out, a) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var dot = a0 * a0 + a1 * a1 + a2 * a2 + a3 * a3;\n  var invDot = dot ? 1.0 / dot : 0; // TODO: Would be faster to return [0,0,0,0] immediately if dot == 0\n\n  out[0] = -a0 * invDot;\n  out[1] = -a1 * invDot;\n  out[2] = -a2 * invDot;\n  out[3] = a3 * invDot;\n  return out;\n}\n/**\r\n * Calculates the conjugate of a quat\r\n * If the quaternion is normalized, this function is faster than quat.inverse and produces the same result.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a quat to calculate conjugate of\r\n * @returns {quat} out\r\n */\n\nexport function conjugate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\r\n * Creates a quaternion from the given 3x3 rotation matrix.\r\n *\r\n * NOTE: The resultant quaternion is not normalized, so you should be sure\r\n * to renormalize the quaternion yourself where necessary.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyMat3} m rotation matrix\r\n * @returns {quat} out\r\n * @function\r\n */\n\nexport function fromMat3(out, m) {\n  // Algorithm in Ken Shoemake's article in 1987 SIGGRAPH course notes\n  // article \"Quaternion Calculus and Fast Animation\".\n  var fTrace = m[0] + m[4] + m[8];\n  var fRoot;\n\n  if (fTrace > 0.0) {\n    // |w| > 1/2, may as well choose w > 1/2\n    fRoot = Math.sqrt(fTrace + 1.0); // 2w\n\n    out[3] = 0.5 * fRoot;\n    fRoot = 0.5 / fRoot; // 1/(4w)\n\n    out[0] = (m[5] - m[7]) * fRoot;\n    out[1] = (m[6] - m[2]) * fRoot;\n    out[2] = (m[1] - m[3]) * fRoot;\n  } else {\n    // |w| <= 1/2\n    var i = 0;\n    if (m[4] > m[0]) i = 1;\n    if (m[8] > m[i * 3 + i]) i = 2;\n    var j = (i + 1) % 3;\n    var k = (i + 2) % 3;\n    fRoot = Math.sqrt(m[i * 3 + i] - m[j * 3 + j] - m[k * 3 + k] + 1.0);\n    out[i] = 0.5 * fRoot;\n    fRoot = 0.5 / fRoot;\n    out[3] = (m[j * 3 + k] - m[k * 3 + j]) * fRoot;\n    out[j] = (m[j * 3 + i] + m[i * 3 + j]) * fRoot;\n    out[k] = (m[k * 3 + i] + m[i * 3 + k]) * fRoot;\n  }\n\n  return out;\n}\n/**\r\n * Creates a quaternion from the given euler angle x, y, z.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {x} Angle to rotate around X axis in degrees.\r\n * @param {y} Angle to rotate around Y axis in degrees.\r\n * @param {z} Angle to rotate around Z axis in degrees.\r\n * @returns {quat} out\r\n * @function\r\n */\n\nexport function fromEuler(out, x, y, z) {\n  var halfToRad = 0.5 * Math.PI / 180.0;\n  x *= halfToRad;\n  y *= halfToRad;\n  z *= halfToRad;\n  var sx = Math.sin(x);\n  var cx = Math.cos(x);\n  var sy = Math.sin(y);\n  var cy = Math.cos(y);\n  var sz = Math.sin(z);\n  var cz = Math.cos(z);\n  out[0] = sx * cy * cz - cx * sy * sz;\n  out[1] = cx * sy * cz + sx * cy * sz;\n  out[2] = cx * cy * sz - sx * sy * cz;\n  out[3] = cx * cy * cz + sx * sy * sz;\n  return out;\n}\n/**\r\n * Returns a string representation of a quatenion\r\n *\r\n * @param {ReadonlyQuat} a vector to represent as a string\r\n * @returns {String} string representation of the vector\r\n */\n\nexport function str(a) {\n  return \"quat(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \")\";\n}\n/**\r\n * Creates a new quat initialized with values from an existing quaternion\r\n *\r\n * @param {ReadonlyQuat} a quaternion to clone\r\n * @returns {quat} a new quaternion\r\n * @function\r\n */\n\nexport var clone = vec4.clone;\n/**\r\n * Creates a new quat initialized with the given values\r\n *\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @param {Number} w W component\r\n * @returns {quat} a new quaternion\r\n * @function\r\n */\n\nexport var fromValues = vec4.fromValues;\n/**\r\n * Copy the values from one quat to another\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a the source quaternion\r\n * @returns {quat} out\r\n * @function\r\n */\n\nexport var copy = vec4.copy;\n/**\r\n * Set the components of a quat to the given values\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @param {Number} w W component\r\n * @returns {quat} out\r\n * @function\r\n */\n\nexport var set = vec4.set;\n/**\r\n * Adds two quat's\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a the first operand\r\n * @param {ReadonlyQuat} b the second operand\r\n * @returns {quat} out\r\n * @function\r\n */\n\nexport var add = vec4.add;\n/**\r\n * Alias for {@link quat.multiply}\r\n * @function\r\n */\n\nexport var mul = multiply;\n/**\r\n * Scales a quat by a scalar number\r\n *\r\n * @param {quat} out the receiving vector\r\n * @param {ReadonlyQuat} a the vector to scale\r\n * @param {Number} b amount to scale the vector by\r\n * @returns {quat} out\r\n * @function\r\n */\n\nexport var scale = vec4.scale;\n/**\r\n * Calculates the dot product of two quat's\r\n *\r\n * @param {ReadonlyQuat} a the first operand\r\n * @param {ReadonlyQuat} b the second operand\r\n * @returns {Number} dot product of a and b\r\n * @function\r\n */\n\nexport var dot = vec4.dot;\n/**\r\n * Performs a linear interpolation between two quat's\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a the first operand\r\n * @param {ReadonlyQuat} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {quat} out\r\n * @function\r\n */\n\nexport var lerp = vec4.lerp;\n/**\r\n * Calculates the length of a quat\r\n *\r\n * @param {ReadonlyQuat} a vector to calculate length of\r\n * @returns {Number} length of a\r\n */\n\nexport var length = vec4.length;\n/**\r\n * Alias for {@link quat.length}\r\n * @function\r\n */\n\nexport var len = length;\n/**\r\n * Calculates the squared length of a quat\r\n *\r\n * @param {ReadonlyQuat} a vector to calculate squared length of\r\n * @returns {Number} squared length of a\r\n * @function\r\n */\n\nexport var squaredLength = vec4.squaredLength;\n/**\r\n * Alias for {@link quat.squaredLength}\r\n * @function\r\n */\n\nexport var sqrLen = squaredLength;\n/**\r\n * Normalize a quat\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a quaternion to normalize\r\n * @returns {quat} out\r\n * @function\r\n */\n\nexport var normalize = vec4.normalize;\n/**\r\n * Returns whether or not the quaternions have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {ReadonlyQuat} a The first quaternion.\r\n * @param {ReadonlyQuat} b The second quaternion.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nexport var exactEquals = vec4.exactEquals;\n/**\r\n * Returns whether or not the quaternions have approximately the same elements in the same position.\r\n *\r\n * @param {ReadonlyQuat} a The first vector.\r\n * @param {ReadonlyQuat} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nexport var equals = vec4.equals;\n/**\r\n * Sets a quaternion to represent the shortest rotation from one\r\n * vector to another.\r\n *\r\n * Both vectors are assumed to be unit length.\r\n *\r\n * @param {quat} out the receiving quaternion.\r\n * @param {ReadonlyVec3} a the initial vector\r\n * @param {ReadonlyVec3} b the destination vector\r\n * @returns {quat} out\r\n */\n\nexport var rotationTo = function () {\n  var tmpvec3 = vec3.create();\n  var xUnitVec3 = vec3.fromValues(1, 0, 0);\n  var yUnitVec3 = vec3.fromValues(0, 1, 0);\n  return function (out, a, b) {\n    var dot = vec3.dot(a, b);\n\n    if (dot < -0.999999) {\n      vec3.cross(tmpvec3, xUnitVec3, a);\n      if (vec3.len(tmpvec3) < 0.000001) vec3.cross(tmpvec3, yUnitVec3, a);\n      vec3.normalize(tmpvec3, tmpvec3);\n      setAxisAngle(out, tmpvec3, Math.PI);\n      return out;\n    } else if (dot > 0.999999) {\n      out[0] = 0;\n      out[1] = 0;\n      out[2] = 0;\n      out[3] = 1;\n      return out;\n    } else {\n      vec3.cross(tmpvec3, a, b);\n      out[0] = tmpvec3[0];\n      out[1] = tmpvec3[1];\n      out[2] = tmpvec3[2];\n      out[3] = 1 + dot;\n      return normalize(out, out);\n    }\n  };\n}();\n/**\r\n * Performs a spherical linear interpolation with two control points\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a the first operand\r\n * @param {ReadonlyQuat} b the second operand\r\n * @param {ReadonlyQuat} c the third operand\r\n * @param {ReadonlyQuat} d the fourth operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {quat} out\r\n */\n\nexport var sqlerp = function () {\n  var temp1 = create();\n  var temp2 = create();\n  return function (out, a, b, c, d, t) {\n    slerp(temp1, a, d, t);\n    slerp(temp2, b, c, t);\n    slerp(out, temp1, temp2, 2 * t * (1 - t));\n    return out;\n  };\n}();\n/**\r\n * Sets the specified quaternion with values corresponding to the given\r\n * axes. Each axis is a vec3 and is expected to be unit length and\r\n * perpendicular to all other specified axes.\r\n *\r\n * @param {ReadonlyVec3} view  the vector representing the viewing direction\r\n * @param {ReadonlyVec3} right the vector representing the local \"right\" direction\r\n * @param {ReadonlyVec3} up    the vector representing the local \"up\" direction\r\n * @returns {quat} out\r\n */\n\nexport var setAxes = function () {\n  var matr = mat3.create();\n  return function (out, view, right, up) {\n    matr[0] = right[0];\n    matr[3] = right[1];\n    matr[6] = right[2];\n    matr[1] = up[0];\n    matr[4] = up[1];\n    matr[7] = up[2];\n    matr[2] = -view[0];\n    matr[5] = -view[1];\n    matr[8] = -view[2];\n    return normalize(out, fromMat3(out, matr));\n  };\n}();","import * as glMatrix from \"./common.js\";\n/**\r\n * 3x3 Matrix\r\n * @module mat3\r\n */\n\n/**\r\n * Creates a new identity mat3\r\n *\r\n * @returns {mat3} a new 3x3 matrix\r\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(9);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[5] = 0;\n    out[6] = 0;\n    out[7] = 0;\n  }\n\n  out[0] = 1;\n  out[4] = 1;\n  out[8] = 1;\n  return out;\n}\n/**\r\n * Copies the upper-left 3x3 values into the given mat3.\r\n *\r\n * @param {mat3} out the receiving 3x3 matrix\r\n * @param {ReadonlyMat4} a   the source 4x4 matrix\r\n * @returns {mat3} out\r\n */\n\nexport function fromMat4(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[4];\n  out[4] = a[5];\n  out[5] = a[6];\n  out[6] = a[8];\n  out[7] = a[9];\n  out[8] = a[10];\n  return out;\n}\n/**\r\n * Creates a new mat3 initialized with values from an existing matrix\r\n *\r\n * @param {ReadonlyMat3} a matrix to clone\r\n * @returns {mat3} a new 3x3 matrix\r\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(9);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n/**\r\n * Copy the values from one mat3 to another\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the source matrix\r\n * @returns {mat3} out\r\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n/**\r\n * Create a new mat3 with the given values\r\n *\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 3)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 4)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 5)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 6)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 7)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 8)\r\n * @returns {mat3} A new mat3\r\n */\n\nexport function fromValues(m00, m01, m02, m10, m11, m12, m20, m21, m22) {\n  var out = new glMatrix.ARRAY_TYPE(9);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m10;\n  out[4] = m11;\n  out[5] = m12;\n  out[6] = m20;\n  out[7] = m21;\n  out[8] = m22;\n  return out;\n}\n/**\r\n * Set the components of a mat3 to the given values\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 3)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 4)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 5)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 6)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 7)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 8)\r\n * @returns {mat3} out\r\n */\n\nexport function set(out, m00, m01, m02, m10, m11, m12, m20, m21, m22) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m10;\n  out[4] = m11;\n  out[5] = m12;\n  out[6] = m20;\n  out[7] = m21;\n  out[8] = m22;\n  return out;\n}\n/**\r\n * Set a mat3 to the identity matrix\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @returns {mat3} out\r\n */\n\nexport function identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 1;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n/**\r\n * Transpose the values of a mat3\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the source matrix\r\n * @returns {mat3} out\r\n */\n\nexport function transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\n  if (out === a) {\n    var a01 = a[1],\n        a02 = a[2],\n        a12 = a[5];\n    out[1] = a[3];\n    out[2] = a[6];\n    out[3] = a01;\n    out[5] = a[7];\n    out[6] = a02;\n    out[7] = a12;\n  } else {\n    out[0] = a[0];\n    out[1] = a[3];\n    out[2] = a[6];\n    out[3] = a[1];\n    out[4] = a[4];\n    out[5] = a[7];\n    out[6] = a[2];\n    out[7] = a[5];\n    out[8] = a[8];\n  }\n\n  return out;\n}\n/**\r\n * Inverts a mat3\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the source matrix\r\n * @returns {mat3} out\r\n */\n\nexport function invert(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  var b01 = a22 * a11 - a12 * a21;\n  var b11 = -a22 * a10 + a12 * a20;\n  var b21 = a21 * a10 - a11 * a20; // Calculate the determinant\n\n  var det = a00 * b01 + a01 * b11 + a02 * b21;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = b01 * det;\n  out[1] = (-a22 * a01 + a02 * a21) * det;\n  out[2] = (a12 * a01 - a02 * a11) * det;\n  out[3] = b11 * det;\n  out[4] = (a22 * a00 - a02 * a20) * det;\n  out[5] = (-a12 * a00 + a02 * a10) * det;\n  out[6] = b21 * det;\n  out[7] = (-a21 * a00 + a01 * a20) * det;\n  out[8] = (a11 * a00 - a01 * a10) * det;\n  return out;\n}\n/**\r\n * Calculates the adjugate of a mat3\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the source matrix\r\n * @returns {mat3} out\r\n */\n\nexport function adjoint(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  out[0] = a11 * a22 - a12 * a21;\n  out[1] = a02 * a21 - a01 * a22;\n  out[2] = a01 * a12 - a02 * a11;\n  out[3] = a12 * a20 - a10 * a22;\n  out[4] = a00 * a22 - a02 * a20;\n  out[5] = a02 * a10 - a00 * a12;\n  out[6] = a10 * a21 - a11 * a20;\n  out[7] = a01 * a20 - a00 * a21;\n  out[8] = a00 * a11 - a01 * a10;\n  return out;\n}\n/**\r\n * Calculates the determinant of a mat3\r\n *\r\n * @param {ReadonlyMat3} a the source matrix\r\n * @returns {Number} determinant of a\r\n */\n\nexport function determinant(a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  return a00 * (a22 * a11 - a12 * a21) + a01 * (-a22 * a10 + a12 * a20) + a02 * (a21 * a10 - a11 * a20);\n}\n/**\r\n * Multiplies two mat3's\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the first operand\r\n * @param {ReadonlyMat3} b the second operand\r\n * @returns {mat3} out\r\n */\n\nexport function multiply(out, a, b) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  var b00 = b[0],\n      b01 = b[1],\n      b02 = b[2];\n  var b10 = b[3],\n      b11 = b[4],\n      b12 = b[5];\n  var b20 = b[6],\n      b21 = b[7],\n      b22 = b[8];\n  out[0] = b00 * a00 + b01 * a10 + b02 * a20;\n  out[1] = b00 * a01 + b01 * a11 + b02 * a21;\n  out[2] = b00 * a02 + b01 * a12 + b02 * a22;\n  out[3] = b10 * a00 + b11 * a10 + b12 * a20;\n  out[4] = b10 * a01 + b11 * a11 + b12 * a21;\n  out[5] = b10 * a02 + b11 * a12 + b12 * a22;\n  out[6] = b20 * a00 + b21 * a10 + b22 * a20;\n  out[7] = b20 * a01 + b21 * a11 + b22 * a21;\n  out[8] = b20 * a02 + b21 * a12 + b22 * a22;\n  return out;\n}\n/**\r\n * Translate a mat3 by the given vector\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the matrix to translate\r\n * @param {ReadonlyVec2} v vector to translate by\r\n * @returns {mat3} out\r\n */\n\nexport function translate(out, a, v) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a10 = a[3],\n      a11 = a[4],\n      a12 = a[5],\n      a20 = a[6],\n      a21 = a[7],\n      a22 = a[8],\n      x = v[0],\n      y = v[1];\n  out[0] = a00;\n  out[1] = a01;\n  out[2] = a02;\n  out[3] = a10;\n  out[4] = a11;\n  out[5] = a12;\n  out[6] = x * a00 + y * a10 + a20;\n  out[7] = x * a01 + y * a11 + a21;\n  out[8] = x * a02 + y * a12 + a22;\n  return out;\n}\n/**\r\n * Rotates a mat3 by the given angle\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat3} out\r\n */\n\nexport function rotate(out, a, rad) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a10 = a[3],\n      a11 = a[4],\n      a12 = a[5],\n      a20 = a[6],\n      a21 = a[7],\n      a22 = a[8],\n      s = Math.sin(rad),\n      c = Math.cos(rad);\n  out[0] = c * a00 + s * a10;\n  out[1] = c * a01 + s * a11;\n  out[2] = c * a02 + s * a12;\n  out[3] = c * a10 - s * a00;\n  out[4] = c * a11 - s * a01;\n  out[5] = c * a12 - s * a02;\n  out[6] = a20;\n  out[7] = a21;\n  out[8] = a22;\n  return out;\n}\n/**\r\n * Scales the mat3 by the dimensions in the given vec2\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the matrix to rotate\r\n * @param {ReadonlyVec2} v the vec2 to scale the matrix by\r\n * @returns {mat3} out\r\n **/\n\nexport function scale(out, a, v) {\n  var x = v[0],\n      y = v[1];\n  out[0] = x * a[0];\n  out[1] = x * a[1];\n  out[2] = x * a[2];\n  out[3] = y * a[3];\n  out[4] = y * a[4];\n  out[5] = y * a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n/**\r\n * Creates a matrix from a vector translation\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat3.identity(dest);\r\n *     mat3.translate(dest, dest, vec);\r\n *\r\n * @param {mat3} out mat3 receiving operation result\r\n * @param {ReadonlyVec2} v Translation vector\r\n * @returns {mat3} out\r\n */\n\nexport function fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 1;\n  out[5] = 0;\n  out[6] = v[0];\n  out[7] = v[1];\n  out[8] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a given angle\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat3.identity(dest);\r\n *     mat3.rotate(dest, dest, rad);\r\n *\r\n * @param {mat3} out mat3 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat3} out\r\n */\n\nexport function fromRotation(out, rad) {\n  var s = Math.sin(rad),\n      c = Math.cos(rad);\n  out[0] = c;\n  out[1] = s;\n  out[2] = 0;\n  out[3] = -s;\n  out[4] = c;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a vector scaling\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat3.identity(dest);\r\n *     mat3.scale(dest, dest, vec);\r\n *\r\n * @param {mat3} out mat3 receiving operation result\r\n * @param {ReadonlyVec2} v Scaling vector\r\n * @returns {mat3} out\r\n */\n\nexport function fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = v[1];\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n/**\r\n * Copies the values from a mat2d into a mat3\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat2d} a the matrix to copy\r\n * @returns {mat3} out\r\n **/\n\nexport function fromMat2d(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = 0;\n  out[3] = a[2];\n  out[4] = a[3];\n  out[5] = 0;\n  out[6] = a[4];\n  out[7] = a[5];\n  out[8] = 1;\n  return out;\n}\n/**\r\n * Calculates a 3x3 matrix from the given quaternion\r\n *\r\n * @param {mat3} out mat3 receiving operation result\r\n * @param {ReadonlyQuat} q Quaternion to create matrix from\r\n *\r\n * @returns {mat3} out\r\n */\n\nexport function fromQuat(out, q) {\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var yx = y * x2;\n  var yy = y * y2;\n  var zx = z * x2;\n  var zy = z * y2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - yy - zz;\n  out[3] = yx - wz;\n  out[6] = zx + wy;\n  out[1] = yx + wz;\n  out[4] = 1 - xx - zz;\n  out[7] = zy - wx;\n  out[2] = zx - wy;\n  out[5] = zy + wx;\n  out[8] = 1 - xx - yy;\n  return out;\n}\n/**\r\n * Calculates a 3x3 normal matrix (transpose inverse) from the 4x4 matrix\r\n *\r\n * @param {mat3} out mat3 receiving operation result\r\n * @param {ReadonlyMat4} a Mat4 to derive the normal matrix from\r\n *\r\n * @returns {mat3} out\r\n */\n\nexport function normalFromMat4(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n  out[1] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n  out[2] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n  out[3] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n  out[4] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n  out[5] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n  out[6] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n  out[7] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n  out[8] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n  return out;\n}\n/**\r\n * Generates a 2D projection matrix with the given bounds\r\n *\r\n * @param {mat3} out mat3 frustum matrix will be written into\r\n * @param {number} width Width of your gl context\r\n * @param {number} height Height of gl context\r\n * @returns {mat3} out\r\n */\n\nexport function projection(out, width, height) {\n  out[0] = 2 / width;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = -2 / height;\n  out[5] = 0;\n  out[6] = -1;\n  out[7] = 1;\n  out[8] = 1;\n  return out;\n}\n/**\r\n * Returns a string representation of a mat3\r\n *\r\n * @param {ReadonlyMat3} a matrix to represent as a string\r\n * @returns {String} string representation of the matrix\r\n */\n\nexport function str(a) {\n  return \"mat3(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \", \" + a[4] + \", \" + a[5] + \", \" + a[6] + \", \" + a[7] + \", \" + a[8] + \")\";\n}\n/**\r\n * Returns Frobenius norm of a mat3\r\n *\r\n * @param {ReadonlyMat3} a the matrix to calculate Frobenius norm of\r\n * @returns {Number} Frobenius norm\r\n */\n\nexport function frob(a) {\n  return Math.hypot(a[0], a[1], a[2], a[3], a[4], a[5], a[6], a[7], a[8]);\n}\n/**\r\n * Adds two mat3's\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the first operand\r\n * @param {ReadonlyMat3} b the second operand\r\n * @returns {mat3} out\r\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  out[8] = a[8] + b[8];\n  return out;\n}\n/**\r\n * Subtracts matrix b from matrix a\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the first operand\r\n * @param {ReadonlyMat3} b the second operand\r\n * @returns {mat3} out\r\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  out[6] = a[6] - b[6];\n  out[7] = a[7] - b[7];\n  out[8] = a[8] - b[8];\n  return out;\n}\n/**\r\n * Multiply each element of the matrix by a scalar.\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {ReadonlyMat3} a the matrix to scale\r\n * @param {Number} b amount to scale the matrix's elements by\r\n * @returns {mat3} out\r\n */\n\nexport function multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  out[8] = a[8] * b;\n  return out;\n}\n/**\r\n * Adds two mat3's after multiplying each element of the second operand by a scalar value.\r\n *\r\n * @param {mat3} out the receiving vector\r\n * @param {ReadonlyMat3} a the first operand\r\n * @param {ReadonlyMat3} b the second operand\r\n * @param {Number} scale the amount to scale b's elements by before adding\r\n * @returns {mat3} out\r\n */\n\nexport function multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  out[4] = a[4] + b[4] * scale;\n  out[5] = a[5] + b[5] * scale;\n  out[6] = a[6] + b[6] * scale;\n  out[7] = a[7] + b[7] * scale;\n  out[8] = a[8] + b[8] * scale;\n  return out;\n}\n/**\r\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {ReadonlyMat3} a The first matrix.\r\n * @param {ReadonlyMat3} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8];\n}\n/**\r\n * Returns whether or not the matrices have approximately the same elements in the same position.\r\n *\r\n * @param {ReadonlyMat3} a The first matrix.\r\n * @param {ReadonlyMat3} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5],\n      a6 = a[6],\n      a7 = a[7],\n      a8 = a[8];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3],\n      b4 = b[4],\n      b5 = b[5],\n      b6 = b[6],\n      b7 = b[7],\n      b8 = b[8];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8));\n}\n/**\r\n * Alias for {@link mat3.multiply}\r\n * @function\r\n */\n\nexport var mul = multiply;\n/**\r\n * Alias for {@link mat3.subtract}\r\n * @function\r\n */\n\nexport var sub = subtract;","<script>\n\timport { writable } from 'svelte/store';\n\timport { get_scene, get_parent, set_parent } from '../internal/index.mjs';\n\timport * as mat4 from 'gl-matrix/mat4';\n\timport * as quat from 'gl-matrix/quat';\n\n\texport let location = [0, 0, 0];\n\texport let lookAt = undefined;\n\texport let up = [0, 1, 0];\n\texport let rotation = [0, 0, 0]; // TODO make it possible to set a quaternion as a prop?\n\texport let scale = 1;\n\n\tconst scene = get_scene();\n\tconst parent = get_parent();\n\n\tconst { ctm: parent_ctm } = parent;\n\tconst ctm = writable(null);\n\n\tlet matrix = mat4.create();\n\tlet quaternion = quat.create();\n\tconst world_position = new Float32Array(matrix.buffer, 12 * 4, 3);\n\n\t$: scale_array = typeof scale === 'number' ? [scale, scale, scale] : scale;\n\n\t$: target = lookAt ? scene.get_target(lookAt) : writable(null);\n\n\t$: if ($target) {\n\t\tmat4.translate(matrix, $parent_ctm, location);\n\t\tmat4.targetTo(matrix, world_position, $target, up);\n\t\tmat4.scale(matrix, matrix, scale_array);\n\n\t\t$ctm = matrix;\n\t} else {\n\t\tquaternion = quat.fromEuler(quaternion || quat.create(), ...rotation);\n\t\tmatrix = mat4.fromRotationTranslationScale(matrix, quaternion, location, scale_array);\n\t\t$ctm = mat4.multiply($ctm || mat4.create(), $parent_ctm, matrix);\n\t}\n\n\t// $: quaternion = quat.fromEuler(quaternion || quat.create(), ...rotation);\n\t// $: matrix = mat4.fromRotationTranslationScale(matrix || mat4.create(), quaternion, location, scale_array);\n\t// $: $ctm = mat4.multiply($ctm || mat4.create(), $parent_ctm, matrix);\n\t$: ($ctm, scene.invalidate());\n\n\tset_parent({ ctm });\n</script>\n\n<slot></slot>","const caches = new Map();\n\nconst setters = {\n\t[5126]:  (gl, loc, data) => gl.uniform1f(loc, data),\n\t[35664]: (gl, loc, data) => gl.uniform2fv(loc, data),\n\t[35665]: (gl, loc, data) => gl.uniform3fv(loc, data),\n\t[35666]: (gl, loc, data) => gl.uniform4fv(loc, data),\n\n\t[35674]: (gl, loc, data) => gl.uniformMatrix2fv(loc, false, data),\n\t[35675]: (gl, loc, data) => gl.uniformMatrix3fv(loc, false, data),\n\t[35676]: (gl, loc, data) => gl.uniformMatrix4fv(loc, false, data),\n\n\t[35678]: (gl, loc, data) => {\n\t\tgl.activeTexture(gl[`TEXTURE${data.index}`]);\n\t\tgl.bindTexture(gl.TEXTURE_2D, data.texture);\n\t\tgl.uniform1i(loc, data.index);\n\t}\n\t//,\n\t// TEXTURE_CUBE_MAP\n\t// [35680]: (gl, loc, data) => {\n\t// \tgl.bindTexture(gl.TEXTURE_CUBE_MAP, data.texture);\n\t// \tgl.uniform1i(loc, data.index);\n\t// }\n};\n\nexport function compile(gl, vert, frag) {\n\tif (!caches.has(gl)) caches.set(gl, new Map());\n\tconst cache = caches.get(gl);\n\n\tconst hash = vert + frag;\n\tif (!cache.has(hash)) {\n\t\tconst program = create_program(gl, vert, frag);\n\t\tconst uniforms = get_uniforms(gl, program);\n\t\tconst attributes = get_attributes(gl, program);\n\n\t\tcache.set(hash, { program, uniforms, attributes });\n\t}\n\n\treturn cache.get(hash);\n}\n\nexport function remove_program(info) {\n\tconst cache = caches.get(info.gl);\n\n\tif (--info.users === 0) {\n\t\tinfo.gl.deleteProgram(info.program);\n\t\tcache.delete(info.hash);\n\t}\n}\n\nfunction pad(num, len = 4) {\n\tnum = String(num);\n\twhile (num.length < len) num = ` ${num}`;\n\treturn num;\n}\n\nfunction repeat(str, i) {\n\tlet result = '';\n\twhile (i--) result += str;\n\treturn result;\n}\n\nfunction create_shader(gl, type, source, label) {\n\tconst shader = gl.createShader(type);\n\tgl.shaderSource(shader, source);\n\tgl.compileShader(shader);\n\n\tif (gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\n\t\treturn shader;\n\t}\n\n\tconst log = gl.getShaderInfoLog(shader);\n\tconst match = /ERROR: (\\d+):(\\d+): (.+)/.exec(log);\n\n\tif (match) {\n\t\tconst c = +match[1];\n\t\tconst l = +match[2] - 1;\n\n\t\tconsole.log('%c' + match[3], 'font-weight: bold; color: red');\n\n\t\tconst lines = source.split('\\n');\n\t\tfor (let i = 0; i < lines.length; i += 1) {\n\t\t\tif (Math.abs(l - i) > 5) continue;\n\n\t\t\tconst line = lines[i].replace(/^\\t+/gm, tabs => repeat(' ', tabs.length * 4));\n\t\t\tconst indent = /^\\s+/.exec(line);\n\n\t\t\tconst str = `${pad(i)}: ${line}`;\n\n\t\t\tif (i === l) {\n\t\t\t\tconsole.log('%c' + str, 'font-weight: bold; color: red');\n\t\t\t\tconsole.log('%c' + (indent && indent[0] || '') + repeat(' ', c + 6) + '^', 'color: red');\n\t\t\t} else {\n\t\t\t\tconsole.log(str);\n\t\t\t}\n\t\t}\n\n\t\tthrow new Error(`Failed to compile ${label} shader`);\n\t}\n\n\tthrow new Error(`Failed to compile ${label} shader:\\n${log}`);\n}\n\nfunction create_program(gl, vert, frag) {\n\tconst program = gl.createProgram();\n\n\tgl.attachShader(program, create_shader(gl, gl.VERTEX_SHADER, vert, 'vertex'));\n\tgl.attachShader(program, create_shader(gl, gl.FRAGMENT_SHADER, frag, 'fragment'));\n\tgl.linkProgram(program);\n\n\tconst success = gl.getProgramParameter(program, gl.LINK_STATUS);\n\tif (!success) {\n\t\tconsole.log(gl.getProgramInfoLog(program));\n\t\tthrow new Error(`Failed to compile program:\\n${gl.getProgramInfoLog(program)}`);\n\t}\n\n\treturn program;\n}\n\nfunction get_uniforms(gl, program) {\n\tconst uniforms = [];\n\n\tconst n = gl.getProgramParameter(program, gl.ACTIVE_UNIFORMS);\n\n\tfor (let i = 0; i < n; i += 1) {\n\t\tlet { size, type, name } = gl.getActiveUniform(program, i);\n\t\tconst loc = gl.getUniformLocation(program, name);\n\t\tconst setter = setters[type];\n\n\t\t// if (!setter) {\n\t\t// \tthrow new Error(`not implemented ${type} (${name})`);\n\t\t// }\n\n\t\tuniforms.push({ size, type, name, setter, loc });\n\t}\n\n\treturn uniforms;\n}\n\nfunction get_attributes(gl, program) {\n\tconst attributes = [];\n\n\tconst n = gl.getProgramParameter(program, gl.ACTIVE_ATTRIBUTES);\n\n\tfor (let i = 0; i < n; i += 1) {\n\t\tlet { size, type, name } = gl.getActiveAttrib(program, i);\n\t\tname = name.replace('[0]', '');\n\t\tconst loc = gl.getAttribLocation(program, name);\n\n\t\tattributes.push({ size, type, name, loc });\n\t}\n\n\treturn attributes;\n}\n","import vert_builtin from './shaders/builtin/vert.glsl';\nimport frag_builtin from './shaders/builtin/frag.glsl';\nimport { compile } from './program.mjs';\nimport { process_color } from '../../internal/utils.mjs';\n\nfunction deep_set(obj, path, value) {\n\tconst parts = path.replace(/\\]$/, '').split(/\\[|\\]\\.|\\./);\n\n\twhile (parts.length > 1) {\n\t\tconst part = parts.shift();\n\t\tconst next = parts[0];\n\n\t\tif (!obj[part]) obj[part] = /^\\d+$/.test(next) ? [] : {};\n\t\tobj = obj[part];\n\t}\n\n\tobj[parts[0]] = value;\n}\n\nexport default class Material {\n\tconstructor(scene, vert, frag, defines) {\n\t\tthis.scene = scene;\n\n\t\tconst gl = scene.gl;\n\t\tthis.gl = gl;\n\n\t\tconst { program, uniforms, attributes } = compile(\n\t\t\tgl,\n\t\t\t'#version 300 es' + '\\n\\n' + scene.defines + defines + '\\n\\n' + vert_builtin + '\\n\\n' + vert,\n\t\t\t'#version 300 es' + '\\n\\n' + scene.defines + defines + '\\n\\n' + frag_builtin + '\\n\\n' + frag\n\t\t);\n\n\t\t// console.log(vert.match(/(?:NAME\\s)(.+)/g));\n\n\t\tthis.vertName = (vert.match(/(?:NAME\\s)(.+)/g) !== null) ?\n\t\t\tvert.match(/(?:NAME\\s)(.+)/g)[0].substr(5) :\n\t\t\t\"default\";\n\n\t\tthis.fragName = (frag.match(/(?:NAME\\s)(.+)/g) !== null) ?\n\t\t\tfrag.match(/(?:NAME\\s)(.+)/g)[0].substr(5) :\n\t\t\t\"default\";\n\n\t\tthis.program = program;\n\t\tthis.uniforms = uniforms;\n\t\tthis.attributes = attributes;\n\n\t\tthis.uniform_locations = {};\n\t\tthis.uniforms.forEach(uniform => {\n\t\t\tdeep_set(this.uniform_locations, uniform.name, gl.getUniformLocation(this.program, uniform.name));\n\t\t});\n\n\t\tthis.attribute_locations = {};\n\t\tthis.attributes.forEach(attribute => {\n\t\t\tthis.attribute_locations[attribute.name] = gl.getAttribLocation(this.program, attribute.name);\n\t\t});\n\n\t\tthis.raw_values = {};\n\t\tthis.values = {};\n\t}\n\n\tset_uniforms(raw_values) {\n\t\tlet texture_index = 0;\n\n\t\tthis.uniforms.forEach(({ name, type, loc, setter, processor }) => {\n\t\t\tif (name in raw_values) {\n\t\t\t\tlet data = raw_values[name];\n\n\t\t\t\tif (data === this.raw_values[name]) return;\n\n\t\t\t\tif (type === 35678) {\n\t\t\t\t\t// texture\n\t\t\t\t\tthis.values[name] = {\n\t\t\t\t\t\ttexture: data.instantiate(this.scene)._,\n\t\t\t\t\t\tindex: texture_index++\n\t\t\t\t\t};\n\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (typeof data === 'number' && type !== 5126) {\n\t\t\t\t\t// data provided was a number like 0x123456,\n\t\t\t\t\t// but it needs to be an array. for now,\n\t\t\t\t\t// assume it's a color, i.e. vec3\n\t\t\t\t\tdata = process_color(data);\n\t\t\t\t}\n\n\t\t\t\tthis.values[name] = data;\n\t\t\t}\n\t\t});\n\n\t\tthis.raw_values = raw_values;\n\t}\n\n\tapply_uniforms(gl, builtins, model, process_extra_shader_components) {\n\t\t// TODO if this is the only program, maybe\n\t\t// we don't need to re-run this each time\n\t\tthis.uniforms.forEach(uniform => {\n\t\t\tif (uniform.name in this.values) {\n\t\t\t\tuniform.setter(gl, uniform.loc, this.values[uniform.name]);\n\t\t\t}\n\t\t});\n\n\t\tif (typeof process_extra_shader_components === 'function') {\n\t\t\tprocess_extra_shader_components(gl, this, model)\n\t\t}\n\t}\n\n\tdestroy() {\n\t\t// TODO\n\t}\n}\n","<script>\n\timport { onDestroy, beforeUpdate } from 'svelte';\n\timport { writable } from 'svelte/store';\n\timport { get_scene, get_layer, get_parent } from '../../internal/index.mjs';\n\timport { process_color } from '../../internal/utils.mjs';\n\timport Material from './Material.mjs';\n\timport vert_default from './shaders/default/vert.glsl';\n\timport frag_default from './shaders/default/frag.glsl';\n\timport * as mat4 from 'gl-matrix/mat4';\n\timport * as quat from 'gl-matrix/quat';\n\n\texport let location = [0, 0, 0];\n\texport let rotation = [0, 0, 0]; // TODO make it possible to set a quaternion as a prop?\n\texport let scale = 1;\n\n\texport let geometry;\n\n\texport let vert = vert_default;\n\texport let frag = frag_default;\n\texport let uniforms = {};\n\texport let depthTest = undefined;\n\texport let doubleSided = undefined;\n\texport let transparent = false;\n\n\tconst scene = get_scene();\n\tconst layer = get_layer();\n\tconst { ctm } = get_parent();\n\n\tconst out = mat4.create();\n\tconst out2 = mat4.create();\n\n\t$: scale_array = typeof scale === 'number' ? [scale, scale, scale] : scale;\n\t$: quaternion = quat.fromEuler(quaternion || quat.create(), ...rotation);\n\t$: matrix = mat4.fromRotationTranslationScale(matrix || mat4.create(), quaternion, location, scale_array);\n\t$: model = mat4.multiply(model || mat4.create(), $ctm, matrix);\n\n\t$: defines = Object.keys(uniforms)\n\t\t.filter(k => uniforms[k] != null)\n\t\t.map(k => `#define has_${k} true\\n`)\n\t\t.join('');\n\t$: material_instance = new Material(scene, vert, frag, defines);\n\t$: material_instance.set_uniforms(uniforms);\n\t$: geometry_instance = geometry.instantiate(scene, material_instance.program);\n\n\tconst mesh = {};\n\t$: mesh.model = model;\n\t$: mesh.model_inverse_transpose = (mat4.invert(out2, model), mat4.transpose(out2, out2));\n\t$: mesh.material = material_instance;\n\t$: mesh.geometry = geometry_instance;\n\t$: mesh.depthTest = depthTest;\n\t$: mesh.doubleSided = doubleSided;\n\t$: mesh.transparent = transparent;\n\n\tlet existing = true; // track if we've previously added this mesh\n\tconst add_mesh = () => {\n\t\tlayer.add_mesh(mesh, existing);\n\t\texisting = false;\n\t};\n\n\t$: (transparent, add_mesh());\n\t$: (model, transparent && (layer.needs_transparency_sort = true));\n\t$: (geometry_instance, model, uniforms, scene.invalidate());\n\n\tonDestroy(() => {\n\t\tif (mesh.material) mesh.material.destroy();\n\t});\n</script>","<script>\n\timport { writable } from 'svelte/store';\n\timport { get_scene, get_parent } from '../internal/index.mjs';\n\timport * as mat4 from 'gl-matrix/mat4';\n\n\texport let id;\n\texport let location = [0, 0, 0];\n\n\tconst { get_target } = get_scene();\n\tconst { ctm } = get_parent();\n\n\tlet model = mat4.create();\n\tconst world_position = new Float32Array(model.buffer, 12 * 4, 3);\n\n\t// break `location` out into its components, so that we can\n\t// skip downstream computations. TODO would be nice if there\n\t// was a neater way to achieve this\n\t$: x = location[0];\n\t$: y = location[1];\n\t$: z = location[2];\n\n\tconst loc = new Float32Array(3);\n\t$: loc[0] = x, loc[1] = y, loc[2] = z;\n\n\t$: model = mat4.translate(model, $ctm, loc);\n\t$: (model, get_target(id).set(world_position));\n</script>","<script>\n\timport { get_scene } from '../../internal/index.mjs';\n\timport { process_color } from '../../internal/utils.mjs';\n\n\texport let color = [1, 1, 1];\n\texport let intensity = 0.2;\n\n\tconst scene = get_scene();\n\n\tconst light = {};\n\t$: light.color = process_color(color);\n\t$: light.intensity = intensity;\n\n\tscene.add_ambient_light(light);\n\n\t$: (light, scene.invalidate());\n</script>","<script>\n\timport { get_scene, get_parent } from '../../internal/index.mjs';\n\timport { process_color } from '../../internal/utils.mjs';\n\timport * as mat4 from 'gl-matrix/mat4';\n\timport * as vec3 from 'gl-matrix/vec3';\n\n\texport let direction = new Float32Array([-1, -1, -1]);\n\texport let color = new Float32Array([1, 1, 1]);\n\texport let intensity = 1;\n\n\tconst scene = get_scene();\n\tconst { ctm } = get_parent();\n\n\t$: multiplied = vec3.transformMat4(multiplied || vec3.create(), direction, $ctm);\n\n\tconst light = {};\n\t$: light.direction = vec3.normalize(light.direction || vec3.create(), multiplied);\n\t$: light.color = process_color(color);\n\t$: light.intensity = intensity;\n\n\tscene.add_directional_light(light);\n\n\t$: (light, scene.invalidate());\n</script>","<script>\n\timport { get_scene, get_parent } from '../../internal/index.mjs';\n\timport { process_color } from '../../internal/utils.mjs';\n\timport * as mat4 from 'gl-matrix/mat4';\n\timport * as vec3 from 'gl-matrix/vec3';\n\n\texport let location = new Float32Array([-1, -1, -1]);\n\texport let color = new Float32Array([1, 1, 1]);\n\texport let intensity = 1;\n\n\tconst scene = get_scene();\n\tconst { ctm } = get_parent();\n\n\tlet light = { // TODO change to a const once bug is fixed\n\t\tlocation: vec3.create(),\n\t\tcolor: null,\n\t\tintensity: null\n\t};\n\n\t$: light.location = vec3.transformMat4(light.location, location, $ctm);\n\t$: light.color = process_color(color);\n\t$: light.intensity = intensity;\n\n\tscene.add_point_light(light);\n\n\t$: (light, scene.invalidate());\n</script>","var default_sort = function (item, needle) { return item - needle; };\nfunction binarySearch(array, search, fn) {\n    if (fn === void 0) { fn = default_sort; }\n    var low = 0;\n    var high = array.length - 1;\n    var sort = fn.length === 1\n        ? function (item, needle) { return fn(item) - search; }\n        : fn;\n    while (low <= high) {\n        var i = (high + low) >> 1;\n        var d = sort(array[i], search);\n        if (d < 0) {\n            low = i + 1;\n        }\n        else if (d > 0) {\n            high = i - 1;\n        }\n        else {\n            return i;\n        }\n    }\n    return -low - 1;\n}\n\nfunction pickRandom(array) {\n    var i = ~~(Math.random() * array.length);\n    return array[i];\n}\n\n// http://bost.ocks.org/mike/shuffle/\nfunction shuffle(array) {\n    var m = array.length;\n    // While there remain elements to shuffle…\n    while (m > 0) {\n        // Pick a remaining element…\n        var i = Math.floor(Math.random() * m--);\n        // And swap it with the current element.\n        var t = array[m];\n        array[m] = array[i];\n        array[i] = t;\n    }\n    return array;\n}\n\nfunction queue(max) {\n    if (max === void 0) { max = 4; }\n    var items = []; // TODO\n    var pending = 0;\n    var closed = false;\n    var fulfil_closed;\n    function dequeue() {\n        if (pending === 0 && items.length === 0) {\n            if (fulfil_closed)\n                fulfil_closed();\n        }\n        if (pending >= max)\n            return;\n        if (items.length === 0)\n            return;\n        pending += 1;\n        var _a = items.shift(), fn = _a.fn, fulfil = _a.fulfil, reject = _a.reject;\n        var promise = fn();\n        try {\n            promise.then(fulfil, reject).then(function () {\n                pending -= 1;\n                dequeue();\n            });\n        }\n        catch (err) {\n            reject(err);\n            pending -= 1;\n            dequeue();\n        }\n        dequeue();\n    }\n    return {\n        add: function (fn) {\n            if (closed) {\n                throw new Error(\"Cannot add to a closed queue\");\n            }\n            return new Promise(function (fulfil, reject) {\n                items.push({ fn: fn, fulfil: fulfil, reject: reject });\n                dequeue();\n            });\n        },\n        close: function () {\n            closed = true;\n            return new Promise(function (fulfil, reject) {\n                if (pending === 0) {\n                    fulfil();\n                }\n                else {\n                    fulfil_closed = fulfil;\n                }\n            });\n        }\n    };\n}\n\nfunction createSprite(width, height, fn) {\n    var canvas = document.createElement('canvas');\n    canvas.width = width;\n    canvas.height = height;\n    var ctx = canvas.getContext('2d');\n    fn(ctx, canvas);\n    return canvas;\n}\n\nfunction clamp(num, min, max) {\n    return num < min ? min : num > max ? max : num;\n}\n\nfunction random(a, b) {\n    if (b === undefined)\n        return Math.random() * a;\n    return a + Math.random() * (b - a);\n}\n\nfunction linear(domain, range) {\n    var d0 = domain[0];\n    var r0 = range[0];\n    var m = (range[1] - r0) / (domain[1] - d0);\n    return Object.assign(function (num) {\n        return r0 + (num - d0) * m;\n    }, {\n        inverse: function () { return linear(range, domain); }\n    });\n}\n\n// https://stackoverflow.com/questions/2901102/how-to-print-a-number-with-commas-as-thousands-separators-in-javascript\nfunction commas(num) {\n    var parts = String(num).split('.');\n    parts[0] = parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n    return parts.join('.');\n}\n\n// array\n\nexport { binarySearch, pickRandom, shuffle, queue, createSprite, clamp, random, linear as linearScale, commas };\n","export function debounce(fn) {\n\tlet scheduled = false;\n\tlet event;\n\n\tfunction release() {\n\t\tfn(event);\n\t\tscheduled = false;\n\t}\n\n\treturn function(e) {\n\t\tif (!scheduled) {\n\t\t\trequestAnimationFrame(release);\n\t\t\tscheduled = true;\n\t\t}\n\n\t\tevent = e;\n\t};\n}","<script>\n\timport * as yootils from 'yootils';\n\timport { debounce } from './debounce.js';\n\timport { onDestroy } from 'svelte';\n\timport { get_scene } from '../internal/index.mjs';\n\timport { normalize } from '../internal/utils.mjs';\n\n\t// TODO check we're not inside a group?\n\tconst scene = get_scene();\n\n\texport let location = new Float32Array([1, 3, 1]);\n\texport let target = new Float32Array([0, 1, 0]);\n\t// export let up = new Float32Array([0, 1, 0]);\n\n\texport let minDistance = 0;\n\texport let maxDistance = Infinity;\n\n\t// How far you can orbit vertically, upper and lower limits.\n\t// Range is 0 to Math.PI radians.\n\texport let minPolarAngle = 0; // radians\n\texport let maxPolarAngle = Math.PI; // radians\n\n\t// How far you can orbit horizontally, upper and lower limits.\n\t// If set, must be a sub-interval of the interval [ - Math.PI, Math.PI ].\n\t// export let minAzimuthAngle = - Infinity; // radians\n\t// export let maxAzimuthAngle = Infinity; // radians\n\n\t// Enable damping (inertia). falsy == no damping\n\t// export let damping = false;\n\n\tconst EPSILON = 0.000001;\n\n\tfunction rotate(x, y) {\n\t\t// TODO handle the up vector. for now, just assume [0,1,0]\n\t\tconst vx = location[0] - target[0];\n\t\tconst vy = location[1] - target[1];\n\t\tconst vz = location[2] - target[2];\n\n\t\tconst radius = Math.sqrt(vx * vx + vy * vy + vz * vz);\n\n\t\tlet theta = Math.atan2(vx, vz);\n\t\ttheta -= x;\n\n\t\tlet phi = Math.acos(yootils.clamp(vy / radius, -1, 1));\n\t\tphi = yootils.clamp(phi - y, EPSILON, Math.PI - EPSILON);\n\t\tphi = yootils.clamp(phi, minPolarAngle, maxPolarAngle);\n\n\t\tconst sin_phi_radius = Math.sin(phi) * radius;\n\n\t\tconst nx = sin_phi_radius * Math.sin(theta);\n\t\tconst ny = Math.cos(phi) * radius;\n\t\tconst nz = sin_phi_radius * Math.cos(theta);\n\n\t\tlocation[0] = target[0] + nx;\n\t\tlocation[1] = target[1] + ny;\n\t\tlocation[2] = target[2] + nz;\n\t}\n\n\tfunction pan(dx, dy) {\n\t\t// TODO handle the up vector. for now, just assume [0,1,0]\n\t\tconst vx = location[0] - target[0];\n\t\tconst vy = location[1] - target[1];\n\t\tconst vz = location[2] - target[2];\n\n\t\t// delta y = along xz\n\t\t{\n\t\t\tconst direction = normalize([vx, vz]);\n\t\t\tconst x = -direction[0] * dy;\n\t\t\tconst z = -direction[1] * dy;\n\n\t\t\tlocation[0] += x;\n\t\t\tlocation[2] += z;\n\n\t\t\ttarget[0] += x;\n\t\t\ttarget[2] += z;\n\t\t}\n\n\t\t// delta x = tangent to xz\n\t\t{\n\t\t\tconst tangent = normalize([-vz, vx]);\n\t\t\tconst x = tangent[0] * dx;\n\t\t\tconst z = tangent[1] * dx;\n\n\t\t\tlocation[0] += x;\n\t\t\tlocation[2] += z;\n\n\t\t\ttarget[0] += x\n\t\t\ttarget[2] += z;\n\t\t}\n\t}\n\n\tfunction zoom(amount) {\n\t\tlet vx = location[0] - target[0];\n\t\tlet vy = location[1] - target[1];\n\t\tlet vz = location[2] - target[2];\n\n\t\tconst mag = Math.sqrt(vx * vx + vy * vy + vz * vz);\n\n\t\tamount = yootils.clamp(\n\t\t\tamount,\n\t\t\t(mag / maxDistance),\n\t\t\tminDistance ? (mag / minDistance) : Infinity\n\t\t);\n\n\t\tvx /= amount;\n\t\tvy /= amount;\n\t\tvz /= amount;\n\n\t\tlocation[0] = target[0] + vx;\n\t\tlocation[1] = target[1] + vy;\n\t\tlocation[2] = target[2] + vz;\n\t}\n\n\tfunction handle_mousedown(event) {\n\t\tlet last_x = event.clientX;\n\t\tlet last_y = event.clientY;\n\n\t\tconst handle_mousemove = debounce(event => {\n\t\t\tconst x = event.clientX;\n\t\t\tconst y = event.clientY;\n\n\t\t\tconst dx = x - last_x;\n\t\t\tconst dy = y - last_y;\n\n\t\t\tif (event.shiftKey || event.which === 2) {\n\t\t\t\tpan(dx * 0.01, dy * 0.01);\n\t\t\t} else {\n\t\t\t\trotate(dx * 0.005, dy * 0.005);\n\t\t\t}\n\n\t\t\tlast_x = x;\n\t\t\tlast_y = y;\n\t\t});\n\n\t\tfunction handle_mouseup(event) {\n\t\t\twindow.removeEventListener('mousemove', handle_mousemove);\n\t\t\twindow.removeEventListener('mouseup', handle_mouseup);\n\t\t}\n\n\t\twindow.addEventListener('mousemove', handle_mousemove);\n\t\twindow.addEventListener('mouseup', handle_mouseup);\n\t}\n\n\tconst mousewheel_zoom = debounce(event => {\n\t\tzoom(Math.pow(1.004, event.wheelDeltaY));\n\t});\n\n\tfunction handle_mousewheel(event) {\n\t\tevent.preventDefault();\n\t\tmousewheel_zoom(event);\n\t}\n\n\tfunction start_rotate(event) {\n\t\tevent.preventDefault();\n\n\t\tconst touch = event.touches[0];\n\t\tconst finger = touch.identifier;\n\n\t\tlet last_x = touch.clientX;\n\t\tlet last_y = touch.clientY;\n\n\t\tconst handle_touchmove = debounce(event => {\n\t\t\tif (event.touches.length > 1) return;\n\n\t\t\tconst touch = event.touches[0];\n\t\t\tif (touch.identifier !== finger) return;\n\n\t\t\tconst dx = (touch.clientX - last_x);\n\t\t\tconst dy = (touch.clientY - last_y);\n\n\t\t\trotate(dx * 0.003, dy * 0.003);\n\n\t\t\tlast_x = touch.clientX;\n\t\t\tlast_y = touch.clientY;;\n\t\t});\n\n\t\tfunction handle_touchend(event) {\n\t\t\tlet i = event.changedTouches.length;\n\n\t\t\twhile (i--) {\n\t\t\t\tconst touch = event.changedTouches[i];\n\t\t\t\tif (touch.identifier === finger) {\n\t\t\t\t\twindow.removeEventListener('touchmove', handle_touchmove);\n\t\t\t\t\twindow.removeEventListener('touchend', handle_touchend);\n\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\twindow.addEventListener('touchmove', handle_touchmove);\n\t\twindow.addEventListener('touchend', handle_touchend);\n\t}\n\n\tfunction pythag(a, b) {\n\t\treturn Math.sqrt(a * a + b * b);\n\t}\n\n\tfunction start_pan_zoom(event) {\n\t\tevent.preventDefault();\n\n\t\tconst touch_a = event.touches[0];\n\t\tconst touch_b = event.touches[1];\n\n\t\tconst finger_a = touch_a.identifier;\n\t\tconst finger_b = touch_b.identifier;\n\n\t\tlet last_cx = (touch_a.clientX + touch_b.clientX) / 2;\n\t\tlet last_cy = (touch_a.clientY + touch_b.clientY) / 2;\n\t\tlet last_d = pythag(touch_b.clientX - touch_a.clientX, touch_b.clientY - touch_a.clientY);\n\n\t\tconst handle_touchmove = debounce(event => {\n\t\t\tif (event.touches.length !== 2) {\n\t\t\t\talert(`${event.touches.length} touches`);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst touch_a = event.touches[0];\n\t\t\tconst touch_b = event.touches[1];\n\n\t\t\tif (touch_a.identifier !== finger_a && touch_a.identifier !== finger_b) return;\n\t\t\tif (touch_b.identifier !== finger_a && touch_b.identifier !== finger_b) return;\n\n\t\t\tconst cx = (touch_a.clientX + touch_b.clientX) / 2;\n\t\t\tconst cy = (touch_a.clientY + touch_b.clientY) / 2;\n\t\t\tconst d = pythag(touch_b.clientX - touch_a.clientX, touch_b.clientY - touch_a.clientY);\n\n\t\t\tconst dx = cx - last_cx;\n\t\t\tconst dy = cy - last_cy;\n\n\t\t\tpan(dx * 0.01, dy * 0.01);\n\t\t\tzoom(d / last_d);\n\n\t\t\tlast_cx = cx;\n\t\t\tlast_cy = cy;\n\t\t\tlast_d = d;\n\t\t});\n\n\t\tfunction handle_touchend(event) {\n\t\t\tlet i = event.changedTouches.length;\n\n\t\t\twhile (i--) {\n\t\t\t\tconst touch = event.changedTouches[i];\n\t\t\t\tif (touch.identifier === finger_a || touch.identifier === finger_b) {\n\t\t\t\t\twindow.removeEventListener('touchmove', handle_touchmove);\n\t\t\t\t\twindow.removeEventListener('touchend', handle_touchend);\n\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\twindow.addEventListener('touchmove', handle_touchmove);\n\t\twindow.addEventListener('touchend', handle_touchend);\n\t}\n\n\tfunction handle_touchstart(event) {\n\t\tif (event.touches.length === 1) {\n\t\t\tstart_rotate(event);\n\t\t}\n\n\t\tif (event.touches.length === 2) {\n\t\t\tstart_pan_zoom(event);\n\t\t}\n\t}\n\n\tscene.canvas.addEventListener('mousedown', handle_mousedown);\n\tscene.canvas.addEventListener('mousewheel', handle_mousewheel);\n\tscene.canvas.addEventListener('touchstart', handle_touchstart);\n\n\tonDestroy(() => {\n\t\tscene.canvas.removeEventListener('mousedown', handle_mousedown);\n\t\tscene.canvas.removeEventListener('mousewheel', handle_mousewheel);\n\t\tscene.canvas.removeEventListener('touchstart', handle_touchstart);\n\t});\n</script>\n\n<slot {location} {target}></slot>\n","<script>\n\timport { writable } from 'svelte/store';\n\timport { get_scene, get_parent } from '../../internal/index.mjs';\n\timport * as mat4 from 'gl-matrix/mat4';\n\n\texport let location = [0, 0, 0];\n\texport let lookAt = null;\n\texport let up = [0, 1, 0];\n\texport let fov = 60;\n\texport let near = 1;\n\texport let far = 20000;\n\n\tconst { add_camera, update_camera, width, height, get_target } = get_scene();\n\tconst { ctm } = get_parent();\n\n\tconst matrix = mat4.create();\n\tconst world_position = new Float32Array(matrix.buffer, 12 * 4, 3);\n\n\t// should be a const, pending https://github.com/sveltejs/svelte/issues/2728\n\tlet camera = {\n\t\tmatrix,\n\t\tworld_position,\n\t\tview: mat4.create(),\n\t\tprojection: mat4.create()\n\t};\n\n\tlet target = writable(null);\n\n\t$: if (typeof lookAt === 'string') {\n\t\ttarget = get_target(lookAt);\n\t} else {\n\t\ttarget.set(lookAt);\n\t}\n\n\t$: camera.matrix = (\n\t\tmat4.translate(camera.matrix, $ctm, location),\n\t\t$target && mat4.targetTo(camera.matrix, world_position, $target, up),\n\t\tcamera.matrix\n\t);\n\n\t$: camera.view = mat4.invert(camera.view, camera.matrix);\n\n\t$: camera.projection = mat4.perspective(\n\t\tcamera.projection,\n\t\tfov / 180 * Math.PI,\n\t\t$width / $height,\n\t\tnear,\n\t\tfar\n\t);\n\n\t$: update_camera(camera);\n\n\tadd_camera(camera);\n</script>","class GeometryInstance {\n\tconstructor(scene, program, attributes, index, primitive, count) {\n\t\tthis.scene = scene;\n\t\tconst gl = scene.gl;\n\n\t\tthis.attributes = attributes;\n\t\tthis.index = index;\n\t\tthis.primitive = primitive;\n\t\tthis.count = count;\n\n\t\tthis.locations = {};\n\t\tthis.buffers = {};\n\n\t\tfor (const key in attributes) {\n\t\t\tconst attribute = attributes[key];\n\n\t\t\tthis.locations[key] = gl.getAttribLocation(program, key);\n\t\t\tif (this.primitive === 'POINTS') console.log(key, \":\", attribute);\n\n\t\t\tconst buffer = gl.createBuffer();\n\n\t\t\tgl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n\t\t\tgl.bufferData(gl.ARRAY_BUFFER, attribute.data, attribute.dynamic ? gl.DYNAMIC_DRAW : gl.STATIC_DRAW);\n\t\t\tthis.buffers[key] = buffer;\n\t\t}\n\n\t\tif (index) {\n\t\t\tconst buffer = gl.createBuffer();\n\t\t\tgl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, buffer);\n\t\t\tgl.bufferData(gl.ELEMENT_ARRAY_BUFFER, index, gl.STATIC_DRAW);\n\t\t\tthis.buffers.__index = buffer;\n\t\t}\n\t\t\n\t\t// Un-bind buffers\n\t\tgl.bindBuffer(gl.ARRAY_BUFFER, null);\n\t\tgl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null);\n\t}\n\n\tset_attributes(gl) {\n\t\tfor (const key in this.attributes) {\n\t\t\tconst attribute = this.attributes[key];\n\n\t\t\tconst loc = this.locations[key];\n\t\t\tif (loc < 0) continue; // attribute is unused by current program\n\n\t\t\tconst {\n\t\t\t\tsize = 3,\n\t\t\t\ttype = gl.FLOAT,\n\t\t\t\tnormalized = false,\n\t\t\t\tstride = 0,\n\t\t\t\toffset = 0\n\t\t\t} = attribute;\n\n\t\t\t// Bind the position buffer.\n\t\t\tconst buffer = this.buffers[key];\n\t\t\t\n\t\t\t// if (this.primitive = 'POINTS') console.log(\"enableVertexAttribArray on location \", key);\n\n\t\t\tgl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n\n\t\t\t// Turn on the attribute\n\t\t\tgl.enableVertexAttribArray(loc);\n\n\t\t\tgl.vertexAttribPointer(\n\t\t\t\tloc,\n\t\t\t\tsize,\n\t\t\t\ttype,\n\t\t\t\tnormalized,\n\t\t\t\tstride,\n\t\t\t\toffset\n\t\t\t);\n\t\t}\n\t}\n\n\tupdate(k, data, count) {\n\t\tconst scene = this.scene;\n\t\tconst { gl } = scene;\n\n\t\tconst attribute = this.attributes[k];\n\t\tconst buffer = this.buffers[k];\n\n\t\tgl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n\t\tgl.bufferData(gl.ARRAY_BUFFER, attribute.data = data, attribute.dynamic ? gl.DYNAMIC_DRAW : gl.STATIC_DRAW);\n\n\t\tthis.count = count;\n\n\t\tif (count === Infinity) {\n\t\t\tthrow new Error(`GL.Geometry must be instantiated with one or more { data, size } attributes`);\n\t\t}\n\n\t\tscene.invalidate();\n\t}\n}\n\nexport default class Geometry {\n\tconstructor(attributes = {}, opts = {}) {\n\t\tthis.attributes = attributes;\n\n\t\tconst { index, primitive = 'TRIANGLES' } = opts;\n\t\tthis.index = index;\n\t\tthis.primitive = primitive.toUpperCase();\n\t\tthis.count = get_count(attributes);\n\n\t\tthis.instances = new Map();\n\t}\n\n\tinstantiate(scene, program) {\n\t\tif (!this.instances.has(program)) {\n\t\t\tthis.instances.set(program, new GeometryInstance(\n\t\t\t\tscene,\n\t\t\t\tprogram,\n\t\t\t\tthis.attributes,\n\t\t\t\tthis.index,\n\t\t\t\tthis.primitive,\n\t\t\t\tthis.count\n\t\t\t));\n\t\t}\n\n\t\treturn this.instances.get(program);\n\t}\n\n\tupdate(k, data) {\n\t\tthis.attributes[k].data = data;\n\t\tthis.count = get_count(this.attributes);\n\n\t\tthis.instances.forEach(instance => {\n\t\t\tinstance.update(k, data, this.count);\n\t\t});\n\t}\n}\n\nfunction get_count(attributes) {\n\tlet min = Infinity;\n\n\tfor (const k in attributes) {\n\t\tconst count = attributes[k].data.length / attributes[k].size;\n\t\tif (count < min) min = count;\n\t}\n\n\treturn min;\n}\n","import Geometry from './Geometry.mjs';\nimport { memoize } from '../internal/utils.mjs';\n\nexport default memoize((obj = {}) => {\n    const def = { // default box dimensions\n        x:-0.5, y:-0.5, z:-0.5, w:1.0, h:1.0, d:1.0\n    };\n    for (const p in def) {\n        if (!(p in obj)) {\n            obj[p] = def[p];\n        }\n    }\n    // console.log(obj.x, obj.y, obj.z, obj.w, obj.h, obj.d);\n\n    const verts = [\n        [ (obj.x + obj.w), \t(obj.y + obj.h), \t  (obj.z + obj.d) ], \t// 0\n        [ obj.x, \t\t\t\t    (obj.y + obj.h), \t  (obj.z + obj.d) ], \t// 1\n        [ (obj.x + obj.w), \tobj.y, \t\t\t        (obj.z + obj.d) ], \t// 2\n        [ obj.x, \t\t\t      obj.y, \t\t\t\t      (obj.z + obj.d) ], \t// 3\n        [ obj.x, \t\t\t      (obj.y + obj.h), \t  obj.z ], \t\t\t// 4\n        [ (obj.x + obj.w), \t(obj.y + obj.h), \t  obj.z ], \t\t\t// 5\n        [ obj.x, \t\t\t      obj.y, \t\t\t\t      obj.z ], \t\t\t// 6\n        [ (obj.x + obj.w), \tobj.y, \t\t\t\t      obj.z ] \t\t\t// 7\n    ];\n\n    // console.log(verts);\n\n    const vertices = [\n\n        // front: 0 1 2 3\n        verts[0],\n        verts[1],\n        verts[2],\n        verts[3],\n\n        // left: 1 4 3 6\n        verts[1],\n        verts[4],\n        verts[3],\n        verts[6],\n\n        // back: 4 5 6 7\n        verts[4],\n        verts[5],\n        verts[6],\n        verts[7],\n\n        // right: 5 0 7 2\n        verts[5],\n        verts[0],\n        verts[7],\n        verts[2],\n\n        // top: 4 1 5 0\n        verts[4],\n        verts[1],\n        verts[5],\n        verts[0],\n\n        // bottom: 3 6 2 7\n        verts[3],\n        verts[6],\n        verts[2],\n        verts[7]\n\n    ].flat(Infinity);\n\n    // console.log(\"box vertices: \", vertices);\n\n    return new Geometry({\n        position: {\n            data: new Float32Array(vertices),\n            size: 3\n        },\n\n        normal: {\n            data: new Float32Array([\n                // front\n                0, 0, 1,\n                0, 0, 1,\n                0, 0, 1,\n                0, 0, 1,\n\n                // left\n                -1, 0, 0,\n                -1, 0, 0,\n                -1, 0, 0,\n                -1, 0, 0,\n\n                // back\n                0, 0, -1,\n                0, 0, -1,\n                0, 0, -1,\n                0, 0, -1,\n\n                // right\n                1, 0, 0,\n                1, 0, 0,\n                1, 0, 0,\n                1, 0, 0,\n\n                // top\n                0, 1, 0,\n                0, 1, 0,\n                0, 1, 0,\n                0, 1, 0,\n\n                // bottom\n                0, -1, 0,\n                0, -1, 0,\n                0, -1, 0,\n                0, -1, 0\n            ]),\n            size: 3\n        },\n\n        uv: {\n            data: new Float32Array([\n                // front\n                2/4, 1/4,\n                1/4, 1/4,\n                2/4, 2/4,\n                1/4, 2/4,\n\n                // left\n                1/4, 1/4,\n                0/4, 1/4,\n                1/4, 2/4,\n                0/4, 2/4,\n\n                // back\n                4/4, 1/4,\n                3/4, 1/4,\n                4/4, 2/4,\n                3/4, 2/4,\n\n                // right\n                3/4, 1/4,\n                2/4, 1/4,\n                3/4, 2/4,\n                2/4, 2/4,\n\n                // top\n                1/4, 0/4,\n                1/4, 1/4,\n                2/4, 0/4,\n                2/4, 1/4,\n\n                // bottom\n                1/4, 2/4,\n                1/4, 3/4,\n                2/4, 2/4,\n                2/4, 3/4\n            ]),\n            size: 2\n        }\n    }, {\n        index: new Uint32Array([\n            // front\n            0, 1, 2,\n            3, 2, 1,\n\n            // left\n            4, 5, 6,\n            6, 5, 7,\n\n            // back\n            8, 9, 10,\n            11, 10, 9,\n\n            // right\n            12, 13, 14,\n            15, 14, 13,\n\n            // top\n            16, 17, 18,\n            19, 18, 17,\n\n            // bottom\n            20, 21, 22,\n            23, 22, 21\n        ])\n    });\n});\n","import Geometry from './Geometry.mjs';\nimport { memoize } from '../internal/utils.mjs';\n\nexport default memoize(() => {\n\treturn new Geometry({\n\t\tposition: {\n\t\t\tdata: new Float32Array([\n\t\t\t\t 1,  1, 0,\n\t\t\t\t-1,  1, 0,\n\t\t\t\t 1, -1, 0,\n\t\t\t\t-1, -1, 0,\n\t\t\t]),\n\t\t\tsize: 3\n\t\t},\n\n\t\tnormal: {\n\t\t\tdata: new Float32Array([\n\t\t\t\t0, 0, 1,\n\t\t\t\t0, 0, 1,\n\t\t\t\t0, 0, 1,\n\t\t\t\t0, 0, 1\n\t\t\t]),\n\t\t\tsize: 3\n\t\t},\n\n\t\tuv: {\n\t\t\tdata: new Float32Array([\n\t\t\t\t1, 0,\n\t\t\t\t0, 0,\n\t\t\t\t1, 1,\n\t\t\t\t0, 1\n\t\t\t]),\n\t\t\tsize: 2\n\t\t}\n\t}, {\n\t\tindex: new Uint32Array([\n\t\t\t0, 1, 2,\n\t\t\t3, 2, 1\n\t\t])\n\t});\n});","import Geometry from './Geometry.mjs';\nimport { memoize, normalize } from '../internal/utils.mjs';\n\nconst p = 0.85065080835204;\nconst q = 0.5257311121191336;\n\nconst position = new Float32Array([\n\t-q, +p,  0,\n\t+q, +p,  0,\n\t-q, -p,  0,\n\t+q, -p,  0,\n\t 0, -q, +p,\n\t 0, +q, +p,\n\t 0, -q, -p,\n\t 0, +q, -p,\n\t+p,  0, -q,\n\t+p,  0, +q,\n\t-p,  0, -q,\n\t-p,  0, +q\n]);\n\nconst index = new Uint16Array([\n\t0, 11, 5,\n\t0, 5, 1,\n\t0, 1, 7,\n\t0, 7, 10,\n\t0, 10, 11,\n\t1, 5, 9,\n\t5, 11, 4,\n\t11, 10, 2,\n\t10, 7, 6,\n\t7, 1, 8,\n\t3, 9, 4,\n\t3, 4, 2,\n\t3, 2, 6,\n\t3, 6, 8,\n\t3, 8, 9,\n\t4, 9, 5,\n\t2, 4, 11,\n\t6, 2, 10,\n\t8, 6, 7,\n\t9, 8, 1\n]);\n\nconst smooth_geometry = [\n\tnew Geometry({\n\t\tposition: { data: position, size: 3 },\n\t\tnormal: { data: position, size: 3 }\n\t}, { index })\n];\n\nfunction subdivide(geometry) {\n\tconst index = new Uint32Array(geometry.index.length * 4);\n\n\tconst old_position = geometry.attributes.position.data;\n\tconst new_positions = [];\n\tconst lookup = new Map();\n\n\tfunction get_index(point) {\n\t\tconst hash = `${point[0].toPrecision(6)},${point[1].toPrecision(6)},${point[2].toPrecision(6)}`;\n\n\t\tif (lookup.has(hash)) {\n\t\t\treturn lookup.get(hash);\n\t\t}\n\n\t\tconst index = new_positions.length;\n\t\tlookup.set(hash, index);\n\t\tnew_positions[index] = point;\n\t\treturn index;\n\t}\n\n\tfunction mid(a, b) {\n\t\treturn get_index([\n\t\t\t(a[0] + b[0]) / 2,\n\t\t\t(a[1] + b[1]) / 2,\n\t\t\t(a[2] + b[2]) / 2\n\t\t]);\n\t}\n\n\tfor (let i = 0; i < geometry.index.length; i += 3) {\n\t\tconst c0 = geometry.index[i + 0];\n\t\tconst c1 = geometry.index[i + 1];\n\t\tconst c2 = geometry.index[i + 2];\n\n\t\tconst v0 = [\n\t\t\told_position[c0 * 3 + 0],\n\t\t\told_position[c0 * 3 + 1],\n\t\t\told_position[c0 * 3 + 2]\n\t\t];\n\n\t\tconst v1 = [\n\t\t\told_position[c1 * 3 + 0],\n\t\t\told_position[c1 * 3 + 1],\n\t\t\told_position[c1 * 3 + 2]\n\t\t];\n\n\t\tconst v2 = [\n\t\t\told_position[c2 * 3 + 0],\n\t\t\told_position[c2 * 3 + 1],\n\t\t\told_position[c2 * 3 + 2]\n\t\t];\n\n\t\tconst a = mid(v0, v1);\n\t\tconst b = mid(v1, v2);\n\t\tconst c = mid(v2, v0);\n\n\t\t// four new faces\n\t\tconst j = i * 4;\n\n\t\tindex[j + 0] = get_index(v0);\n\t\tindex[j + 1] = a;\n\t\tindex[j + 2] = c;\n\n\t\tindex[j + 3] = get_index(v1);\n\t\tindex[j + 4] = b;\n\t\tindex[j + 5] = a;\n\n\t\tindex[j + 6] = get_index(v2);\n\t\tindex[j + 7] = c;\n\t\tindex[j + 8] = b;\n\n\t\tindex[j + 9] = a\n\t\tindex[j + 10] = b;\n\t\tindex[j + 11] = c;\n\t}\n\n\tconst position = new Float32Array(new_positions.length * 3);\n\tfor (let i = 0; i < new_positions.length; i += 1) {\n\t\tconst vector = normalize(new_positions[i]);\n\n\t\tposition[i * 3 + 0] = vector[0];\n\t\tposition[i * 3 + 1] = vector[1];\n\t\tposition[i * 3 + 2] = vector[2];\n\t}\n\n\treturn new Geometry({\n\t\tposition: { data: position, size: 3 },\n\t\tnormal: { data: position, size: 3 }\n\t}, { index })\n}\n\nfunction create_smooth_geometry(subdivisions = 0) {\n\tif (!smooth_geometry[subdivisions]) {\n\t\tconst geometry = create_smooth_geometry(subdivisions - 1);\n\t\tsmooth_geometry[subdivisions] = subdivide(geometry);\n\t}\n\n\treturn smooth_geometry[subdivisions];\n}\n\nfunction create_flat_geometry(subdivisions) {\n\tthrow new Error(`TODO implement flat sphere geometry`);\n}\n\nexport default memoize(({ subdivisions = 0, shading = 'smooth' } = {}) => {\n\treturn shading === 'smooth'\n\t\t? create_smooth_geometry(subdivisions)\n\t\t: create_flat_geometry(subdivisions);\n});","import Geometry from './Geometry.mjs';\nimport { memoize } from '../internal/utils.mjs';\n\nconst PI = Math.PI;\nconst PI2 = PI * 2;\n\nfunction create_smooth_geometry(turns, bands) {\n\tconst num_vertices = (turns + 1) * (bands + 1);\n\tconst num_faces_per_turn = 2 * (bands - 1);\n\tconst num_faces = num_faces_per_turn * turns;\n\n\tconst position = new Float32Array(num_vertices * 3); // doubles as normal\n\tconst uv = new Float32Array(num_vertices * 2);\n\tconst index = new Uint32Array(num_faces * 3);\n\n\tlet position_index = 0;\n\tlet uv_index = 0;\n\n\tfor (let i = 0; i <= turns; i += 1) {\n\t\tconst u = i / turns;\n\n\t\tfor (let j = 0; j <= bands; j += 1) {\n\t\t\tconst v = j / bands;\n\n\t\t\tconst x = -Math.cos(u * PI2) * Math.sin(v * PI);\n\t\t\tconst y = Math.cos(v * PI);\n\t\t\tconst z = Math.sin(u * PI2) * Math.sin(v * PI);\n\n\t\t\tposition[position_index++] = x;\n\t\t\tposition[position_index++] = y;\n\t\t\tposition[position_index++] = z;\n\n\t\t\tuv[uv_index++] = u;\n\t\t\tuv[uv_index++] = v;\n\t\t}\n\t}\n\n\tlet face_index = 0;\n\n\tfor (let i = 0; i < turns; i += 1) {\n\t\tconst offset = i * (bands + 1);\n\n\t\t// north pole face\n\t\tindex[face_index++] = offset + 0;\n\t\tindex[face_index++] = offset + 1;\n\t\tindex[face_index++] = offset + bands + 2;\n\n\t\tfor (let j = 1; j < bands - 1; j += 1) {\n\t\t\tindex[face_index++] = offset + j;\n\t\t\tindex[face_index++] = offset + j + 1;\n\t\t\tindex[face_index++] = offset + j + bands + 1;\n\n\t\t\tindex[face_index++] = offset + j + bands + 1;\n\t\t\tindex[face_index++] = offset + j + 1;\n\t\t\tindex[face_index++] = offset + j + bands + 2;\n\t\t}\n\n\t\tindex[face_index++] = offset + bands - 1;\n\t\tindex[face_index++] = offset + bands;\n\t\tindex[face_index++] = offset + bands * 2;\n\t}\n\n\treturn new Geometry({\n\t\tposition: {\n\t\t\tdata: position,\n\t\t\tsize: 3\n\t\t},\n\t\tnormal: {\n\t\t\tdata: position,\n\t\t\tsize: 3\n\t\t},\n\t\tuv: {\n\t\t\tdata: uv,\n\t\t\tsize: 2\n\t\t}\n\t}, {\n\t\tindex\n\t});\n}\n\nfunction create_flat_geometry(turns, bands) {\n\tthrow new Error('TODO implement flat geometry');\n}\n\nexport default memoize(({ turns = 8, bands = 6, shading = 'smooth' } = {}) => {\n\treturn shading === 'smooth'\n\t\t? create_smooth_geometry(turns, bands)\n\t\t: create_flat_geometry(turns, bands);\n});","import { create_worker } from './utils.mjs';\n\nconst worker_url = (typeof Blob !== 'undefined' && URL.createObjectURL(new Blob(\n\t[`self.onmessage = e => { self.onmessage = null; eval(e.data); };`],\n\t{ type: 'application/javascript' }\n))) || typeof window !== 'undefined' && window.SVELTE_GL_WORKER_URL;\n\nconst image_cache = new Map();\n\nexport function load_image(src) {\n\tif (!worker_url) {\n\t\tthrow new Error(`Workers cannot be created from Blob URLs in this browser. Please set SVELTE_GL_WORKER_URL`);\n\t}\n\n\tif (!image_cache.has(src)) {\n\t\timage_cache.set(src, new Promise((fulfil, reject) => {\n\t\t\tif (typeof createImageBitmap !== 'undefined') {\n\t\t\t\t// TODO pool workers?\n\t\t\t\tconst worker = create_worker(worker_url, () => {\n\t\t\t\t\tself.onmessage = e => {\n\t\t\t\t\t\tfetch(e.data, { mode: 'cors' })\n\t\t\t\t\t\t\t.then(response => response.blob())\n\t\t\t\t\t\t\t.then(blobData => createImageBitmap(blobData))\n\t\t\t\t\t\t\t.then(bitmap => {\n\t\t\t\t\t\t\t\tself.postMessage({ bitmap }, [bitmap]);\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t.catch(error => {\n\t\t\t\t\t\t\t\tself.postMessage({\n\t\t\t\t\t\t\t\t\terror: {\n\t\t\t\t\t\t\t\t\t\tmessage: error.message,\n\t\t\t\t\t\t\t\t\t\tstack: error.stack\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t});\n\t\t\t\t\t};\n\t\t\t\t});\n\n\t\t\t\tworker.onmessage = e => {\n\t\t\t\t\tif (e.data.error) {\n\t\t\t\t\t\timage_cache.delete(src);\n\t\t\t\t\t\treject(e.data.error);\n\t\t\t\t\t}\n\n\t\t\t\t\telse fulfil(e.data.bitmap);\n\t\t\t\t};\n\n\t\t\t\tworker.postMessage(new URL(src, location.href).href);\n\t\t\t} else {\n\t\t\t\tconst img = new Image();\n\t\t\t\timg.crossOrigin = '';\n\t\t\t\timg.onload = () => fulfil(img);\n\t\t\t\timg.onerror = e => {\n\t\t\t\t\timage_cache.delete(src);\n\t\t\t\t\treject(e);\n\t\t\t\t};\n\t\t\t\timg.src = src;\n\t\t\t}\n\t\t}));\n\t}\n\n\treturn image_cache.get(src);\n}","<script>\n\timport { onMount } from 'svelte';\n\n\texport let title;\n\n\timport * as GL from '@sveltejs/gl';\n\n\texport let color = '#ff3e00';\n\n\tconst data = JSON.parse(document.getElementById('data_in_html').children[0].innerHTML);\n\tconst heightmap = [];\n\tconst gridSizeX = 10;\n\tconst gridSizeZ = 10;\n\n\tfor (let z=0; z < data.length; z++) {\n\t\tconst xx = [];\n\t\tfor (const x of Object.getOwnPropertyNames(data[z])) {\n\t\t\txx.push(data[z][x])\n\t\t}\n\t\theightmap[z] = xx;\n\t}\n\n\tconsole.log(heightmap);\n\n\tlet w = 1;\n\tlet h = 1;\n\tlet d = 1;\n\n\tconst from_hex = hex => parseInt(hex.slice(1), 16);\n\n\tconst light = {};\n\n\tonMount(() => {\n\t\tlet frame;\n\n\t\tconst loop = () => {\n\t\t\tframe = requestAnimationFrame(loop);\n\n\t\t\tlight.x = 3 * Math.sin(Date.now() * 0.001);\n\t\t\tlight.y = 2.5 + 2 * Math.sin(Date.now() * 0.0004);\n\t\t\tlight.z = 3 * Math.cos(Date.now() * 0.002);\n\t\t};\n\n\t\tloop();\n\n\t\treturn () => cancelAnimationFrame(frame);\n\t});\n</script>\n\n<style>\n\t.controls {\n\t\tfloat: right;\n\t\tposition: relative;\n\t\tmargin: 8px;\n\t\tmargin-top: -160px;\n\t\twidth: 300px;\n\t\theight: 128px;\n\t\tpadding: 1em;\n\t\tbackground-color: rgba(255,255,255,0.7);\n\t\tborder-radius: 2px;\n\t\tz-index: 2;\n\t}\n\n\t@media screen and (max-width: 480px) {\n\t\t.controls {\n\t\t\tmargin-top: 8px;\n\t\t}\n\t}\n\n\t\t.keys {\n\t\tposition: absolute;\n\t\twidth: 256px;\n\t\theight: 256px;\n\t\ttop: calc(50vh - (100vw / 5.75));\n\t\tpadding: 24px;\n\t\tbackground-color: transparent;\n\t}\n\n\t.keys * {\n\t\tpadding: 24px;\n\t}\n</style>\n\n<GL.Scene>\n\t<GL.Target id=\"center\" location={[0, h/2, 0]}/>\n\n\t<GL.OrbitControls maxPolarAngle={Math.PI / 2} let:location>\n\t\t<GL.PerspectiveCamera {location} lookAt=\"center\" near={0.01} far={1000}/>\n\t</GL.OrbitControls>\n\n\t<GL.AmbientLight intensity={0.3}/>\n\t<GL.DirectionalLight direction={[-1,-1,-1]} intensity={0.5}/>\n\n\t{#each Array(heightmap.length) as _, k}\n\t\t{#each Array(heightmap[k].length) as _, i}\n\t<!-- box -->\n\t<GL.Mesh geometry={GL.box({ x: 0, y: 0, z: 0 , w: (gridSizeX / heightmap[i].length), h: (1 * heightmap[k][i]), d: (gridSizeZ / heightmap.length) })}\n\t\t\t location={[ (-(gridSizeX / 2) + (i * (gridSizeX / heightmap[0].length))), 0, (-(gridSizeZ / 2) + (k * (gridSizeZ / heightmap.length))) ]}\n\t\t\t rotation={[ 0, 0, 0]}\n\t\t\t scale={[ w, h, d]}\n\t\t\t uniforms={{ color: from_hex(color) }}\n\t/>\n\t\t{/each}\n\t{/each}\n\n\t<!-- spheres -->\n\t<GL.Mesh\n\t\t\tgeometry={GL.sphere({ turns: 36, bands: 36 })}\n\t\t\tlocation={[ -0.5, 2.4, 1.2 ]}\n\t\t\tscale={0.4}\n\t\t\tuniforms={{ color: 0x123456, alpha: 0.9 }}\n\t\t\ttransparent\n\t/>\n\n\t<GL.Mesh\n\t\t\tgeometry={GL.sphere({ turns: 36, bands: 36 })}\n\t\t\tlocation={[ -1.4, 2.6, 0.2 ]}\n\t\t\tscale={0.6}\n\t\t\tuniforms={{ color: 0x336644, alpha: 1.0 }}\n\t\t\ttransparent\n\t/>\n\n\t<!-- floor -->\n\t<GL.Mesh\n\t\t\tgeometry={GL.plane()}\n\t\t\tlocation={[0,-0.01,0]}\n\t\t\trotation={[-90,0,0]}\n\t\t\tscale={10}\n\t\t\tuniforms={{ color: 0xffffff }}\n\t/>\n\n\t<!-- ceiling -->\n\t<GL.Mesh\n\t\t\tgeometry={GL.plane()}\n\t\t\tlocation={[0,5.0,0]}\n\t\t\trotation={[90,0,0]}\n\t\t\tscale={10}\n\t\t\tuniforms={{ color: 0xffffff }}\n\t/>\n\n\t<!-- wall1 -->\n\t<GL.Mesh\n\t\t\tgeometry={GL.plane()}\n\t\t\tlocation={[0,-0.01,-10.0]}\n\t\t\trotation={[0,0,0]}\n\t\t\tscale={10}\n\t\t\tuniforms={{ color: 0xffffff }}\n\t/>\n\n\t<!-- wall2 -->\n\t<GL.Mesh\n\t\t\tgeometry={GL.plane()}\n\t\t\tlocation={[10.0,-0.01,0.0]}\n\t\t\trotation={[0,-90,0]}\n\t\t\tscale={10}\n\t\t\tuniforms={{ color: 0xffffff }}\n\t/>\n\n\t<!-- wall3 -->\n\t<GL.Mesh\n\t\t\tgeometry={GL.plane()}\n\t\t\tlocation={[-10.0,-0.01,0.0]}\n\t\t\trotation={[0,90,0]}\n\t\t\tscale={10}\n\t\t\tuniforms={{ color: 0xffffff }}\n\t/>\n\n\t<!-- moving light -->\n\t<GL.Group location={[light.x,light.y,light.z]}>\n\t\t<GL.Mesh\n\t\t\t\tgeometry={GL.sphere({ turns: 36, bands: 36 })}\n\t\t\t\tlocation={[0,0.2,0]}\n\t\t\t\tscale={0.1}\n\t\t\t\tuniforms={{ color: 0xffffff, emissive: 0xff0000 }}\n\t\t/>\n\n\t\t<GL.PointLight\n\t\t\t\tlocation={[0,0,0]}\n\t\t\t\tcolor={0xff0000}\n\t\t\t\tintensity={0.6}\n\t\t/>\n\t</GL.Group>\n</GL.Scene>\n\n<div class=\"controls\">\n\t<label>\n\t\t<input type=\"color\" style=\"height: 40px\" bind:value={color}>\n\t</label>\n\n\t<label>\n\t\t<input type=\"range\" bind:value={w} min={0.1} max={5} step={0.1}> width ({w})\n\t</label>\n\n\t<label>\n\t\t<input type=\"range\" bind:value={h} min={0.1} max={5} step={0.1}> height ({h})\n\t</label>\n\n\t<label>\n\t\t<input type=\"range\" bind:value={d} min={0.1} max={5} step={0.1}> depth ({d})\n\t</label>\n</div>\n","<script>\n    import {  createEventDispatcher } from 'svelte';\n\n    export let title;\n    export let color = '#ff3e00';\n\n    let navContext;\n\n    export let optionFlags = [];\n\n    export let viewLocation, viewTarget;\n\n    let dispatch = createEventDispatcher();\n\n    let formatPlayTime = (time) => \"\" + (new Date(time).toString());\n\n    let mouse_x = 0, mouse_y = 0, mouse_down = false, mouse_disabled = false;\n\n    let sinceLastMovementEvent = 0;\n\n    export const init = function () {\n        console.log(\"Initializing Navigation Controls...\");\n\n        document.querySelectorAll('.controls h4').forEach(c => {\n            console.log(c);\n\n            const scrollLength = 3 * window.innerHeight / 4;\n            c.addEventListener('click', function (event) {\n                let scrollInterval = 33;\n                let scrollTime = 533;\n                let scrolled = 0\n\n                const startScroll = setInterval(function () {\n                    if (scrolled < scrollLength) {\n                        scroll({top: scrolled, left: 0});\n                    }\n                    scrolled += Math.floor(scrollLength / (scrollTime / scrollInterval));\n                }, scrollInterval);\n\n            });\n\n            c.title = \"Click To See Article\";\n        });\n\n\n        document.querySelectorAll('canvas').forEach(c => {\n            console.log(c);\n            c.addEventListener('wheel', function (event) {\n                const wheelEvent = (event || window['event']);\n\n                if (((new Date()).getTime() - sinceLastMovementEvent) > 66) {\n\n                    sinceLastMovementEvent = (new Date()).getTime();\n\n                    if (wheelEvent.deltaY < 0) {\n                        dispatch('up');\n                    } else if (wheelEvent.deltaY > 0) {\n                        dispatch('down');\n                    }\n                }\n\n                wheelEvent.preventDefault();\n            });\n        })\n\n        document.querySelectorAll('canvas').forEach(c => {\n            console.log(c);\n            c.addEventListener('keydown', function (event) {\n                const kbEvent = (event || window['event']); // cross-browser shenanigans\n\n                if (((new Date()).getTime() - sinceLastMovementEvent) > 66) {\n\n                    // console.log(kbEvent);\n\n                    sinceLastMovementEvent = (new Date()).getTime();\n\n                    if (kbEvent['keyCode'] === 32) { // spacebar\n\n                        kbEvent.preventDefault();\n\n                        return true;\n\n                    } else if (kbEvent['keyCode'] === 38 || kbEvent['keyCode'] === 87) { // up || W\n\n                        dispatch('forward');\n\n                        kbEvent.preventDefault();\n\n                        return true;\n\n                    } else if (kbEvent['keyCode'] === 40 || kbEvent['keyCode'] === 83) { // down || S\n\n                        dispatch('backward');\n\n                        kbEvent.preventDefault();\n\n                        return true;\n\n                    } else if (kbEvent['keyCode'] === 37 || kbEvent['keyCode'] === 65) { // left || A\n\n                        dispatch('left');\n\n                        kbEvent.preventDefault();\n\n                        return true;\n\n                    } else if (kbEvent['keyCode'] === 39 || kbEvent['keyCode'] === 68) { // right || D\n\n                        dispatch('right');\n\n                        kbEvent.preventDefault();\n\n                        return true;\n\n                    } else {\n                        console.log('Keyboard Event: ', kbEvent['keyCode']);\n\n                        return false;\n                    }\n                }\n            });\n        });\n    };\n</script>\n\n<style>\n    .controls h4 {\n        cursor: pointer;\n        pointer-events: all;\n    }\n</style>\n\n<div class=\"controls\">\n\n    <h4>{ title }</h4>\n\n    {#if (optionFlags['labels'].length > 0 && optionFlags['values'].length > 0)}\n        {#each optionFlags['values'] as option, o}\n        <label>\n            <input type=\"checkbox\" bind:checked={option} /> {optionFlags['labels'][o]}\n        </label><br />\n        {/each}\n    {/if}\n\n</div>\n","<script>\n    import { onMount } from 'svelte';\n    import * as GL from '@sveltejs/gl';\n    import NavigationControls from './components/NavigationControls.svelte';\n\n    export let title;\n\n    export let options = {\n        labels: [],\n        values: []\n    };\n\n    // initial view\n    let init = false;\n    let location = new Float32Array([ 0, 10, 5 ]);\n    let target = new Float32Array([0, 1, 0]);\n\n    let w = 1;\n    let h = 1;\n    let d = 1;\n\n    const light = {};\n\n    const heightmap = [];\n    const gridSizeX = 10;\n    const gridSizeZ = 10;\n\n    const captureViewDirection = (loc, tgt) => {\n        console.log(\"location: \", loc, \"\\n\", \"target: \", tgt);\n        return \"\";\n    };\n\n    export let color = '#ff3e00';\n\n    function adjustColor (clr, height = 1) {\n        const r = parseInt('0x' + clr.substr(1, 2), 16),\n                g = parseInt('0x' + clr.substr(3, 2), 16),\n                b = parseInt('0x' + clr.substr(5, 2), 16);\n\n        const hr = Math.floor(r * (height / 0.25)),\n                hb = Math.floor(b * (height / 0.25));\n        return Math.abs((((hr < 255) ? hr : r) << 16) + (g << 8) + ((hb < 255) ? hb : b));\n    }\n\n    /* This is a helper callback to bind custom uniforms/attributes\n     * and to pass custom buffers, like the ad-hoc texture coords\n     * used in normal-selected texture shader below. I inserted a\n     * hook directly in the @sveltejs/gl source for this purpose\n     */\n    let process_extra_shader_components = (gl, material, model) => {\n        // console.log(\"Process Extra Shader Components\");\n        const program = material.program;\n    };\n\n    let updateWorld = (event) => {\n        console.log(event);\n    };\n\n    let navControlInit;\n\n    let webgl;\n\n    onMount(() => {\n\n        let frame;\n\n        if (!init) {\n            init = true;\n\n            const data = JSON.parse(document.getElementById('gl_data_in_html').children[0].innerHTML);\n\n            for (let z = 0; z < data.length; z++) {\n                const xx = [];\n                for (const x of Object.getOwnPropertyNames(data[z])) {\n                    xx.push(data[z][x])\n                }\n                heightmap[z] = xx;\n            }\n\n            console.log(heightmap);\n\n            if (typeof navControlInit === 'function') {\n                navControlInit();\n            }\n\n            const loop = () => {\n                frame = requestAnimationFrame(loop);\n\n                light.x = 3 * Math.sin(Date.now() * 0.001);\n                light.y = 2.5 + 2 * Math.sin(Date.now() * 0.0004);\n                light.z = 3 * Math.cos(Date.now() * 0.002);\n            };\n\n            loop();\n        }\n\n        return () => cancelAnimationFrame(frame);\n    });\n</script>\n\n<style>\n    .controls {\n        margin-top: -160px;\n        /*height: 128px;*/\n    }\n\n    .container, canvas {\n        position: relative;\n        width: 100%;\n        height: 100%;\n        display: block;\n        overflow: hidden;\n        pointer-events: none;\n    }\n</style>\n\n<GL.Scene style=\"pointer-events: none;\" bind:gl={webgl} backgroundOpacity=1.0 process_extra_shader_components={process_extra_shader_components}>\n    <GL.Target id=\"center\" location={[0, h/2, 0]}/>\n\n    <GL.OrbitControls maxPolarAngle={Math.PI / 2} {location} {target}>\n        {captureViewDirection(location, target)}\n        <GL.PerspectiveCamera {location} lookAt=\"center\" near={0.01} far={1000}/>\n    </GL.OrbitControls>\n\n    <GL.AmbientLight intensity={0.3}/>\n    <GL.DirectionalLight direction={[-1,-1,-1]} intensity={0.5}/>\n\n    {#each Array(heightmap.length) as _, k}\n        {#each Array(heightmap[k].length) as _, i}\n        <!-- box -->\n            <GL.Mesh geometry={GL.box({ x: 0, y: 0, z: 0 , w: (gridSizeX / heightmap[i].length), h: (1 * heightmap[k][i]), d: (gridSizeZ / heightmap.length) })}\n                     location={[ (-(gridSizeX / 2) + (i * (gridSizeX / heightmap[0].length))), 0, (-(gridSizeZ / 2) + (k * (gridSizeZ / heightmap.length))) ]}\n                     rotation={[ 0, 0, 0]}\n                     scale={[ w, h, d]}\n                     uniforms={{ color: adjustColor(color, heightmap[k][i]) }}\n            />\n        {/each}\n    {/each}\n\n    <!-- moving light -->\n    <GL.Group location={[light.x,light.y,light.z]}>\n        <GL.Mesh\n                geometry={GL.sphere({ turns: 36, bands: 36 })}\n                location={[0,0.2,0]}\n                scale={0.1}\n                uniforms={{ color: 0xffffff, emissive: 0xff0000 }}\n        />\n\n        <GL.PointLight\n                location={[0,0,0]}\n                color={0xff0000}\n                intensity={0.6}\n        />\n    </GL.Group>\n</GL.Scene>\n\n<NavigationControls\n        bind:init={navControlInit}\n        bind:optionFlags={options}\n        bind:viewLocation={location}\n        bind:viewTarget={target}\n        title={title}\n        on:move={(event) => updateWorld(event)}/>\n\n<div class=\"controls\">\n    <label>\n        <input type=\"color\" style=\"height: 40px\" bind:value={color}>\n    </label>\n\n    <label>\n        <input type=\"range\" bind:value={w} min={0.1} max={5} step={0.1}> width ({w})\n    </label>\n\n    <label>\n        <input type=\"range\" bind:value={h} min={0.1} max={5} step={0.1}> height ({h})\n    </label>\n\n    <label>\n        <input type=\"range\" bind:value={d} min={0.1} max={5} step={0.1}> depth ({d})\n    </label>\n</div>\n","<script>\n\timport { createEventDispatcher } from 'svelte';\n\n\texport let value = '';\n\n\tconst dispatch = createEventDispatcher();\n\n\tconst select = num => () => value = `${value}${num}`;\n\tconst clear  = () => value = '';\n\tconst submit = () => dispatch('submit');\n\n\tdocument.addEventListener('keydown', function (event) {\n\t\tconst kbEvent = (event || window['event']); // cross-browser shenanigans\n\n\t\tconsole.log(kbEvent);\n\n\t\tif (kbEvent['keyCode'] === 13) { // Enter\n\n\t\t\tsubmit();\n\n\t\t\tkbEvent.preventDefault();\n\n\t\t} else if (kbEvent['keyCode'] === 8 || kbEvent['keyCode'] === 46) { // Backspace or Delete\n\n\t\t\tclear();\n\n\t\t\tkbEvent.preventDefault();\n\n\t\t} else if (47 < kbEvent['keyCode'] && kbEvent['keyCode'] < 58) { // numbers\n\n\t\t\tvalue = `${value}${kbEvent['key']}`;\n\t\t\tconsole.log(value);\n\n\t\t\tkbEvent.preventDefault();\n\n\t\t} else {\n\t\t\tconsole.log('Keyboard Event: ', kbEvent['keyCode']);\n\t\t}\n\n\t\treturn true;\n\t});\n</script>\n\n<style>\n\t.keypad {\n\t\tdisplay: grid;\n\t\tgrid-template-columns: repeat(3, 5em);\n\t\tgrid-template-rows: repeat(4, 3em);\n\t\tgrid-gap: 0.5em\n\t}\n\n\tbutton {\n\t\tmargin: 0\n\t}\n</style>\n\n<div class=\"keypad\">\n\t<button on:click={select(1)}>1</button>\n\t<button on:click={select(2)}>2</button>\n\t<button on:click={select(3)}>3</button>\n\t<button on:click={select(4)}>4</button>\n\t<button on:click={select(5)}>5</button>\n\t<button on:click={select(6)}>6</button>\n\t<button on:click={select(7)}>7</button>\n\t<button on:click={select(8)}>8</button>\n\t<button on:click={select(9)}>9</button>\n\n\t<button disabled={!value} on:click={clear}>clear</button>\n\t<button on:click={select(0)}>0</button>\n\t<button disabled={!value} on:click={submit}>submit</button>\n</div>\n","<script>\n\timport { onMount } from 'svelte';\n\timport Keypad from './components/Keypad.svelte';\n\n\texport let title;\n\n\tlet pin;\n\tlet view;\n\t$: view = pin ? pin.replace(/\\d(?!$)/g, '*') : 'enter your pin';\n\n\tlet azureFunctionURL = \"/api/message/$PARAMS\"\n\t// following does not work because CORS disallowed on Azure Functions by default...\n\t// let azureFunctionURL = \"https://azure-functions-api-20201113142914242.azurewebsites.net/api/message$PARAMScode=k8YsLlyJaTDVJZhzVnShRDkjAs1vokip1eiBvRFBdMZiJkyzDlWTsA==\"\n\n\tfunction handleSubmit () {\n\t\t(async function() {\n\t\t\ttry {\n\t\t\t\tlet {text} = await (await fetch(azureFunctionURL.replace('$PARAMS', (!!pin) ? '?name=' + pin : ''))).json();\n\t\t\t\t// let {text} = await (await fetch(azureFunctionURL.replace('$PARAMS', (!!pin) ? '?name=' + pin +'&' : '?')).json();\n\t\t\t\tdocument.querySelector('#name').textContent = text;\n\n\t\t\t} catch (e) {\n\t\t\t\tconsole.error(e);\n\t\t\t}\n\t\t}());\n\n\t\tconsole.log(`submitted ${pin}`);\n\t}\n\n\timport * as GL from '@sveltejs/gl';\n\n\texport let color = '#ff3e00';\n\tlet w = 1;\n\tlet h = 1;\n\tlet d = 1;\n\n\tconst from_hex = hex => parseInt(hex.slice(1), 16);\n\n\tconst light = {};\n\n\tonMount(async () => {\n\t\tlet frame;\n\n\t\tconst loop = () => {\n\t\t\tframe = requestAnimationFrame(loop);\n\n\t\t\tlight.x = 3 * Math.sin(Date.now() * 0.001);\n\t\t\tlight.y = 2.5 + 2 * Math.sin(Date.now() * 0.0004);\n\t\t\tlight.z = 3 * Math.cos(Date.now() * 0.002);\n\t\t};\n\n\t\tloop();\n\n\t\treturn () => cancelAnimationFrame(frame);\n\t});\n</script>\n\n<style>\n\t.container, canvas {\n\t\tposition: relative;\n\t\twidth: 100%;\n\t\theight: 100%;\n\t\tdisplay: block;\n\t\toverflow: hidden;\n\t\tpointer-events: none;\n\t}\n\n\t.keys {\n\t\ttop: calc(100px + (100vw / 5.75));\n\t\tright: 2px;\n\t\tmargin: 8px 10% 8px auto;\n\t\tposition: absolute;\n\t\twidth: 256px;\n\t\theight: 256px;\n\t\tpadding: 24px;\n\t\tbackground-color: transparent;\n\t\tz-index: 2;\n\t}\n\n\t.keys * {\n\t\tpadding: 24px;\n\t}\n</style>\n\n<GL.Scene style=\"pointer-events: none;\">\n\t<GL.Target id=\"center\" location={[0, h/2, 0]}/>\n\n\t<GL.OrbitControls maxPolarAngle={Math.PI / 2} let:location>\n\t\t<GL.PerspectiveCamera {location} lookAt=\"center\" near={0.01} far={1000}/>\n\t</GL.OrbitControls>\n\n\t<GL.AmbientLight intensity={0.3}/>\n\t<GL.DirectionalLight direction={[-1,-1,-1]} intensity={0.5}/>\n\n\t<!-- box -->\n\t<GL.Mesh\n\t\t\tgeometry={GL.box({})}\n\t\t\tlocation={[0,h/2,0]}\n\t\t\trotation={[0,-20,0]}\n\t\t\tscale={[w,h,d]}\n\t\t\tuniforms={{ color: from_hex(color) }}\n\t/>\n\n\t<!-- spheres -->\n\t<GL.Mesh\n\t\t\tgeometry={GL.sphere({ turns: 36, bands: 36 })}\n\t\t\tlocation={[-0.5, 0.4, 1.2]}\n\t\t\tscale={0.4}\n\t\t\tuniforms={{ color: 0x123456, alpha: 0.9 }}\n\t\t\ttransparent\n\t/>\n\n\t<GL.Mesh\n\t\t\tgeometry={GL.sphere({ turns: 36, bands: 36 })}\n\t\t\tlocation={[-1.4, 0.6, 0.2]}\n\t\t\tscale={0.6}\n\t\t\tuniforms={{ color: 0x336644, alpha: 1.0 }}\n\t\t\ttransparent\n\t/>\n\n\t<!-- floor -->\n\t<GL.Mesh\n\t\t\tgeometry={GL.plane()}\n\t\t\tlocation={[0,-0.01,0]}\n\t\t\trotation={[-90,0,0]}\n\t\t\tscale={10}\n\t\t\tuniforms={{ color: 0xffffff }}\n\t/>\n\n\t<!-- ceiling -->\n\t<GL.Mesh\n\t\t\tgeometry={GL.plane()}\n\t\t\tlocation={[0,5.0,0]}\n\t\t\trotation={[90,0,0]}\n\t\t\tscale={10}\n\t\t\tuniforms={{ color: 0xffffff }}\n\t/>\n\n\t<!-- wall1 -->\n\t<GL.Mesh\n\t\t\tgeometry={GL.plane()}\n\t\t\tlocation={[0,-0.01,-10.0]}\n\t\t\trotation={[0,0,0]}\n\t\t\tscale={10}\n\t\t\tuniforms={{ color: 0xffffff }}\n\t/>\n\n\t<!-- wall2 -->\n\t<GL.Mesh\n\t\t\tgeometry={GL.plane()}\n\t\t\tlocation={[10.0,-0.01,0.0]}\n\t\t\trotation={[0,-90,0]}\n\t\t\tscale={10}\n\t\t\tuniforms={{ color: 0xffffff }}\n\t/>\n\n\t<!-- wall3 -->\n\t<GL.Mesh\n\t\t\tgeometry={GL.plane()}\n\t\t\tlocation={[-10.0,-0.01,0.0]}\n\t\t\trotation={[0,90,0]}\n\t\t\tscale={10}\n\t\t\tuniforms={{ color: 0xffffff }}\n\t/>\n\n\t<!-- moving light -->\n\t<GL.Group location={[light.x,light.y,light.z]}>\n\t\t<GL.Mesh\n\t\t\t\tgeometry={GL.sphere({ turns: 36, bands: 36 })}\n\t\t\t\tlocation={[0,0.2,0]}\n\t\t\t\tscale={0.1}\n\t\t\t\tuniforms={{ color: 0xffffff, emissive: 0xff0000 }}\n\t\t/>\n\n\t\t<GL.PointLight\n\t\t\t\tlocation={[0,0,0]}\n\t\t\t\tcolor={0xff0000}\n\t\t\t\tintensity={0.6}\n\t\t/>\n\t</GL.Group>\n</GL.Scene>\n\n<div class=\"controls\">\n\t<label>\n\t\t<input type=\"color\" style=\"height: 40px\" bind:value={color}>\n\t</label>\n\n\t<label>\n\t\t<input type=\"range\" bind:value={w} min={0.1} max={5} step={0.1}> width ({w})\n\t</label>\n\n\t<label>\n\t\t<input type=\"range\" bind:value={h} min={0.1} max={5} step={0.1}> height ({h})\n\t</label>\n\n\t<label>\n\t\t<input type=\"range\" bind:value={d} min={0.1} max={5} step={0.1}> depth ({d})\n\t</label>\n</div>\n\n<div class=\"controls keys\">\n\t<h1 style=\"color: {pin ? '#999' : '#fff'}\">{view}</h1>\n\t<Keypad bind:value={pin} on:submit={handleSubmit}/>\n</div>\n\n<br />\n<br />\n<br />\n\n<p>Loading content from Azure Function API: <b id=\"name\">...</b></p>\n","import './app.css';\nimport App from './apps/App.svelte';\nimport GLApp from './apps/GLApp.svelte';\nimport VizRApp from './apps/VizRApp.svelte';\nimport TechApp from './apps/TechApp.svelte';\n\nconst appId = 'svelte-app';\nconst appElement = document.getElementById(appId);\nexport default ( // Check if app id exists in DOM\n    appElement !== null &&\n    (appElement.constructor.name === 'HTMLElement' ||\n        appElement.constructor.name === 'HTMLDivElement')\n    ) ?\n    new App({\n        target: appElement,\n        props: {\n            greeting:\n`Hooray 🎉 - you've built this with <a href='https://github.com/dancingfrog/sveltr' target='_blank'>Sveltr</a>!`\n        }\n    }) : {};\n\n\nconst techAppId = 'tech-app';\nconst techAppElement = document.getElementById(techAppId);\nexport const techApp = (\n    techAppElement !== null &&\n    (techAppElement.constructor.name === 'HTMLElement' ||\n        techAppElement.constructor.name === 'HTMLDivElement')\n    ) ?\n    new TechApp({\n        target: techAppElement,\n        props: {\n            title: '🦊 Hello Svelte!'\n        }\n    }) : {};\n\n\nconst glAppId = 'gl-app';\nconst glAppElement = document.getElementById(glAppId);\nexport const glApp = (\n    glAppElement !== null &&\n    (glAppElement.constructor.name === 'HTMLElement' ||\n        glAppElement.constructor.name === 'HTMLDivElement')\n    ) ?\n    new GLApp({\n        target: glAppElement,\n        props: {\n            title: '🦊 Hello SvelteGL!'\n        }\n    }) : {};\n\n\nconst vizrAppId = 'viz-r';\nconst vizrAppElement = document.getElementById(vizrAppId);\nexport const vizrApp = (\n    vizrAppElement !== null &&\n    (vizrAppElement.constructor.name === 'HTMLElement' ||\n        vizrAppElement.constructor.name === 'HTMLDivElement')\n    ) ?\n    new VizRApp({\n        target: vizrAppElement,\n        props: {\n            title: 'Visualizing R Data with Sveltr'\n        }\n    }) : {};\n"],"names":["noop","assign","tar","src","k","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","subscribe","store","callbacks","unsub","unsubscribe","component_subscribe","component","callback","$$","on_destroy","push","create_slot","definition","ctx","$$scope","slot_ctx","get_slot_context","slice","update_slot","slot","slot_definition","dirty","get_slot_changes_fn","get_slot_context_fn","slot_changes","lets","undefined","merged","len","Math","max","length","i","get_slot_changes","slot_context","p","exclude_internal_props","props","result","set_store_value","ret","value","set","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","destroy_each","iterations","detaching","d","element","name","document","createElement","text","data","createTextNode","space","empty","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","removeAttribute","getAttribute","setAttribute","to_number","children","Array","from","childNodes","set_data","wholeText","set_input_value","input","set_style","key","important","style","setProperty","crossorigin","current_component","is_crossorigin","window","parent","error","set_current_component","get_current_component","Error","onMount","on_mount","onDestroy","createEventDispatcher","type","detail","e","createEvent","initCustomEvent","custom_event","call","setContext","context","getContext","get","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","schedule_update","then","flush","add_render_callback","add_flush_callback","flushing","seen_callbacks","Set","update","pop","has","add","clear","fragment","before_update","after_update","outros","outroing","group_outros","r","c","check_outros","transition_in","block","local","transition_out","o","globals","globalThis","global","bind","index","bound","create_component","mount_component","m","new_on_destroy","map","filter","destroy_component","make_dirty","fill","init","instance","create_fragment","not_equal","parent_component","prop_values","Map","skip_bound","ready","hydrate","nodes","l","intro","SvelteComponent","this","$destroy","indexOf","splice","$$props","obj","$$set","keys","canvas","greeting","frame","fillStyle","fillRect","width","height","font","fillText","loop","requestAnimationFrame","imageData","getImageData","x","y","t","performance","now","sin","g","cos","putImageData","cancelAnimationFrame","subscriber_queue","writable","stop","start","subscribers","new_value","run_queue","s","invalidate","subscriber","RENDERER","LAYER","PARENT","get_scene","get_parent","remove_item","array","item","remove_index","process_color","color","Float32Array","normalize","out","vector","total","mag","sqrt","memoize","cache","args","hash","JSON","stringify","ARRAY_TYPE","glMatrix","invert","a00","a01","a02","a03","a10","a11","a12","a13","a20","a21","a22","a23","a30","a31","a32","a33","b00","b01","b02","b03","b04","b05","b06","b07","b08","b09","b10","b11","det","multiply","b0","b1","b2","b3","translate","v","z","fromRotationTranslationScale","q","w","x2","y2","z2","xx","xy","xz","yy","yz","zz","wx","wy","wz","sx","sy","sz","targetTo","eye","up","eyex","eyey","eyez","upx","upy","upz","z0","z1","x0","x1","fromValues","cross","ax","ay","az","bx","by","bz","transformMat4","hypot","arguments","vec","computed_style","getComputedStyle","z_index","parseInt","zIndex","position","iframe","tabIndex","source","contentWindow","onload","get_visibility","IntersectionObserver","observer","entries","el","bcr","getBoundingClientRect","bottom","right","top","innerHeight","left","innerWidth","is_intersecting","observe","unobserve","background","backgroundOpacity","fog","pixelRatio","use_fog","visible","pending","gl","process_extra_shader_components","draw","camera_stores","camera_matrix","view","projection","root_layer","create_layer","child_index","meshes","transparent_meshes","child_layers","layer","needs_sort","needs_transparency_sort","add_mesh","mesh","existing","transparent","add_child","child_layer","default_camera","camera","lights","ambient","directional","point","add_to","targets","camera_position_changed_since_last_render","scene","defines","join","add_camera","_camera","matrix","update_camera","add_directional_light","add_point_light","add_ambient_light","get_target","id","origin","mat4.create","ctm","get_matrix_world","clearColor","force","dimensions_need_update","DPR","devicePixelRatio","$width","$height","viewport","$visible","blendFunc","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","enable","BLEND","CULL_FACE","DEPTH_TEST","depthFunc","LEQUAL","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","ambient_light","reduce","intensity","min","previous_program","previous_state","enabled","disable","render_mesh","model","model_inverse_transpose","geometry","material","depthTest","doubleSided","blendFuncSeparate","ONE","set_attributes","program","useProgram","uniform3fv","uniform_locations","AMBIENT_LIGHT","FOG_COLOR","bg","uniform1f","FOG_DENSITY","DIRECTIONAL_LIGHTS","light","direction","POINT_LIGHTS","location","CAMERA_WORLD_POSITION","world_position","uniformMatrix4fv","VIEW","PROJECTION","MODEL","MODEL_INVERSE_TRANSPOSE","apply_uniforms","bindBuffer","ELEMENT_ARRAY_BUFFER","buffers","__index","drawElements","primitive","UNSIGNED_INT","primitiveType","drawArrays","count","render_layer","sort","depthMask","clearDepth","sort_transparent_meshes","timeout","setTimeout","clientWidth","clientHeight","getExtension","loseContext","clearTimeout","lookup","mat4.multiply","slerp","omega","cosom","sinom","scale0","scale1","aw","bw","acos","fromEuler","halfToRad","PI","cx","cy","cz","tmpvec3","xUnitVec3","yUnitVec3","temp1","temp2","matr","vec3","lookAt","rotation","scale","parent_ctm","quaternion","quat.create","buffer","set_parent","scale_array","$target","mat4.translate","$parent_ctm","mat4.targetTo","mat4.scale","$ctm","quat.fromEuler","mat4.fromRotationTranslationScale","caches","setters","loc","uniform2fv","uniform4fv","uniformMatrix2fv","uniformMatrix3fv","activeTexture","bindTexture","TEXTURE_2D","texture","uniform1i","compile","vert","frag","createProgram","attachShader","create_shader","VERTEX_SHADER","FRAGMENT_SHADER","linkProgram","getProgramParameter","LINK_STATUS","console","log","getProgramInfoLog","create_program","uniforms","n","ACTIVE_UNIFORMS","getActiveUniform","size","getUniformLocation","setter","get_uniforms","attributes","ACTIVE_ATTRIBUTES","getActiveAttrib","replace","getAttribLocation","get_attributes","pad","num","String","repeat","str","label","shader","createShader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","match","exec","lines","split","abs","line","tabs","indent","Material","vertName","substr","fragName","uniform","path","parts","part","shift","next","test","deep_set","_this","attribute_locations","raw_values","values","texture_index","processor","_this2","instantiate","_","builtins","_this3","vert_default","frag_default","out2","destroy","material_instance","set_uniforms","geometry_instance","mat4.invert","mat4.transpose","multiplied","vec3.transformMat4","vec3.create","vec3.normalize","clamp","debounce","scheduled","release","pythag","minDistance","maxDistance","Infinity","minPolarAngle","maxPolarAngle","rotate","vx","vy","vz","radius","theta","atan2","phi","yootils.clamp","sin_phi_radius","nx","ny","nz","pan","dx","dy","tangent","zoom","amount","handle_mousedown","last_x","clientX","last_y","clientY","handle_mousemove","shiftKey","which","handle_mouseup","mousewheel_zoom","pow","wheelDeltaY","handle_mousewheel","preventDefault","handle_touchstart","touches","touch","finger","identifier","handle_touchmove","handle_touchend","changedTouches","start_rotate","touch_a","touch_b","finger_a","finger_b","last_cx","last_cy","last_d","alert","start_pan_zoom","fov","near","far","fovy","aspect","nf","f","tan","mat4.perspective","GeometryInstance","locations","createBuffer","ARRAY_BUFFER","bufferData","dynamic","DYNAMIC_DRAW","STATIC_DRAW","FLOAT","normalized","stride","offset","enableVertexAttribArray","vertexAttribPointer","Geometry","opts","toUpperCase","get_count","instances","def","h","verts","vertices","flat","normal","uv","Uint32Array","Uint16Array","PI2","create_smooth_geometry","turns","bands","num_vertices","num_faces","position_index","uv_index","u","j","face_index","create_flat_geometry","shading","Blob","URL","createObjectURL","SVELTE_GL_WORKER_URL","GL.box","gridSizeX","gridSizeZ","GL.sphere","emissive","alpha","GL.plane","title","parse","getElementById","innerHTML","heightmap","getOwnPropertyNames","Date","hex","optionFlags","viewLocation","viewTarget","dispatch","sinceLastMovementEvent","querySelectorAll","scrollLength","scrolled","setInterval","scroll","floor","wheelEvent","getTime","deltaY","kbEvent","adjustColor","clr","hr","hb","labels","navControlInit","webgl","updateWorld","tgt","submit","pin","fetch","json","querySelector","textContent","appElement","constructor","techAppElement","techApp","glAppElement","glApp","vizrAppElement","vizrApp"],"mappings":"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"}